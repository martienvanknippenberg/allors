// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface ISandbox : Allors.IObjectBase
	{


		global::System.String InvisibleValue 
		{
			get;
			set;
		}

		bool ExistInvisibleValue{get;}

		void RemoveInvisibleValue();


		global::Allors.Extent<ISandbox> InvisibleManies
		{ 
			get;
			set;
		}

		void AddInvisibleMany (ISandbox value);

		void RemoveInvisibleMany (ISandbox value);

		bool ExistInvisibleManies
		{
			get;
		}

		void RemoveInvisibleManies();


		ISandbox InvisibleOne
		{ 
			get;
			set;
		}

		bool ExistInvisibleOne
		{
			get;
		}

		void RemoveInvisibleOne();



		global::Allors.Extent<ISandbox> ISandboxesWhereInvisibleMany
		{ 
			get;
		}

		bool ExistISandboxesWhereInvisibleMany
		{
			get;
		}


		ISandbox ISandboxWhereInvisibleOne
		{
			get;
		}

		bool ExistISandboxWhereInvisibleOne
		{
			get;
		}

	}

	public class ISandboxMeta
	{
		public static readonly ISandboxMeta Instance = new ISandboxMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.ISandbox;

		public global::Allors.Meta.IRoleType InvisibleValue 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ISandboxInvisibleValue;
			}
		} 
		public global::Allors.Meta.IRoleType InvisibleMany 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ISandboxInvisibleMany;
			}
		} 
		public global::Allors.Meta.IRoleType InvisibleOne 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ISandboxInvisibleOne;
			}
		} 

		public global::Allors.Meta.IAssociationType ISandboxesWhereInvisibleMany 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ISandboxInvisibleMany;
			}
		} 
		public global::Allors.Meta.IAssociationType ISandboxWhereInvisibleOne 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ISandboxInvisibleOne;
			}
		} 

	}
}