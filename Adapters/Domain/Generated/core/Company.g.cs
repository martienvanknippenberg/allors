// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class CompanyBuilder : Allors.ObjectBuilder<Company> , NamedBuilder, global::System.IDisposable
	{		
		public CompanyBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public Person Manager {get; set;}

				/// <exclude/>
				public CompanyBuilder WithManager(Person value)
		        {
		            if(this.Manager!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Manager = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> Employee {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithEmployee(Person value)
		        {
					if(this.Employee == null)
					{
						this.Employee = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.Employee.Add(value);
		            return this;
		        }		

				
				public Person FirstPerson {get; set;}

				/// <exclude/>
				public CompanyBuilder WithFirstPerson(Person value)
		        {
		            if(this.FirstPerson!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.FirstPerson = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Named> NamedOneSort2 {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithNamedOneSort2(Named value)
		        {
					if(this.NamedOneSort2 == null)
					{
						this.NamedOneSort2 = new global::System.Collections.Generic.List<Named>(); 
					}
		            this.NamedOneSort2.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> Owner {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithOwner(Person value)
		        {
					if(this.Owner == null)
					{
						this.Owner = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.Owner.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> IndexedMany2ManyPerson {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithIndexedMany2ManyPerson(Person value)
		        {
					if(this.IndexedMany2ManyPerson == null)
					{
						this.IndexedMany2ManyPerson = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.IndexedMany2ManyPerson.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> PersonOneSort1 {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithPersonOneSort1(Person value)
		        {
					if(this.PersonOneSort1 == null)
					{
						this.PersonOneSort1 = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.PersonOneSort1.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> PersonManySort1 {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithPersonManySort1(Person value)
		        {
					if(this.PersonManySort1 == null)
					{
						this.PersonManySort1 = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.PersonManySort1.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Named> NamedManySort1 {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithNamedManySort1(Named value)
		        {
					if(this.NamedManySort1 == null)
					{
						this.NamedManySort1 = new global::System.Collections.Generic.List<Named>(); 
					}
		            this.NamedManySort1.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> PersonManySort2 {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithPersonManySort2(Person value)
		        {
					if(this.PersonManySort2 == null)
					{
						this.PersonManySort2 = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.PersonManySort2.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> PersonOneSort2 {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithPersonOneSort2(Person value)
		        {
					if(this.PersonOneSort2 == null)
					{
						this.PersonOneSort2 = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.PersonOneSort2.Add(value);
		            return this;
		        }		

				
				public Named NamedManySort2 {get; set;}

				/// <exclude/>
				public CompanyBuilder WithNamedManySort2(Named value)
		        {
		            if(this.NamedManySort2!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.NamedManySort2 = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> Many2ManyPerson {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithMany2ManyPerson(Person value)
		        {
					if(this.Many2ManyPerson == null)
					{
						this.Many2ManyPerson = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.Many2ManyPerson.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Company> Child {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithChild(Company value)
		        {
					if(this.Child == null)
					{
						this.Child = new global::System.Collections.Generic.List<Company>(); 
					}
		            this.Child.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Named> NamedOneSort1 {get; set;}	

				/// <exclude/>
				public CompanyBuilder WithNamedOneSort1(Named value)
		        {
					if(this.NamedOneSort1 == null)
					{
						this.NamedOneSort1 = new global::System.Collections.Generic.List<Named>(); 
					}
		            this.NamedOneSort1.Add(value);
		            return this;
		        }		

				
				public global::System.String Name {get; set;}

				/// <exclude/>
				public CompanyBuilder WithName(global::System.String value)
		        {
				    if(this.Name!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Name = value;
		            return this;
		        }	

				public global::System.Int32? Index {get; set;}

				/// <exclude/>
				public CompanyBuilder WithIndex(global::System.Int32? value)
		        {
				    if(this.Index!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Index = value;
		            return this;
		        }	


	}

	public partial class Companies : global::Allors.ObjectsBase<Company>
	{
		public static readonly CompanyMeta Meta = CompanyMeta.Instance;

		public Companies(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}