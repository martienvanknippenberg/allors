// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PersonBuilder : Allors.ObjectBuilder<Person> , NamedBuilder, global::System.IDisposable
	{		
		public PersonBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public Person NextPerson {get; set;}

				/// <exclude/>
				public PersonBuilder WithNextPerson(Person value)
		        {
		            if(this.NextPerson!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.NextPerson = value;
		            return this;
		        }		

				
				public Company Company {get; set;}

				/// <exclude/>
				public PersonBuilder WithCompany(Company value)
		        {
		            if(this.Company!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Company = value;
		            return this;
		        }		

				
				public global::System.String Name {get; set;}

				/// <exclude/>
				public PersonBuilder WithName(global::System.String value)
		        {
				    if(this.Name!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Name = value;
		            return this;
		        }	

				public global::System.Int32? Index {get; set;}

				/// <exclude/>
				public PersonBuilder WithIndex(global::System.Int32? value)
		        {
				    if(this.Index!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Index = value;
		            return this;
		        }	


	}

	public partial class Persons : global::Allors.ObjectsBase<Person>
	{
		public static readonly PersonMeta Meta = PersonMeta.Instance;

		public Persons(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}