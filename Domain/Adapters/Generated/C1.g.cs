// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class C1 : C1Allors , global::Domain.I1, global::Domain.I12
	{
		public C1(Allors.IStrategy allors) : base(allors) {}

		public static C1 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C1) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class C1Allors : Allors.ObjectBase
	{
		protected C1Allors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.Decimal? C1DecimalBetweenA 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.C1DecimalBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DecimalBetweenA, value);
			}
		}

		virtual public bool ExistC1DecimalBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DecimalBetweenA);
			}
		}

		virtual public void RemoveC1DecimalBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DecimalBetweenA);
		}



		virtual public global::System.Int64? C1LongLessThan 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.C1LongLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1LongLessThan, value);
			}
		}

		virtual public bool ExistC1LongLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1LongLessThan);
			}
		}

		virtual public void RemoveC1LongLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1LongLessThan);
		}


		virtual public global::Domain.I2 C1I2one2one
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.C1I2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I2one2one ,value);
			}
		}

		virtual public bool ExistC1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I2one2one);
			}
		}

		virtual public void RemoveC1I2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2one2one);
		}



		virtual public global::System.Decimal? C1DecimalBetweenB 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.C1DecimalBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DecimalBetweenB, value);
			}
		}

		virtual public bool ExistC1DecimalBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DecimalBetweenB);
			}
		}

		virtual public void RemoveC1DecimalBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DecimalBetweenB);
		}



		virtual public global::System.String Argument 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.Argument);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.Argument, value);
			}
		}

		virtual public bool ExistArgument{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.Argument);
			}
		}

		virtual public void RemoveArgument()
		{
			Strategy.RemoveUnitRole(C1Meta.Argument);
		}


		virtual public Allors.Extent<global::Domain.S1> C1S1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1S1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1S1one2many, value);
			}
		}

		virtual public void AddC1S1one2many (global::Domain.S1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1S1one2many, value);
		}

		virtual public void RemoveC1S1one2many (global::Domain.S1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S1one2many,value);
		}

		virtual public bool ExistC1S1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1S1one2many);
			}
		}

		virtual public void RemoveC1S1one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1S1one2many);
		}


		virtual public global::Domain.I12 C1I12one2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.C1I12one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I12one2one ,value);
			}
		}

		virtual public bool ExistC1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I12one2one);
			}
		}

		virtual public void RemoveC1I12one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12one2one);
		}



		virtual public global::System.String C1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.C1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsString, value);
			}
		}

		virtual public bool ExistC1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsString);
			}
		}

		virtual public void RemoveC1AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsString);
		}


		virtual public global::Domain.C1 C1C1many2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.C1C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C1many2one ,value);
			}
		}

		virtual public bool ExistC1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C1many2one);
			}
		}

		virtual public void RemoveC1C1many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1many2one);
		}


		virtual public global::Domain.S2 C1S2many2one
		{ 
			get
			{
				return (global::Domain.S2) Strategy.GetCompositeRole(C1Meta.C1S2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1S2many2one ,value);
			}
		}

		virtual public bool ExistC1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1S2many2one);
			}
		}

		virtual public void RemoveC1S2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S2many2one);
		}



		virtual public global::System.Double? C1DoubleBetweenA 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.C1DoubleBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DoubleBetweenA, value);
			}
		}

		virtual public bool ExistC1DoubleBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DoubleBetweenA);
			}
		}

		virtual public void RemoveC1DoubleBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DoubleBetweenA);
		}


		virtual public global::Domain.C1 Many2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.Many2One ,value);
			}
		}

		virtual public bool ExistMany2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.Many2One);
			}
		}

		virtual public void RemoveMany2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.Many2One);
		}


		virtual public Allors.Extent<global::Domain.C1> C1C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C1many2many, value);
			}
		}

		virtual public void AddC1C1many2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C1many2many, value);
		}

		virtual public void RemoveC1C1many2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1many2many,value);
		}

		virtual public bool ExistC1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C1many2many);
			}
		}

		virtual public void RemoveC1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C1many2many);
		}


		virtual public Allors.Extent<global::Domain.S1> C1S1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1S1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1S1many2many, value);
			}
		}

		virtual public void AddC1S1many2many (global::Domain.S1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1S1many2many, value);
		}

		virtual public void RemoveC1S1many2many (global::Domain.S1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S1many2many,value);
		}

		virtual public bool ExistC1S1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1S1many2many);
			}
		}

		virtual public void RemoveC1S1many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1S1many2many);
		}



		virtual public global::System.Double? C1DoubleBetweenB 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.C1DoubleBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DoubleBetweenB, value);
			}
		}

		virtual public bool ExistC1DoubleBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DoubleBetweenB);
			}
		}

		virtual public void RemoveC1DoubleBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DoubleBetweenB);
		}


		virtual public global::Domain.I1 C1I1one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.C1I1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I1one2one ,value);
			}
		}

		virtual public bool ExistC1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I1one2one);
			}
		}

		virtual public void RemoveC1I1one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1one2one);
		}



		virtual public global::System.Int32? C1IntegerLessThan 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.C1IntegerLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1IntegerLessThan, value);
			}
		}

		virtual public bool ExistC1IntegerLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1IntegerLessThan);
			}
		}

		virtual public void RemoveC1IntegerLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1IntegerLessThan);
		}



		virtual public global::System.String C1StringLarge 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.C1StringLarge);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1StringLarge, value);
			}
		}

		virtual public bool ExistC1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1StringLarge);
			}
		}

		virtual public void RemoveC1StringLarge()
		{
			Strategy.RemoveUnitRole(C1Meta.C1StringLarge);
		}


		virtual public Allors.Extent<global::Domain.I2> C1I2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I2one2many, value);
			}
		}

		virtual public void AddC1I2one2many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I2one2many, value);
		}

		virtual public void RemoveC1I2one2many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2one2many,value);
		}

		virtual public bool ExistC1I2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I2one2many);
			}
		}

		virtual public void RemoveC1I2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I2one2many);
		}


		virtual public global::Domain.C1 C1C1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.C1C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C1one2one ,value);
			}
		}

		virtual public bool ExistC1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C1one2one);
			}
		}

		virtual public void RemoveC1C1one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1one2one);
		}



		virtual public global::System.Double? C1DoubleGreaterThan 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.C1DoubleGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DoubleGreaterThan, value);
			}
		}

		virtual public bool ExistC1DoubleGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DoubleGreaterThan);
			}
		}

		virtual public void RemoveC1DoubleGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DoubleGreaterThan);
		}


		virtual public global::Domain.I2 C1I2many2one
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.C1I2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I2many2one ,value);
			}
		}

		virtual public bool ExistC1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I2many2one);
			}
		}

		virtual public void RemoveC1I2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2many2one);
		}


		virtual public global::Domain.I12 C1I12many2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.C1I12many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I12many2one ,value);
			}
		}

		virtual public bool ExistC1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I12many2one);
			}
		}

		virtual public void RemoveC1I12many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12many2one);
		}



		virtual public global::System.DateTime? C1DateTimeLessThan 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.C1DateTimeLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DateTimeLessThan, value);
			}
		}

		virtual public bool ExistC1DateTimeLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DateTimeLessThan);
			}
		}

		virtual public void RemoveC1DateTimeLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DateTimeLessThan);
		}



		virtual public global::System.DateTime? C1DateTimeBetweenA 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.C1DateTimeBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DateTimeBetweenA, value);
			}
		}

		virtual public bool ExistC1DateTimeBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DateTimeBetweenA);
			}
		}

		virtual public void RemoveC1DateTimeBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DateTimeBetweenA);
		}


		virtual public Allors.Extent<global::Domain.C2> C1C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C2many2many, value);
			}
		}

		virtual public void AddC1C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C2many2many, value);
		}

		virtual public void RemoveC1C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2many2many,value);
		}

		virtual public bool ExistC1C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C2many2many);
			}
		}

		virtual public void RemoveC1C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C2many2many);
		}


		virtual public global::Domain.S1 C1S1many2one
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeRole(C1Meta.C1S1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1S1many2one ,value);
			}
		}

		virtual public bool ExistC1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1S1many2one);
			}
		}

		virtual public void RemoveC1S1many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S1many2one);
		}


		virtual public Allors.Extent<global::Domain.I1> C1I1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I1many2many, value);
			}
		}

		virtual public void AddC1I1many2many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I1many2many, value);
		}

		virtual public void RemoveC1I1many2many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1many2many,value);
		}

		virtual public bool ExistC1I1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I1many2many);
			}
		}

		virtual public void RemoveC1I1many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I1many2many);
		}



		virtual public global::System.Double? C1DoubleLessThan 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.C1DoubleLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DoubleLessThan, value);
			}
		}

		virtual public bool ExistC1DoubleLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DoubleLessThan);
			}
		}

		virtual public void RemoveC1DoubleLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DoubleLessThan);
		}


		virtual public global::Domain.I1 C1I1many2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.C1I1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I1many2one ,value);
			}
		}

		virtual public bool ExistC1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I1many2one);
			}
		}

		virtual public void RemoveC1I1many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1many2one);
		}



		virtual public global::System.Int64? C1LongGreaterThan 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.C1LongGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1LongGreaterThan, value);
			}
		}

		virtual public bool ExistC1LongGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1LongGreaterThan);
			}
		}

		virtual public void RemoveC1LongGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1LongGreaterThan);
		}



		virtual public global::System.Decimal? C1DecimalGreaterThan 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.C1DecimalGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DecimalGreaterThan, value);
			}
		}

		virtual public bool ExistC1DecimalGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DecimalGreaterThan);
			}
		}

		virtual public void RemoveC1DecimalGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DecimalGreaterThan);
		}



		virtual public global::System.Decimal? C1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.C1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsDecimal, value);
			}
		}

		virtual public bool ExistC1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsDecimal);
			}
		}

		virtual public void RemoveC1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsDecimal);
		}



		virtual public global::System.Int64? C1AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.C1AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsLong, value);
			}
		}

		virtual public bool ExistC1AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsLong);
			}
		}

		virtual public void RemoveC1AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsLong);
		}


		virtual public global::Domain.S2 C1S2one2one
		{ 
			get
			{
				return (global::Domain.S2) Strategy.GetCompositeRole(C1Meta.C1S2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1S2one2one ,value);
			}
		}

		virtual public bool ExistC1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1S2one2one);
			}
		}

		virtual public void RemoveC1S2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S2one2one);
		}



		virtual public global::System.DateTime? C1DateTimeBetweenB 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.C1DateTimeBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DateTimeBetweenB, value);
			}
		}

		virtual public bool ExistC1DateTimeBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DateTimeBetweenB);
			}
		}

		virtual public void RemoveC1DateTimeBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DateTimeBetweenB);
		}



		virtual public global::System.Byte[] C1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C1Meta.C1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsBinary, value);
			}
		}

		virtual public bool ExistC1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsBinary);
			}
		}

		virtual public void RemoveC1AllorsBinary()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsBinary);
		}



		virtual public global::System.DateTime? C1DateTimeGreaterThan 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.C1DateTimeGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DateTimeGreaterThan, value);
			}
		}

		virtual public bool ExistC1DateTimeGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DateTimeGreaterThan);
			}
		}

		virtual public void RemoveC1DateTimeGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DateTimeGreaterThan);
		}


		virtual public global::Domain.S1 C1S1one2one
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeRole(C1Meta.C1S1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1S1one2one ,value);
			}
		}

		virtual public bool ExistC1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1S1one2one);
			}
		}

		virtual public void RemoveC1S1one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S1one2one);
		}


		virtual public Allors.Extent<global::Domain.C1> C1C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C1one2many, value);
			}
		}

		virtual public void AddC1C1one2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C1one2many, value);
		}

		virtual public void RemoveC1C1one2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1one2many,value);
		}

		virtual public bool ExistC1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C1one2many);
			}
		}

		virtual public void RemoveC1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C1one2many);
		}


		virtual public Allors.Extent<global::Domain.I1> C1I1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I1one2many, value);
			}
		}

		virtual public void AddC1I1one2many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I1one2many, value);
		}

		virtual public void RemoveC1I1one2many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1one2many,value);
		}

		virtual public bool ExistC1I1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I1one2many);
			}
		}

		virtual public void RemoveC1I1one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I1one2many);
		}


		virtual public global::Domain.C2 C1C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.C1C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C2many2one ,value);
			}
		}

		virtual public bool ExistC1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C2many2one);
			}
		}

		virtual public void RemoveC1C2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2many2one);
		}


		virtual public Allors.Extent<global::Domain.I12> C1I12one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I12one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I12one2many, value);
			}
		}

		virtual public void AddC1I12one2many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I12one2many, value);
		}

		virtual public void RemoveC1I12one2many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12one2many,value);
		}

		virtual public bool ExistC1I12one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I12one2many);
			}
		}

		virtual public void RemoveC1I12one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I12one2many);
		}


		virtual public global::Domain.S2 C1S2many2many
		{ 
			get
			{
				return (global::Domain.S2) Strategy.GetCompositeRole(C1Meta.C1S2many2many);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1S2many2many ,value);
			}
		}

		virtual public bool ExistC1S2many2many
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1S2many2many);
			}
		}

		virtual public void RemoveC1S2many2many()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S2many2many);
		}


		virtual public global::Domain.C2 C1C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.C1C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C2one2one ,value);
			}
		}

		virtual public bool ExistC1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C2one2one);
			}
		}

		virtual public void RemoveC1C2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2one2one);
		}



		virtual public global::System.Boolean? C1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.C1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsBoolean, value);
			}
		}

		virtual public bool ExistC1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsBoolean);
			}
		}

		virtual public void RemoveC1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsBoolean);
		}


		virtual public Allors.Extent<global::Domain.I12> C1I12many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I12many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I12many2many, value);
			}
		}

		virtual public void AddC1I12many2many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I12many2many, value);
		}

		virtual public void RemoveC1I12many2many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12many2many,value);
		}

		virtual public bool ExistC1I12many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I12many2many);
			}
		}

		virtual public void RemoveC1I12many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I12many2many);
		}


		virtual public Allors.Extent<global::Domain.I2> C1I2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I2many2many, value);
			}
		}

		virtual public void AddC1I2many2many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I2many2many, value);
		}

		virtual public void RemoveC1I2many2many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2many2many,value);
		}

		virtual public bool ExistC1I2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I2many2many);
			}
		}

		virtual public void RemoveC1I2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I2many2many);
		}



		virtual public global::System.Guid? C1AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C1Meta.C1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsUnique, value);
			}
		}

		virtual public bool ExistC1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsUnique);
			}
		}

		virtual public void RemoveC1AllorsUnique()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsUnique);
		}


		virtual public global::Domain.C3 C1C3one2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C1Meta.C1C3one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C3one2one ,value);
			}
		}

		virtual public bool ExistC1C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C3one2one);
			}
		}

		virtual public void RemoveC1C3one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C3one2one);
		}


		virtual public Allors.Extent<global::Domain.C3> C1C3many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C3many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C3many2many, value);
			}
		}

		virtual public void AddC1C3many2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C3many2many, value);
		}

		virtual public void RemoveC1C3many2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C3many2many,value);
		}

		virtual public bool ExistC1C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C3many2many);
			}
		}

		virtual public void RemoveC1C3many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C3many2many);
		}



		virtual public global::System.String C1StringEquals 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.C1StringEquals);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1StringEquals, value);
			}
		}

		virtual public bool ExistC1StringEquals{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1StringEquals);
			}
		}

		virtual public void RemoveC1StringEquals()
		{
			Strategy.RemoveUnitRole(C1Meta.C1StringEquals);
		}



		virtual public global::System.Int64? C1LongBetweenA 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.C1LongBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1LongBetweenA, value);
			}
		}

		virtual public bool ExistC1LongBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1LongBetweenA);
			}
		}

		virtual public void RemoveC1LongBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.C1LongBetweenA);
		}



		virtual public global::System.Int32? C1IntegerGreaterThan 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.C1IntegerGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1IntegerGreaterThan, value);
			}
		}

		virtual public bool ExistC1IntegerGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1IntegerGreaterThan);
			}
		}

		virtual public void RemoveC1IntegerGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1IntegerGreaterThan);
		}


		virtual public global::Domain.C3 C3may2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C1Meta.C3may2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C3may2one ,value);
			}
		}

		virtual public bool ExistC3may2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C3may2one);
			}
		}

		virtual public void RemoveC3may2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C3may2one);
		}



		virtual public global::System.Int32? C1IntegerBetweenB 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.C1IntegerBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1IntegerBetweenB, value);
			}
		}

		virtual public bool ExistC1IntegerBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1IntegerBetweenB);
			}
		}

		virtual public void RemoveC1IntegerBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.C1IntegerBetweenB);
		}



		virtual public global::System.DateTime? C1AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.C1AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsDateTime, value);
			}
		}

		virtual public bool ExistC1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsDateTime);
			}
		}

		virtual public void RemoveC1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsDateTime);
		}



		virtual public global::System.Int32? C1IntegerBetweenA 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.C1IntegerBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1IntegerBetweenA, value);
			}
		}

		virtual public bool ExistC1IntegerBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1IntegerBetweenA);
			}
		}

		virtual public void RemoveC1IntegerBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.C1IntegerBetweenA);
		}



		virtual public global::System.Double? C1AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.C1AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsDouble, value);
			}
		}

		virtual public bool ExistC1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsDouble);
			}
		}

		virtual public void RemoveC1AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsDouble);
		}



		virtual public global::System.Int64? C1LongBetweenB 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.C1LongBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1LongBetweenB, value);
			}
		}

		virtual public bool ExistC1LongBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1LongBetweenB);
			}
		}

		virtual public void RemoveC1LongBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.C1LongBetweenB);
		}


		virtual public Allors.Extent<global::Domain.C2> C1C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C2one2many, value);
			}
		}

		virtual public void AddC1C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C2one2many, value);
		}

		virtual public void RemoveC1C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2one2many,value);
		}

		virtual public bool ExistC1C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C2one2many);
			}
		}

		virtual public void RemoveC1C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C2one2many);
		}


		virtual public Allors.Extent<global::Domain.S2> C1S2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1S2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1S2one2many, value);
			}
		}

		virtual public void AddC1S2one2many (global::Domain.S2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1S2one2many, value);
		}

		virtual public void RemoveC1S2one2many (global::Domain.S2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1S2one2many,value);
		}

		virtual public bool ExistC1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1S2one2many);
			}
		}

		virtual public void RemoveC1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1S2one2many);
		}



		virtual public global::System.Int32? C1AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.C1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsInteger, value);
			}
		}

		virtual public bool ExistC1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsInteger);
			}
		}

		virtual public void RemoveC1AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsInteger);
		}



		virtual public global::System.Decimal? C1DecimalLessThan 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.C1DecimalLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1DecimalLessThan, value);
			}
		}

		virtual public bool ExistC1DecimalLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1DecimalLessThan);
			}
		}

		virtual public void RemoveC1DecimalLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.C1DecimalLessThan);
		}


		virtual public Allors.Extent<global::Domain.C3> C1C3one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C3one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C3one2many, value);
			}
		}

		virtual public void AddC1C3one2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C3one2many, value);
		}

		virtual public void RemoveC1C3one2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C3one2many,value);
		}

		virtual public bool ExistC1C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C3one2many);
			}
		}

		virtual public void RemoveC1C3one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C3one2many);
		}


		virtual public Allors.Extent<global::Domain.I34> I1I34one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I34one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I34one2many, value);
			}
		}

		virtual public void AddI1I34one2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I34one2many, value);
		}

		virtual public void RemoveI1I34one2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I34one2many,value);
		}

		virtual public bool ExistI1I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I34one2many);
			}
		}

		virtual public void RemoveI1I34one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I34one2many);
		}


		virtual public Allors.Extent<global::Domain.I2> I1I2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I2one2many, value);
			}
		}

		virtual public void AddI1I2one2many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I2one2many, value);
		}

		virtual public void RemoveI1I2one2many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2one2many,value);
		}

		virtual public bool ExistI1I2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I2one2many);
			}
		}

		virtual public void RemoveI1I2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I2one2many);
		}


		virtual public global::Domain.I2 I1I2many2one
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.I1I2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I2many2one ,value);
			}
		}

		virtual public bool ExistI1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I2many2one);
			}
		}

		virtual public void RemoveI1I2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2many2one);
		}


		virtual public global::Domain.C2 I1C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I1C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C2many2one ,value);
			}
		}

		virtual public bool ExistI1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C2many2one);
			}
		}

		virtual public void RemoveI1C2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2many2one);
		}


		virtual public global::Domain.C2 I1C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I1C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C2one2one ,value);
			}
		}

		virtual public bool ExistI1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C2one2one);
			}
		}

		virtual public void RemoveI1C2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2one2one);
		}



		virtual public global::System.Decimal? I1DecimalBetweenA 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I1DecimalBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DecimalBetweenA, value);
			}
		}

		virtual public bool ExistI1DecimalBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DecimalBetweenA);
			}
		}

		virtual public void RemoveI1DecimalBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DecimalBetweenA);
		}


		virtual public global::Domain.S1 I1S1one2one
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeRole(C1Meta.I1S1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1S1one2one ,value);
			}
		}

		virtual public bool ExistI1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1S1one2one);
			}
		}

		virtual public void RemoveI1S1one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S1one2one);
		}


		virtual public global::Domain.I12 I1I12many2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.I1I12many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I12many2one ,value);
			}
		}

		virtual public bool ExistI1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I12many2one);
			}
		}

		virtual public void RemoveI1I12many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12many2one);
		}



		virtual public global::System.String I1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.I1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsString, value);
			}
		}

		virtual public bool ExistI1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsString);
			}
		}

		virtual public void RemoveI1AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsString);
		}



		virtual public global::System.DateTime? I1DateTimeLessThan 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I1DateTimeLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DateTimeLessThan, value);
			}
		}

		virtual public bool ExistI1DateTimeLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DateTimeLessThan);
			}
		}

		virtual public void RemoveI1DateTimeLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DateTimeLessThan);
		}


		virtual public Allors.Extent<global::Domain.C2> I1C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C2one2many, value);
			}
		}

		virtual public void AddI1C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C2one2many, value);
		}

		virtual public void RemoveI1C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2one2many,value);
		}

		virtual public bool ExistI1C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C2one2many);
			}
		}

		virtual public void RemoveI1C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C2one2many);
		}



		virtual public global::System.String I1StringLarge 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.I1StringLarge);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1StringLarge, value);
			}
		}

		virtual public bool ExistI1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1StringLarge);
			}
		}

		virtual public void RemoveI1StringLarge()
		{
			Strategy.RemoveUnitRole(C1Meta.I1StringLarge);
		}



		virtual public global::System.Double? I1DoubleLessThan 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I1DoubleLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DoubleLessThan, value);
			}
		}

		virtual public bool ExistI1DoubleLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DoubleLessThan);
			}
		}

		virtual public void RemoveI1DoubleLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DoubleLessThan);
		}



		virtual public global::System.DateTime? I1AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I1AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsDateTime, value);
			}
		}

		virtual public bool ExistI1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsDateTime);
			}
		}

		virtual public void RemoveI1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsDateTime);
		}


		virtual public global::Domain.C1 I1C1many2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.I1C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C1many2one ,value);
			}
		}

		virtual public bool ExistI1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C1many2one);
			}
		}

		virtual public void RemoveI1C1many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1many2one);
		}



		virtual public global::System.Int64? I1LongBetweenB 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I1LongBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1LongBetweenB, value);
			}
		}

		virtual public bool ExistI1LongBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1LongBetweenB);
			}
		}

		virtual public void RemoveI1LongBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.I1LongBetweenB);
		}


		virtual public global::Domain.I12 I1I12one2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.I1I12one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I12one2one ,value);
			}
		}

		virtual public bool ExistI1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I12one2one);
			}
		}

		virtual public void RemoveI1I12one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12one2one);
		}



		virtual public global::System.Decimal? I1DecimalGreaterThan 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I1DecimalGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DecimalGreaterThan, value);
			}
		}

		virtual public bool ExistI1DecimalGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DecimalGreaterThan);
			}
		}

		virtual public void RemoveI1DecimalGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DecimalGreaterThan);
		}


		virtual public global::Domain.C1 I1C1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.I1C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C1one2one ,value);
			}
		}

		virtual public bool ExistI1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C1one2one);
			}
		}

		virtual public void RemoveI1C1one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1one2one);
		}



		virtual public global::System.Int64? I1LongLessThan 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I1LongLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1LongLessThan, value);
			}
		}

		virtual public bool ExistI1LongLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1LongLessThan);
			}
		}

		virtual public void RemoveI1LongLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1LongLessThan);
		}


		virtual public Allors.Extent<global::Domain.I2> I1I2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I2many2many, value);
			}
		}

		virtual public void AddI1I2many2many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I2many2many, value);
		}

		virtual public void RemoveI1I2many2many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2many2many,value);
		}

		virtual public bool ExistI1I2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I2many2many);
			}
		}

		virtual public void RemoveI1I2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I2many2many);
		}



		virtual public global::System.Int32? I1IntegerBetweenA 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I1IntegerBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1IntegerBetweenA, value);
			}
		}

		virtual public bool ExistI1IntegerBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1IntegerBetweenA);
			}
		}

		virtual public void RemoveI1IntegerBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.I1IntegerBetweenA);
		}


		virtual public global::Domain.I34 I1I34many2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C1Meta.I1I34many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I34many2one ,value);
			}
		}

		virtual public bool ExistI1I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I34many2one);
			}
		}

		virtual public void RemoveI1I34many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I34many2one);
		}



		virtual public global::System.Double? I1DoubleBetweenA 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I1DoubleBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DoubleBetweenA, value);
			}
		}

		virtual public bool ExistI1DoubleBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DoubleBetweenA);
			}
		}

		virtual public void RemoveI1DoubleBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DoubleBetweenA);
		}



		virtual public global::System.Int32? I1IntegerLessThan 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I1IntegerLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1IntegerLessThan, value);
			}
		}

		virtual public bool ExistI1IntegerLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1IntegerLessThan);
			}
		}

		virtual public void RemoveI1IntegerLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1IntegerLessThan);
		}



		virtual public global::System.Int32? I1AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsInteger, value);
			}
		}

		virtual public bool ExistI1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsInteger);
			}
		}

		virtual public void RemoveI1AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsInteger);
		}


		virtual public global::Domain.S2 I1S2one2one
		{ 
			get
			{
				return (global::Domain.S2) Strategy.GetCompositeRole(C1Meta.I1S2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1S2one2one ,value);
			}
		}

		virtual public bool ExistI1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1S2one2one);
			}
		}

		virtual public void RemoveI1S2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S2one2one);
		}



		virtual public global::System.Boolean? I1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.I1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsBoolean, value);
			}
		}

		virtual public bool ExistI1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsBoolean);
			}
		}

		virtual public void RemoveI1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsBoolean);
		}


		virtual public global::Domain.I1 I1I1many2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.I1I1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I1many2one ,value);
			}
		}

		virtual public bool ExistI1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I1many2one);
			}
		}

		virtual public void RemoveI1I1many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1many2one);
		}


		virtual public Allors.Extent<global::Domain.C1> I1C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C1many2many, value);
			}
		}

		virtual public void AddI1C1many2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C1many2many, value);
		}

		virtual public void RemoveI1C1many2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1many2many,value);
		}

		virtual public bool ExistI1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C1many2many);
			}
		}

		virtual public void RemoveI1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C1many2many);
		}


		virtual public global::Domain.I2 I1I2one2one
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.I1I2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I2one2one ,value);
			}
		}

		virtual public bool ExistI1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I2one2one);
			}
		}

		virtual public void RemoveI1I2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2one2one);
		}



		virtual public global::System.Int64? I1AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I1AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsLong, value);
			}
		}

		virtual public bool ExistI1AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsLong);
			}
		}

		virtual public void RemoveI1AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsLong);
		}



		virtual public global::System.Decimal? I1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsDecimal, value);
			}
		}

		virtual public bool ExistI1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsDecimal);
			}
		}

		virtual public void RemoveI1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsDecimal);
		}


		virtual public Allors.Extent<global::Domain.S1> I1S1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1S1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1S1many2many, value);
			}
		}

		virtual public void AddI1S1many2many (global::Domain.S1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1S1many2many, value);
		}

		virtual public void RemoveI1S1many2many (global::Domain.S1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S1many2many,value);
		}

		virtual public bool ExistI1S1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1S1many2many);
			}
		}

		virtual public void RemoveI1S1many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1S1many2many);
		}



		virtual public global::System.DateTime? I1DateTimeGreaterThan 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I1DateTimeGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DateTimeGreaterThan, value);
			}
		}

		virtual public bool ExistI1DateTimeGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DateTimeGreaterThan);
			}
		}

		virtual public void RemoveI1DateTimeGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DateTimeGreaterThan);
		}


		virtual public Allors.Extent<global::Domain.I34> I1I34many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I34many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I34many2many, value);
			}
		}

		virtual public void AddI1I34many2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I34many2many, value);
		}

		virtual public void RemoveI1I34many2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I34many2many,value);
		}

		virtual public bool ExistI1I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I34many2many);
			}
		}

		virtual public void RemoveI1I34many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I34many2many);
		}


		virtual public global::Domain.I34 I1I34one2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C1Meta.I1I34one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I34one2one ,value);
			}
		}

		virtual public bool ExistI1I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I34one2one);
			}
		}

		virtual public void RemoveI1I34one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I34one2one);
		}


		virtual public Allors.Extent<global::Domain.I1> I1I1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I1one2many, value);
			}
		}

		virtual public void AddI1I1one2many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I1one2many, value);
		}

		virtual public void RemoveI1I1one2many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1one2many,value);
		}

		virtual public bool ExistI1I1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I1one2many);
			}
		}

		virtual public void RemoveI1I1one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I1one2many);
		}


		virtual public Allors.Extent<global::Domain.I1> I1I1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I1many2many, value);
			}
		}

		virtual public void AddI1I1many2many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I1many2many, value);
		}

		virtual public void RemoveI1I1many2many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1many2many,value);
		}

		virtual public bool ExistI1I1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I1many2many);
			}
		}

		virtual public void RemoveI1I1many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I1many2many);
		}


		virtual public Allors.Extent<global::Domain.S2> I1S2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1S2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1S2many2many, value);
			}
		}

		virtual public void AddI1S2many2many (global::Domain.S2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1S2many2many, value);
		}

		virtual public void RemoveI1S2many2many (global::Domain.S2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S2many2many,value);
		}

		virtual public bool ExistI1S2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1S2many2many);
			}
		}

		virtual public void RemoveI1S2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1S2many2many);
		}


		virtual public Allors.Extent<global::Domain.I12> I1I12many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I12many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I12many2many, value);
			}
		}

		virtual public void AddI1I12many2many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I12many2many, value);
		}

		virtual public void RemoveI1I12many2many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12many2many,value);
		}

		virtual public bool ExistI1I12many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I12many2many);
			}
		}

		virtual public void RemoveI1I12many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I12many2many);
		}



		virtual public global::System.String I1StringEquals 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.I1StringEquals);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1StringEquals, value);
			}
		}

		virtual public bool ExistI1StringEquals{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1StringEquals);
			}
		}

		virtual public void RemoveI1StringEquals()
		{
			Strategy.RemoveUnitRole(C1Meta.I1StringEquals);
		}



		virtual public global::System.Int64? I1LongGreaterThan 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I1LongGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1LongGreaterThan, value);
			}
		}

		virtual public bool ExistI1LongGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1LongGreaterThan);
			}
		}

		virtual public void RemoveI1LongGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1LongGreaterThan);
		}


		virtual public Allors.Extent<global::Domain.I12> I1I12one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I12one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I12one2many, value);
			}
		}

		virtual public void AddI1I12one2many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I12one2many, value);
		}

		virtual public void RemoveI1I12one2many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12one2many,value);
		}

		virtual public bool ExistI1I12one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I12one2many);
			}
		}

		virtual public void RemoveI1I12one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I12one2many);
		}


		virtual public Allors.Extent<global::Domain.S2> I1S2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1S2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1S2one2many, value);
			}
		}

		virtual public void AddI1S2one2many (global::Domain.S2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1S2one2many, value);
		}

		virtual public void RemoveI1S2one2many (global::Domain.S2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S2one2many,value);
		}

		virtual public bool ExistI1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1S2one2many);
			}
		}

		virtual public void RemoveI1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1S2one2many);
		}


		virtual public Allors.Extent<global::Domain.C2> I1C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C2many2many, value);
			}
		}

		virtual public void AddI1C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C2many2many, value);
		}

		virtual public void RemoveI1C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2many2many,value);
		}

		virtual public bool ExistI1C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C2many2many);
			}
		}

		virtual public void RemoveI1C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C2many2many);
		}



		virtual public global::System.Byte[] I1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C1Meta.I1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsBinary, value);
			}
		}

		virtual public bool ExistI1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsBinary);
			}
		}

		virtual public void RemoveI1AllorsBinary()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsBinary);
		}



		virtual public global::System.Decimal? I1DecimalBetweenB 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I1DecimalBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DecimalBetweenB, value);
			}
		}

		virtual public bool ExistI1DecimalBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DecimalBetweenB);
			}
		}

		virtual public void RemoveI1DecimalBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DecimalBetweenB);
		}



		virtual public global::System.Int64? I1LongBetweenA 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I1LongBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1LongBetweenA, value);
			}
		}

		virtual public bool ExistI1LongBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1LongBetweenA);
			}
		}

		virtual public void RemoveI1LongBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.I1LongBetweenA);
		}



		virtual public global::System.Double? I1DoubleGreaterThan 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I1DoubleGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DoubleGreaterThan, value);
			}
		}

		virtual public bool ExistI1DoubleGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DoubleGreaterThan);
			}
		}

		virtual public void RemoveI1DoubleGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DoubleGreaterThan);
		}



		virtual public global::System.Int32? I1IntegerBetweenB 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I1IntegerBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1IntegerBetweenB, value);
			}
		}

		virtual public bool ExistI1IntegerBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1IntegerBetweenB);
			}
		}

		virtual public void RemoveI1IntegerBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.I1IntegerBetweenB);
		}



		virtual public global::System.DateTime? I1DateTimeBetweenA 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I1DateTimeBetweenA);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DateTimeBetweenA, value);
			}
		}

		virtual public bool ExistI1DateTimeBetweenA{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DateTimeBetweenA);
			}
		}

		virtual public void RemoveI1DateTimeBetweenA()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DateTimeBetweenA);
		}



		virtual public global::System.Double? I1AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I1AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsDouble, value);
			}
		}

		virtual public bool ExistI1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsDouble);
			}
		}

		virtual public void RemoveI1AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsDouble);
		}


		virtual public Allors.Extent<global::Domain.S1> I1S1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1S1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1S1one2many, value);
			}
		}

		virtual public void AddI1S1one2many (global::Domain.S1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1S1one2many, value);
		}

		virtual public void RemoveI1S1one2many (global::Domain.S1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S1one2many,value);
		}

		virtual public bool ExistI1S1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1S1one2many);
			}
		}

		virtual public void RemoveI1S1one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1S1one2many);
		}


		virtual public global::Domain.I1 I1I1one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.I1I1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I1one2one ,value);
			}
		}

		virtual public bool ExistI1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I1one2one);
			}
		}

		virtual public void RemoveI1I1one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1one2one);
		}



		virtual public global::System.Int32? I1IntegerGreaterThan 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I1IntegerGreaterThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1IntegerGreaterThan, value);
			}
		}

		virtual public bool ExistI1IntegerGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1IntegerGreaterThan);
			}
		}

		virtual public void RemoveI1IntegerGreaterThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1IntegerGreaterThan);
		}


		virtual public global::Domain.S1 I1S1many2one
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeRole(C1Meta.I1S1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1S1many2one ,value);
			}
		}

		virtual public bool ExistI1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1S1many2one);
			}
		}

		virtual public void RemoveI1S1many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S1many2one);
		}



		virtual public global::System.Double? I1DoubleBetweenB 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I1DoubleBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DoubleBetweenB, value);
			}
		}

		virtual public bool ExistI1DoubleBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DoubleBetweenB);
			}
		}

		virtual public void RemoveI1DoubleBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DoubleBetweenB);
		}



		virtual public global::System.Decimal? I1DecimalLessThan 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I1DecimalLessThan);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DecimalLessThan, value);
			}
		}

		virtual public bool ExistI1DecimalLessThan{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DecimalLessThan);
			}
		}

		virtual public void RemoveI1DecimalLessThan()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DecimalLessThan);
		}



		virtual public global::System.DateTime? I1DateTimeBetweenB 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I1DateTimeBetweenB);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1DateTimeBetweenB, value);
			}
		}

		virtual public bool ExistI1DateTimeBetweenB{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1DateTimeBetweenB);
			}
		}

		virtual public void RemoveI1DateTimeBetweenB()
		{
			Strategy.RemoveUnitRole(C1Meta.I1DateTimeBetweenB);
		}



		virtual public global::System.Guid? I1AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C1Meta.I1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsUnique, value);
			}
		}

		virtual public bool ExistI1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsUnique);
			}
		}

		virtual public void RemoveI1AllorsUnique()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsUnique);
		}


		virtual public Allors.Extent<global::Domain.C1> I1C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C1one2many, value);
			}
		}

		virtual public void AddI1C1one2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C1one2many, value);
		}

		virtual public void RemoveI1C1one2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1one2many,value);
		}

		virtual public bool ExistI1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C1one2many);
			}
		}

		virtual public void RemoveI1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C1one2many);
		}


		virtual public global::Domain.S2 I1S2many2one
		{ 
			get
			{
				return (global::Domain.S2) Strategy.GetCompositeRole(C1Meta.I1S2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1S2many2one ,value);
			}
		}

		virtual public bool ExistI1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1S2many2one);
			}
		}

		virtual public void RemoveI1S2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1S2many2one);
		}



		virtual public global::System.Decimal? S1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.S1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsDecimal);
			}
		}

		virtual public void RemoveS1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsDecimal);
		}



		virtual public global::System.Int32? S1AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.S1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsInteger, value);
			}
		}

		virtual public bool ExistS1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsInteger);
			}
		}

		virtual public void RemoveS1AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsInteger);
		}



		virtual public global::System.Byte[] S1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C1Meta.S1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsBinary, value);
			}
		}

		virtual public bool ExistS1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsBinary);
			}
		}

		virtual public void RemoveS1AllorsBinary()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsBinary);
		}



		virtual public global::System.Guid? S1AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C1Meta.S1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsUnique, value);
			}
		}

		virtual public bool ExistS1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsUnique);
			}
		}

		virtual public void RemoveS1AllorsUnique()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsUnique);
		}



		virtual public global::System.String S1StringLarge 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.S1StringLarge);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1StringLarge, value);
			}
		}

		virtual public bool ExistS1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1StringLarge);
			}
		}

		virtual public void RemoveS1StringLarge()
		{
			Strategy.RemoveUnitRole(C1Meta.S1StringLarge);
		}


		virtual public global::Domain.S2 S1S2many2one
		{ 
			get
			{
				return (global::Domain.S2) Strategy.GetCompositeRole(C1Meta.S1S2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1S2many2one ,value);
			}
		}

		virtual public bool ExistS1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1S2many2one);
			}
		}

		virtual public void RemoveS1S2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1S2many2one);
		}


		virtual public Allors.Extent<global::Domain.S2> S1S2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1S2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1S2one2many, value);
			}
		}

		virtual public void AddS1S2one2many (global::Domain.S2 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1S2one2many, value);
		}

		virtual public void RemoveS1S2one2many (global::Domain.S2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1S2one2many,value);
		}

		virtual public bool ExistS1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1S2one2many);
			}
		}

		virtual public void RemoveS1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1S2one2many);
		}



		virtual public global::System.Double? S1AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.S1AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsDouble, value);
			}
		}

		virtual public bool ExistS1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsDouble);
			}
		}

		virtual public void RemoveS1AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsDouble);
		}



		virtual public global::System.String S1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.S1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsString, value);
			}
		}

		virtual public bool ExistS1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsString);
			}
		}

		virtual public void RemoveS1AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsString);
		}


		virtual public global::Domain.C1 S1C1many2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.S1C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1C1many2one ,value);
			}
		}

		virtual public bool ExistS1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1C1many2one);
			}
		}

		virtual public void RemoveS1C1many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1C1many2one);
		}


		virtual public global::Domain.C1 S1C1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.S1C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1C1one2one ,value);
			}
		}

		virtual public bool ExistS1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1C1one2one);
			}
		}

		virtual public void RemoveS1C1one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1C1one2one);
		}



		virtual public global::System.Boolean? S1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.S1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsBoolean);
			}
		}

		virtual public void RemoveS1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsBoolean);
		}


		virtual public Allors.Extent<global::Domain.C1> S1C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1C1many2many, value);
			}
		}

		virtual public void AddS1C1many2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1C1many2many, value);
		}

		virtual public void RemoveS1C1many2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1C1many2many,value);
		}

		virtual public bool ExistS1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1C1many2many);
			}
		}

		virtual public void RemoveS1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1C1many2many);
		}


		virtual public Allors.Extent<global::Domain.S2> S1S2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1S2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1S2many2many, value);
			}
		}

		virtual public void AddS1S2many2many (global::Domain.S2 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1S2many2many, value);
		}

		virtual public void RemoveS1S2many2many (global::Domain.S2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1S2many2many,value);
		}

		virtual public bool ExistS1S2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1S2many2many);
			}
		}

		virtual public void RemoveS1S2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1S2many2many);
		}


		virtual public global::Domain.S2 S1S2one2one
		{ 
			get
			{
				return (global::Domain.S2) Strategy.GetCompositeRole(C1Meta.S1S2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1S2one2one ,value);
			}
		}

		virtual public bool ExistS1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1S2one2one);
			}
		}

		virtual public void RemoveS1S2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1S2one2one);
		}



		virtual public global::System.Int64? S1AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.S1AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsLong, value);
			}
		}

		virtual public bool ExistS1AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsLong);
			}
		}

		virtual public void RemoveS1AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsLong);
		}



		virtual public global::System.DateTime? S1AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.S1AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1AllorsDateTime, value);
			}
		}

		virtual public bool ExistS1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1AllorsDateTime);
			}
		}

		virtual public void RemoveS1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.S1AllorsDateTime);
		}


		virtual public Allors.Extent<global::Domain.C1> S1C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1C1one2many, value);
			}
		}

		virtual public void AddS1C1one2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1C1one2many, value);
		}

		virtual public void RemoveS1C1one2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1C1one2many,value);
		}

		virtual public bool ExistS1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1C1one2many);
			}
		}

		virtual public void RemoveS1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1C1one2many);
		}



		virtual public global::System.Double? S1234AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.S1234AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1234AllorsDouble, value);
			}
		}

		virtual public bool ExistS1234AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1234AllorsDouble);
			}
		}

		virtual public void RemoveS1234AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.S1234AllorsDouble);
		}



		virtual public global::System.Decimal? S1234AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.S1234AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1234AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1234AllorsDecimal);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.S1234AllorsDecimal);
		}



		virtual public global::System.Int32? S1234AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.S1234AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1234AllorsInteger, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1234AllorsInteger);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.S1234AllorsInteger);
		}


		virtual public global::Domain.S1234 S1234many2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C1Meta.S1234many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1234many2one ,value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1234many2one);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234many2one);
		}


		virtual public global::Domain.C2 S1234C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.S1234C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1234C2one2one ,value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1234C2one2one);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1234C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1234C2many2many, value);
			}
		}

		virtual public void AddS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1234C2many2many, value);
		}

		virtual public void RemoveS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234C2many2many,value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1234C2many2many);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1234C2many2many);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1234one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1234one2many, value);
			}
		}

		virtual public void AddS1234one2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1234one2many, value);
		}

		virtual public void RemoveS1234one2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234one2many,value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1234one2many);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1234one2many);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1234C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1234C2one2many, value);
			}
		}

		virtual public void AddS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1234C2one2many, value);
		}

		virtual public void RemoveS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234C2one2many,value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1234C2one2many);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1234C2one2many);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S1234many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S1234many2many, value);
			}
		}

		virtual public void AddS1234many2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C1Meta.S1234many2many, value);
		}

		virtual public void RemoveS1234many2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234many2many,value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S1234many2many);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S1234many2many);
		}



		virtual public global::System.Int64? S1234AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.S1234AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1234AllorsLong, value);
			}
		}

		virtual public bool ExistS1234AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1234AllorsLong);
			}
		}

		virtual public void RemoveS1234AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.S1234AllorsLong);
		}



		virtual public global::System.String ClassName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.ClassName);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.ClassName, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.ClassName);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(C1Meta.ClassName);
		}



		virtual public global::System.DateTime? S1234AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.S1234AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1234AllorsDateTime, value);
			}
		}

		virtual public bool ExistS1234AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1234AllorsDateTime);
			}
		}

		virtual public void RemoveS1234AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.S1234AllorsDateTime);
		}


		virtual public global::Domain.S1234 S1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C1Meta.S1234one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1234one2one ,value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1234one2one);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234one2one);
		}


		virtual public global::Domain.C2 S1234C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.S1234C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S1234C2many2one ,value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S1234C2many2one);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S1234C2many2one);
		}



		virtual public global::System.String S1234AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.S1234AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1234AllorsString, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1234AllorsString);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.S1234AllorsString);
		}



		virtual public global::System.Boolean? S1234AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.S1234AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S1234AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S1234AllorsBoolean);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.S1234AllorsBoolean);
		}



		virtual public global::System.Boolean? I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsBoolean);
		}



		virtual public global::System.Int32? I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.I34> I12I34one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I34one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I34one2many, value);
			}
		}

		virtual public void AddI12I34one2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I34one2many, value);
		}

		virtual public void RemoveI12I34one2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I34one2many,value);
		}

		virtual public bool ExistI12I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I34one2many);
			}
		}

		virtual public void RemoveI12I34one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I34one2many);
		}


		virtual public global::Domain.C3 C3many2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C1Meta.C3many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C3many2one ,value);
			}
		}

		virtual public bool ExistC3many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C3many2one);
			}
		}

		virtual public void RemoveC3many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.C3many2one);
		}


		virtual public global::Domain.C2 I12C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12C2many2one ,value);
			}
		}

		virtual public bool ExistI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12C2many2one);
			}
		}

		virtual public void RemoveI12C2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C2many2one);
		}



		virtual public global::System.Double? I12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsDouble, value);
			}
		}

		virtual public bool ExistI12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsDouble);
			}
		}

		virtual public void RemoveI12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsDouble);
		}


		virtual public global::Domain.I34 I12I34many2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C1Meta.I12I34many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I34many2one ,value);
			}
		}

		virtual public bool ExistI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I34many2one);
			}
		}

		virtual public void RemoveI12I34many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I34many2one);
		}


		virtual public Allors.Extent<global::Domain.I34> I12I34many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I34many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I34many2many, value);
			}
		}

		virtual public void AddI12I34many2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I34many2many, value);
		}

		virtual public void RemoveI12I34many2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I34many2many,value);
		}

		virtual public bool ExistI12I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I34many2many);
			}
		}

		virtual public void RemoveI12I34many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I34many2many);
		}


		virtual public global::Domain.C3 I12C3one2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C1Meta.I12C3one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12C3one2one ,value);
			}
		}

		virtual public bool ExistI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12C3one2one);
			}
		}

		virtual public void RemoveI12C3one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C3one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12C2many2many, value);
			}
		}

		virtual public void AddI12C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12C2many2many, value);
		}

		virtual public void RemoveI12C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C2many2many,value);
		}

		virtual public bool ExistI12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12C2many2many);
			}
		}

		virtual public void RemoveI12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12C2many2many);
		}



		virtual public global::System.Int64? I12AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I12AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsLong, value);
			}
		}

		virtual public bool ExistI12AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsLong);
			}
		}

		virtual public void RemoveI12AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsLong);
		}



		virtual public global::System.Decimal? I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsDecimal);
		}


		virtual public global::Domain.C2 I12C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12C2one2one ,value);
			}
		}

		virtual public bool ExistI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12C2one2one);
			}
		}

		virtual public void RemoveI12C2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C3> I12C3one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12C3one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12C3one2many, value);
			}
		}

		virtual public void AddI12C3one2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12C3one2many, value);
		}

		virtual public void RemoveI12C3one2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C3one2many,value);
		}

		virtual public bool ExistI12C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12C3one2many);
			}
		}

		virtual public void RemoveI12C3one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12C3one2many);
		}


		virtual public Allors.Extent<global::Domain.C3> I12C3many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12C3many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12C3many2many, value);
			}
		}

		virtual public void AddI12C3many2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12C3many2many, value);
		}

		virtual public void RemoveI12C3many2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C3many2many,value);
		}

		virtual public bool ExistI12C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12C3many2many);
			}
		}

		virtual public void RemoveI12C3many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12C3many2many);
		}



		virtual public global::System.String PrefetchTest 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.PrefetchTest);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.PrefetchTest, value);
			}
		}

		virtual public bool ExistPrefetchTest{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.PrefetchTest);
			}
		}

		virtual public void RemovePrefetchTest()
		{
			Strategy.RemoveUnitRole(C1Meta.PrefetchTest);
		}



		virtual public global::System.DateTime? I12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsDateTime, value);
			}
		}

		virtual public bool ExistI12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsDateTime);
			}
		}

		virtual public void RemoveI12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsDateTime);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsString);
		}


		virtual public global::Domain.I34 I12I34one2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C1Meta.I12I34one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I34one2one ,value);
			}
		}

		virtual public bool ExistI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I34one2one);
			}
		}

		virtual public void RemoveI12I34one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I34one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12C2one2many, value);
			}
		}

		virtual public void AddI12C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12C2one2many, value);
		}

		virtual public void RemoveI12C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C2one2many,value);
		}

		virtual public bool ExistI12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12C2one2many);
			}
		}

		virtual public void RemoveI12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12C2one2many);
		}



		virtual public global::System.String S12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.S12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S12AllorsString, value);
			}
		}

		virtual public bool ExistS12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S12AllorsString);
			}
		}

		virtual public void RemoveS12AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.S12AllorsString);
		}



		virtual public global::System.DateTime? S12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.S12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S12AllorsDateTime, value);
			}
		}

		virtual public bool ExistS12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S12AllorsDateTime);
			}
		}

		virtual public void RemoveS12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.S12AllorsDateTime);
		}


		virtual public Allors.Extent<global::Domain.C2> S12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S12C2many2many, value);
			}
		}

		virtual public void AddS12C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.S12C2many2many, value);
		}

		virtual public void RemoveS12C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S12C2many2many,value);
		}

		virtual public bool ExistS12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S12C2many2many);
			}
		}

		virtual public void RemoveS12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S12C2many2many);
		}


		virtual public global::Domain.C2 S12C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.S12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S12C2many2one ,value);
			}
		}

		virtual public bool ExistS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S12C2many2one);
			}
		}

		virtual public void RemoveS12C2many2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S12C2many2one);
		}


		virtual public global::Domain.C2 S12C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.S12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.S12C2one2one ,value);
			}
		}

		virtual public bool ExistS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.S12C2one2one);
			}
		}

		virtual public void RemoveS12C2one2one()
		{
			Strategy.RemoveCompositeRole(C1Meta.S12C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> S12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.S12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.S12C2one2many, value);
			}
		}

		virtual public void AddS12C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.S12C2one2many, value);
		}

		virtual public void RemoveS12C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.S12C2one2many,value);
		}

		virtual public bool ExistS12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.S12C2one2many);
			}
		}

		virtual public void RemoveS12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.S12C2one2many);
		}



		virtual public global::System.Boolean? S12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.S12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S12AllorsBoolean, value);
			}
		}

		virtual public bool ExistS12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S12AllorsBoolean);
			}
		}

		virtual public void RemoveS12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.S12AllorsBoolean);
		}



		virtual public global::System.Double? S12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.S12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S12AllorsDouble, value);
			}
		}

		virtual public bool ExistS12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S12AllorsDouble);
			}
		}

		virtual public void RemoveS12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.S12AllorsDouble);
		}



		virtual public global::System.Int32? S12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.S12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S12AllorsInteger, value);
			}
		}

		virtual public bool ExistS12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S12AllorsInteger);
			}
		}

		virtual public void RemoveS12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.S12AllorsInteger);
		}



		virtual public global::System.Decimal? S12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.S12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.S12AllorsDecimal, value);
			}
		}

		virtual public bool ExistS12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.S12AllorsDecimal);
			}
		}

		virtual public void RemoveS12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.S12AllorsDecimal);
		}



		virtual public Allors.Extent<global::Domain.C2> C2sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereC1many2many);
			}
		}

		virtual public bool ExistC2sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereC1many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereC1many2one);
			}
		}

		virtual public bool ExistC1sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereC1many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereMany2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereMany2One);
			}
		}

		virtual public bool ExistC1sWhereMany2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereMany2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereC1many2many);
			}
		}

		virtual public bool ExistC1sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereC1many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereC1many2one);
			}
		}

		virtual public bool ExistI1sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereC1many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereC1one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereC1one2one);
			}
		} 

		virtual public bool ExistI1WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereC1one2one);
			}
		}


		virtual public global::Domain.C1 C1WhereC1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereC1one2one);
			}
		} 

		virtual public bool ExistC1WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereC1one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereC1many2many);
			}
		}

		virtual public bool ExistI1sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereC1many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1> S1sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.S1sWhereC1many2one);
			}
		}

		virtual public bool ExistS1sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.S1sWhereC1many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereC1many2one);
			}
		}

		virtual public bool ExistC2sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereC1many2one);
			}
		}


		virtual public global::Domain.S1 S1WhereC1one2one
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeAssociation(C1Meta.S1WhereC1one2one);
			}
		} 

		virtual public bool ExistS1WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.S1WhereC1one2one);
			}
		}


		virtual public global::Domain.C2 C2WhereC1one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereC1one2one);
			}
		} 

		virtual public bool ExistC2WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereC1one2one);
			}
		}


		virtual public global::Domain.C1 C1WhereC1one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereC1one2many);
			}
		} 

		virtual public bool ExistC1WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereC1one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1> S1sWhereC1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.S1sWhereC1many2many);
			}
		}

		virtual public bool ExistS1sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.S1sWhereC1many2many);
			}
		}


		virtual public global::Domain.C2 C2WhereC1one2many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereC1one2many);
			}
		} 

		virtual public bool ExistC2WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereC1one2many);
			}
		}


		virtual public global::Domain.S1 S1WhereC1one2many
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeAssociation(C1Meta.S1WhereC1one2many);
			}
		} 

		virtual public bool ExistS1WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.S1WhereC1one2many);
			}
		}


		virtual public global::Domain.I3 I3WhereC1one2one
		{ 
			get
			{
				return (global::Domain.I3) Strategy.GetCompositeAssociation(C1Meta.I3WhereC1one2one);
			}
		} 

		virtual public bool ExistI3WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I3WhereC1one2one);
			}
		}


		virtual public global::Domain.I1 I1WhereC1one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereC1one2many);
			}
		} 

		virtual public bool ExistI1WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereC1one2many);
			}
		}


		virtual public global::Domain.C1 C1WhereI1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI1one2one);
			}
		} 

		virtual public bool ExistC1WhereI1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI1one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI1many2one);
			}
		}

		virtual public bool ExistI1sWhereI1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI1many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI1many2many);
			}
		}

		virtual public bool ExistC1sWhereI1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI1many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI1many2one);
			}
		}

		virtual public bool ExistC1sWhereI1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI1many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereI1one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI1one2many);
			}
		} 

		virtual public bool ExistI1WhereI1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI1one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI1many2many);
			}
		}

		virtual public bool ExistI1sWhereI1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI1many2many);
			}
		}


		virtual public global::Domain.C1 C1WhereI1one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI1one2many);
			}
		} 

		virtual public bool ExistC1WhereI1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI1one2many);
			}
		}


		virtual public global::Domain.I1 I1WhereI1one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI1one2one);
			}
		} 

		virtual public bool ExistI1WhereI1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI1one2one);
			}
		}


		virtual public global::Domain.C1 C1WhereS1one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereS1one2many);
			}
		} 

		virtual public bool ExistC1WhereS1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereS1one2many);
			}
		}


		virtual public global::Domain.I1 I1WhereS1one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereS1one2one);
			}
		} 

		virtual public bool ExistI1WhereS1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereS1one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereS1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereS1many2many);
			}
		}

		virtual public bool ExistC1sWhereS1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereS1many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereS1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereS1many2one);
			}
		}

		virtual public bool ExistC1sWhereS1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereS1many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereS1many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereS1many2many);
			}
		}

		virtual public bool ExistI1sWhereS1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereS1many2many);
			}
		}


		virtual public global::Domain.C1 C1WhereS1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereS1one2one);
			}
		} 

		virtual public bool ExistC1WhereS1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereS1one2one);
			}
		}


		virtual public global::Domain.I1 I1WhereS1one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereS1one2many);
			}
		} 

		virtual public bool ExistI1WhereS1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereS1one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereS1many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereS1many2one);
			}
		}

		virtual public bool ExistI1sWhereS1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereS1many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.S1234sWhereS1234many2one);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.S1234sWhereS1234many2one);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2many
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C1Meta.S1234WhereS1234one2many);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.S1234WhereS1234one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.S1234sWhereS1234many2many);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.S1234sWhereS1234many2many);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C1Meta.S1234WhereS1234one2one);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.S1234WhereS1234one2one);
			}
		}


		virtual public global::Domain.C1 C1WhereI12one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI12one2one);
			}
		} 

		virtual public bool ExistC1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI12one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI12many2one);
			}
		}

		virtual public bool ExistI1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI12many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereI12one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI12one2one);
			}
		} 

		virtual public bool ExistI1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI12one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI12many2one);
			}
		}

		virtual public bool ExistC1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI12many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI12many2many);
			}
		}

		virtual public bool ExistI1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI12many2many);
			}
		}


		virtual public global::Domain.I1 I1WhereI12one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI12one2many);
			}
		} 

		virtual public bool ExistI1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI12one2many);
			}
		}


		virtual public global::Domain.C1 C1WhereI12one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI12one2many);
			}
		} 

		virtual public bool ExistC1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI12one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI12many2many);
			}
		}

		virtual public bool ExistC1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI12many2many);
			}
		}

	}

	public static class C1Meta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7041c691-d896-4628-8f50-1c24f5d03414") );

		public static readonly global::Allors.Meta.RoleType C1DecimalBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("024db9e0-b51f-4d8b-a2d0-0a041dcebd62"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1LongLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("03245a2b-be79-4cd5-a3fb-40ca784c108d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("03fc18eb-46be-411a-9b1e-4a1953843d92"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DecimalBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0aefa669-9c8a-4fbf-98a4-230d93df8341"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Argument = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0e57dd07-bb58-4620-a898-3060af007f60"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("10df748e-3b9c-48f4-82dc-85498f199567"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("13761939-4842-45ba-af73-2a5976e2d6e3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("20713860-8abd-4d71-8ccc-2b4d1b88bce3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2cd8b843-f1f5-413d-9d6d-0d2b9b3c5cf6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2cee32ad-4e62-4112-9775-f84b0298e93a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DoubleBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2fa10f1e-d7f6-4f75-92a8-15d7b02b8c19"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2fc66f19-7fd4-4dc1-95ef-7931864ad083"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2ff1c9ba-0017-466e-9f11-776086e6d0b0"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("3673e4f6-8b40-44e7-be25-d73907b5806a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DoubleBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("392e8c95-bbfc-4d24-b751-36c17a7b0ee6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("3fea182f-07b0-4c36-8170-960b484801f6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1IntegerLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("49970761-ebe1-4623-a822-5ee1d1f3fafc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1StringLarge = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4b970db5-d0ec-4765-9f9b-6e9aafc9dbcc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4c0362ad-4d0e-4e57-a057-1852ddd8eed8"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4c776502-77d7-45d9-b101-62dee27c0c2e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DoubleGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4c95279f-fb68-49d1-b9c2-27c612c4c28e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4dab4e16-b8a2-46c1-949d-62aead9a9c9f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("599420c6-0757-49f6-8ae7-4cb0714ca791"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DateTimeLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6459deba-24e6-4867-a555-75f672f33893"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DateTimeBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6aadb05d-6b80-47c5-b625-18b86e762c94"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("71abe169-dea4-4834-8d37-34cbcffa6cee"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("724f101c-db45-44f3-b9ca-c8f3b0c28d29"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("79fbfbc3-50e3-4e45-a5bf-8a253bb6f0c6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DoubleLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7b058b52-dc6b-4f8c-af72-28c9b0c0fde4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7fce490e-78af-46a9-a87d-de233073ab3c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1LongGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8592bb21-c3cc-4f70-bf2b-442269a01104"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DecimalGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8679b3aa-cdad-4ee1-b4fb-edcefd660edb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("87eb0d19-73a7-4aae-aeed-66dc9163233c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("91e8b23b-48fb-4d20-8a71-89c5630f1c78"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("92cbd254-9763-41e1-9c73-4a378aab4b8e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DateTimeBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("934421bd-6cac-4e99-9457-43117a9f3c52"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("97f31053-0e7b-42a0-90c2-ce6f09c56e86"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DateTimeGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9d8c9863-dd8d-4c85-a5e6-58042ff3619d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9df07ff8-7a29-4d41-a08e-d46efdd15e32"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ab6d11cc-ec86-4828-8875-2e9a779ba627"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ac0cfbe2-a2ff-4781-83aa-5d4e459d939f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ac2096a9-b58b-41d3-a1d3-920f0b41cb2f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ad1b1fb1-b30c-431f-b975-5505f6311a18"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2071550-cc1b-4543-b98f-006e7564a74b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b4e3d3d1-65b2-4803-954f-1e09f39e5594"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b4ee673f-bba0-4e24-9cda-3cf993c79a0a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c58903fb-443b-4de9-b010-15f3f09ff5df"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c92fbc53-ae5e-450e-9681-ca17833e6e2f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cef13620-b7d7-4bfe-8d3b-c0f826da5989"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C3one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d3f73a6d-8f95-44c6-bbc8-ddc468b803f7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C3many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("da4d6a24-6b0f-4841-b355-80ee1ba10c59"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1StringEquals = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("dc55a574-5546-4a68-b886-706c39bc4e80"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1LongBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e109ccb9-6469-4dd4-9b04-2a6fb5d6d6a8"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1IntegerGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e2153298-73b0-4f5f-bba0-00c832b044b3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C3may2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e3af3413-4631-4052-ac57-955651a319fc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1IntegerBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e3dedb1d-6738-46f7-8a25-77213c90a8f9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef75cc4e-8787-4f1c-ae5c-73577d721467"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1IntegerBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef909fec-7a03-4a3c-a3f4-6097a51ff1f0"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f268783d-42ed-41c1-b0b0-b8a60e30a601"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1LongBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f31a140e-6e95-4c7b-bdd7-d58137061b85"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f39739d2-e8fc-406e-be6a-c92acee07686"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1S2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f47b9392-1391-416e-9a49-23ab0627133e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f4920d94-8cd0-45b6-be00-f18d377368fd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1DecimalLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fc56ca04-9737-4b51-939e-4854e5507953"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C3one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fee2d1a8-bb65-4bfe-b25f-407c629dec18"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I34one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("00a70a04-4fc8-4585-83ce-0f7f0e0db7ab"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("036e3008-07f8-4a15-bca2-eb21837778a0"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0b0f8c40-266c-424a-8276-0e8e2673d1a7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0d63e4c7-28de-4d47-8f23-7ee1d3606751"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("14a93943-13f6-481d-98c7-19fb55625af9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DecimalBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("19e09e31-31ac-44cc-ad1e-a015f4747aeb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1d41941b-3b1d-48d7-bc6f-e8811cbd96e4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("28b92468-27e5-4471-b3a5-37b8ec4f794e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("28ceffc2-c776-4a0a-9825-a6d1bcb265dc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DateTimeLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("29244f33-6d79-44aa-9ed2-8cc01b5070b7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2cd562b6-7f54-49af-b853-2244f10ec60e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1StringLarge = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2e98ec7e-486f-4b96-ac15-5149fe6c4e0e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DoubleLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2f739fa2-c169-4721-8d2d-79f27a6e57c6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("32fc21cc-4be7-4a0e-ac71-df135be95e68"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("33f13167-3a14-4b06-a1d8-87076918b285"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1LongBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("350e73e2-5a0c-4b07-ae27-a16dbb19080d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("381c61c1-312d-47ea-8314-8ac051378a81"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DecimalGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("39f1c13c-7d77-429f-ac9b-1491e949aa3a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4401d0b8-2450-45a8-92d2-ff3961e129b2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1LongLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("47c5ef75-a428-4444-afdb-1d5ef89a7a71"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4a30d40e-ade3-4304-b17b-185abc8b7fde"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1IntegerBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("518da995-1f6b-4632-94f1-11cea5e72717"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I34many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("528ece9c-81f2-4ea4-8d42-50d9a3fe1eea"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DoubleBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("58d75a73-61d3-4ad7-bd1a-b3e673d8ee31"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1IntegerLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5901c4d4-420f-47a3-87e3-ac04b4601efc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5cb44331-fd8c-4f73-8994-161f702849b6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("68549750-b8f9-4a29-a078-803e7348e142"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6c3d04be-6f95-44b8-863a-245e150e3110"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6e7c286c-42e0-45d7-8ad8-ac0ed91dbbb5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7014e84c-62c4-48ba-b4ec-ab52a897f443"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("70312f37-52e9-4cf6-9dd6-b357628ea3ed"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("75fb2012-0b49-4442-a9b4-8239cffb1d37"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("818b4013-5ef1-4455-9f0d-9a39fa3425bb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("82a81e9e-7a13-43d3-bb8f-227edfe26a1f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DateTimeGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9095f55b-de23-49d7-a28e-918c22c5cfd2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I34many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("912eeb1b-c5d6-4ea3-9e66-6d92cc455ef6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I34one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9291fb85-9d1f-4c5d-96ec-797be51557ce"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("95fff847-922f-4d6f-9e98-37013bdf6b06"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9735d027-4249-4540-9658-f3ec06d3b868"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("973d6e4f-57ff-454a-9621-bd5dccb65525"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9b05ecb0-c3d5-4b11-98dc-653aef9f65cc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1StringEquals = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9f70c4eb-2e36-4ae1-8ed2-b3fab908e392"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1LongGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a4001f82-570e-441a-8d74-bac9241f12f2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a458ad6e-0f4a-473b-a233-04b8e7fadf62"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a77bcd80-82df-4b76-a1bc-8e78106d7d53"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b4f171d3-1463-41bc-8230-e53e5a717b89"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b9c67658-4abc-41f3-9434-c8512a482179"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DecimalBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c04d1e56-2686-495b-a02d-cda84f7cd2ff"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1LongBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c1021c10-9065-46f0-9cbf-30fa1e9e06ae"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DoubleGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c3496e43-335b-43b8-9fed-44439c9ae0d1"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1IntegerBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c892a286-fe92-4b8b-98ba-c5e02fb96279"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DateTimeBetweenA = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c95ac96b-4385-4e31-8719-f120c76ab67a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cdb758bf-ecaf-4d99-88fb-58df9258c13c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d24b5b74-6ea2-4788-857c-90e0ba1433a5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ddbfe021-3310-4d8e-a4ef-438306aaf191"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1IntegerGreaterThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e8f1c37a-6bae-4ff5-b385-39bff287bf78"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ee44a1bb-a5c7-4b05-a06b-8ff9ca9d4f98"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DoubleBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("eec19d8e-727c-437a-95db-b301cd1cd65a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DecimalLessThan = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f1a1ef6a-8275-4b57-8cd0-8e79ee5a517d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1DateTimeBetweenB = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f5a6b7d9-9f49-44a8-b303-1a2969195bd1"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f9d7411e-7993-4e43-a7e2-726f1e44e29c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fbc1fd9f-853a-4b7d-b618-447b765b3bcb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1S2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fe51c02e-ed28-4628-9da1-7bc2131c8992"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("294e7ce3-1b0b-490a-a5e8-6149885d4943"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4cd28d56-ffd6-461c-b9ed-ca0e4bae51df"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("55ab6cfa-651b-48ec-bc33-ad3a381d2260"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("645c20ac-5b4f-40db-8d11-d2b07123dabe"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1StringLarge = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("678b14c4-b5ae-48e3-ac06-2459cab66c34"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1S2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6a166388-5bca-4cd9-bfee-0da27cbc3073"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1S2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6ee98698-15dc-4998-88c3-d2a4d1c19e8c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("701ca57d-241f-470c-b690-9045c0f76c8f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("70815e0c-11d4-41ac-b0b2-105f8ede6d27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1C1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("77afee4a-08b7-4231-aa73-575145efd1e3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1C1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8f5485ba-5a82-4d01-809e-52b467f958d8"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9fbcf7ce-3b59-458d-ab5e-9c48dd3842b3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1C1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c0cfe3ee-d184-40bd-8354-b0b0bd4e641c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1S2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c6f49460-a259-44de-b674-4d0585fe00cd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1S2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("dc22175f-185d-4cd3-b492-74b0a9389c91"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("de02a563-2c77-4936-ab07-d322b8dcaec9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e263ac2b-822d-4aa4-8a8c-67db3f2b4bb0"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1C1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef918b82-87f4-4591-bf19-2fd5a1019ece"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("012a43d3-e1e0-4693-a771-1526c29b7ac4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2ac36edd-d718-4252-b7cf-74849e1fca6e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("46263379-afd4-4472-bb05-057fb88163ab"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4b846355-000b-4651-bff2-51f1275c1461"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("58a56dee-c613-4d76-ab99-5608e7709cd8"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("73302b50-8526-40ae-a202-5b17e1093629"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8fb24e1c-9e04-4b3d-8a97-153d3c0ea7ec"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("94a49847-273f-4e9b-b07b-d615d994757a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a2e7c6f6-ca0d-4fb3-9431-8dd1be7ebdb7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b0814062-4881-43ec-935e-c6b61ef0bcf6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType ClassName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b299db28-1107-4120-946c-fbdad2271c5c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c13e8484-75a3-40be-afd5-44a31aca3771"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c2fac2fc-14c6-4aa3-89ff-afba1316d06d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("df9eb36a-366f-4a5a-a750-f2f23f681c74"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e6164217-2f54-4134-8c53-4a45caa9dd11"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef45cd72-2e16-47df-b949-c803a554b307"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1a0eb6ea-d877-42c9-a35a-889fb347f883"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("249ff221-9261-4219-b0a8-0dc2a8dac8db"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2c05b90e-a036-450a-8b4e-ee70c8146fed"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C3many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("3327e14d-5601-4806-b6c5-b740a2c3aa38"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("3589d5bc-3338-449a-bd14-34a19d92251e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4c7dd6a2-db16-4477-9b21-34dcb8f50738"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("61fc731f-d769-4eb9-bf87-983e73e403e4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("716d13fc-f608-41a8-ac9e-824890c585b5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C3one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("74a22498-ec2c-441b-a42c-0c248ace685d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7f373030-657a-4c6b-a086-ac4de33e4648"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("94b55cec-cf78-420b-b4c9-1bca8a8af9dc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9fbca845-1f98-4ac8-8117-fa66bbe287eb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("afabb84c-f1b3-423b-9028-2ec5bb58e994"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C3one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b0fc73fb-fa74-4e8c-b9e1-17c01698f342"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C3many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b889bc75-3d93-4577-a4d7-752393284220"))).RoleType;
		public static readonly global::Allors.Meta.RoleType PrefetchTest = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c2d1f044-b996-4b16-8fe3-1786f86973b1"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c3a2e1da-307c-4fad-ab34-6e9d07eea74f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e227ff6c-a4df-49cf-a02f-04e94af6eb4b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f31ace17-76b1-46db-9fc0-099b94fbada5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f37b107e-74e5-401f-a7e8-8ac54ceb6c73"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("06fabe71-737a-4cff-ac10-2d15dafce503"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2eb9e232-4ed4-4997-a21a-f11bb0fe3b0e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("39f50108-df59-455d-8371-fc07f3dbb7ef"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("61e8c425-407e-408b-9f2e-c95548833004"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("830117d4-fbe1-4944-bacf-54331e8451d7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a3aac482-aad0-4b59-9361-51b23867e5a2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a97eca8e-807b-4a06-9587-6240f6150203"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("acc4ae39-2d5c-4485-be22-87b27e84b627"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d07313ca-fd8d-4c74-928e-41274aa28de9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f7ace363-89bd-4ea5-a865-4a6e3de2d723"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType C2sWhereC1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0947eb06-5511-475f-8d68-06cfb812678e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2cd8b843-f1f5-413d-9d6d-0d2b9b3c5cf6"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereMany2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2fc66f19-7fd4-4dc1-95ef-7931864ad083"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2ff1c9ba-0017-466e-9f11-776086e6d0b0"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereC1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("33f13167-3a14-4b06-a1d8-87076918b285"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4401d0b8-2450-45a8-92d2-ff3961e129b2"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4c776502-77d7-45d9-b101-62dee27c0c2e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereC1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7014e84c-62c4-48ba-b4ec-ab52a897f443"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1sWhereC1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("77afee4a-08b7-4231-aa73-575145efd1e3"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereC1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7ee9d97c-8ae3-438c-adfd-6a35b3ff645b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1WhereC1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8f5485ba-5a82-4d01-809e-52b467f958d8"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9540e8d3-9fe3-4aea-9918-fc31210f2622"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ab6d11cc-ec86-4828-8875-2e9a779ba627"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1sWhereC1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c0cfe3ee-d184-40bd-8354-b0b0bd4e641c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d82be8f5-673a-466b-8abb-077be0bc6eb5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1WhereC1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef918b82-87f4-4591-bf19-2fd5a1019ece"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I3WhereC1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fb90c539-a392-4618-bb0b-9809a3a673aa"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fbc1fd9f-853a-4b7d-b618-447b765b3bcb"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("3fea182f-07b0-4c36-8170-960b484801f6"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6e7c286c-42e0-45d7-8ad8-ac0ed91dbbb5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("79fbfbc3-50e3-4e45-a5bf-8a253bb6f0c6"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7fce490e-78af-46a9-a87d-de233073ab3c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("95fff847-922f-4d6f-9e98-37013bdf6b06"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9735d027-4249-4540-9658-f3ec06d3b868"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ac0cfbe2-a2ff-4781-83aa-5d4e459d939f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ddbfe021-3310-4d8e-a4ef-438306aaf191"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereS1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("10df748e-3b9c-48f4-82dc-85498f199567"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereS1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1d41941b-3b1d-48d7-bc6f-e8811cbd96e4"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereS1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("3673e4f6-8b40-44e7-be25-d73907b5806a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereS1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("724f101c-db45-44f3-b9ca-c8f3b0c28d29"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereS1many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("82a81e9e-7a13-43d3-bb8f-227edfe26a1f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereS1one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9df07ff8-7a29-4d41-a08e-d46efdd15e32"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereS1one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d24b5b74-6ea2-4788-857c-90e0ba1433a5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereS1many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ee44a1bb-a5c7-4b05-a06b-8ff9ca9d4f98"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234sWhereS1234many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4b846355-000b-4651-bff2-51f1275c1461"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234WhereS1234one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8fb24e1c-9e04-4b3d-8a97-153d3c0ea7ec"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234sWhereS1234many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a2e7c6f6-ca0d-4fb3-9431-8dd1be7ebdb7"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234WhereS1234one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c2fac2fc-14c6-4aa3-89ff-afba1316d06d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("13761939-4842-45ba-af73-2a5976e2d6e3"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("28b92468-27e5-4471-b3a5-37b8ec4f794e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12one2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("381c61c1-312d-47ea-8314-8ac051378a81"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12many2one = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("599420c6-0757-49f6-8ae7-4cb0714ca791"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9b05ecb0-c3d5-4b11-98dc-653aef9f65cc"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a458ad6e-0f4a-473b-a233-04b8e7fadf62"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12one2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ad1b1fb1-b30c-431f-b975-5505f6311a18"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12many2many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c58903fb-443b-4de9-b010-15f3f09ff5df"))).AssociationType;

	}
}