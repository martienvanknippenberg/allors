// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Person : PersonAllors , global::Domain.Named
	{
		public Person(Allors.IStrategy allors) : base(allors) {}

		public static Person Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Person) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class PersonAllors : Allors.ObjectBase
	{
		protected PersonAllors(Allors.IStrategy allors) : base(allors){}


		virtual public global::Domain.Person NextPerson
		{ 
			get
			{
				return (global::Domain.Person) Strategy.GetCompositeRole(PersonMeta.NextPerson);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.NextPerson ,value);
			}
		}

		virtual public bool ExistNextPerson
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.NextPerson);
			}
		}

		virtual public void RemoveNextPerson()
		{
			Strategy.RemoveCompositeRole(PersonMeta.NextPerson);
		}


		virtual public global::Domain.Company Company
		{ 
			get
			{
				return (global::Domain.Company) Strategy.GetCompositeRole(PersonMeta.Company);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.Company ,value);
			}
		}

		virtual public bool ExistCompany
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.Company);
			}
		}

		virtual public void RemoveCompany()
		{
			Strategy.RemoveCompositeRole(PersonMeta.Company);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.Name);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(PersonMeta.Name);
		}



		virtual public global::System.Int32? Index 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(PersonMeta.Index);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.Index, value);
			}
		}

		virtual public bool ExistIndex{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.Index);
			}
		}

		virtual public void RemoveIndex()
		{
			Strategy.RemoveUnitRole(PersonMeta.Index);
		}



		virtual public Allors.Extent<global::Domain.Company> CompaniesWhereManager
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWhereManager);
			}
		}

		virtual public bool ExistCompaniesWhereManager
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWhereManager);
			}
		}


		virtual public global::Domain.Company CompanyWhereEmployee
		{ 
			get
			{
				return (global::Domain.Company) Strategy.GetCompositeAssociation(PersonMeta.CompanyWhereEmployee);
			}
		} 

		virtual public bool ExistCompanyWhereEmployee
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.CompanyWhereEmployee);
			}
		}


		virtual public global::Domain.Person PersonWhereNextPerson
		{ 
			get
			{
				return (global::Domain.Person) Strategy.GetCompositeAssociation(PersonMeta.PersonWhereNextPerson);
			}
		} 

		virtual public bool ExistPersonWhereNextPerson
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.PersonWhereNextPerson);
			}
		}


		virtual public global::Domain.Company CompanyWhereFirstPerson
		{ 
			get
			{
				return (global::Domain.Company) Strategy.GetCompositeAssociation(PersonMeta.CompanyWhereFirstPerson);
			}
		} 

		virtual public bool ExistCompanyWhereFirstPerson
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.CompanyWhereFirstPerson);
			}
		}


		virtual public Allors.Extent<global::Domain.Company> CompaniesWhereOwner
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWhereOwner);
			}
		}

		virtual public bool ExistCompaniesWhereOwner
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWhereOwner);
			}
		}


		virtual public Allors.Extent<global::Domain.Company> CompaniesWhereIndexedMany2ManyPerson
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWhereIndexedMany2ManyPerson);
			}
		}

		virtual public bool ExistCompaniesWhereIndexedMany2ManyPerson
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWhereIndexedMany2ManyPerson);
			}
		}


		virtual public global::Domain.Company CompanyWherePersonOneSort1
		{ 
			get
			{
				return (global::Domain.Company) Strategy.GetCompositeAssociation(PersonMeta.CompanyWherePersonOneSort1);
			}
		} 

		virtual public bool ExistCompanyWherePersonOneSort1
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.CompanyWherePersonOneSort1);
			}
		}


		virtual public Allors.Extent<global::Domain.Company> CompaniesWherePersonManySort1
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWherePersonManySort1);
			}
		}

		virtual public bool ExistCompaniesWherePersonManySort1
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWherePersonManySort1);
			}
		}


		virtual public Allors.Extent<global::Domain.Company> CompaniesWherePersonManySort2
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWherePersonManySort2);
			}
		}

		virtual public bool ExistCompaniesWherePersonManySort2
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWherePersonManySort2);
			}
		}


		virtual public global::Domain.Company CompanyWherePersonOneSort2
		{ 
			get
			{
				return (global::Domain.Company) Strategy.GetCompositeAssociation(PersonMeta.CompanyWherePersonOneSort2);
			}
		} 

		virtual public bool ExistCompanyWherePersonOneSort2
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.CompanyWherePersonOneSort2);
			}
		}


		virtual public Allors.Extent<global::Domain.Company> CompaniesWhereMany2ManyPerson
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWhereMany2ManyPerson);
			}
		}

		virtual public bool ExistCompaniesWhereMany2ManyPerson
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWhereMany2ManyPerson);
			}
		}


		virtual public global::Domain.Company CompanyWhereNamedOneSort2
		{ 
			get
			{
				return (global::Domain.Company) Strategy.GetCompositeAssociation(PersonMeta.CompanyWhereNamedOneSort2);
			}
		} 

		virtual public bool ExistCompanyWhereNamedOneSort2
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.CompanyWhereNamedOneSort2);
			}
		}


		virtual public Allors.Extent<global::Domain.Company> CompaniesWhereNamedManySort1
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWhereNamedManySort1);
			}
		}

		virtual public bool ExistCompaniesWhereNamedManySort1
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWhereNamedManySort1);
			}
		}


		virtual public Allors.Extent<global::Domain.Company> CompaniesWhereNamedManySort2
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.CompaniesWhereNamedManySort2);
			}
		}

		virtual public bool ExistCompaniesWhereNamedManySort2
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.CompaniesWhereNamedManySort2);
			}
		}


		virtual public global::Domain.Company CompanyWhereNamedOneSort1
		{ 
			get
			{
				return (global::Domain.Company) Strategy.GetCompositeAssociation(PersonMeta.CompanyWhereNamedOneSort1);
			}
		} 

		virtual public bool ExistCompanyWhereNamedOneSort1
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.CompanyWhereNamedOneSort1);
			}
		}

	}

	public static class PersonMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6a082a25-a8f2-4acd-a1a3-ba4461b729f1") );

		public static readonly global::Allors.Meta.RoleType NextPerson = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("25ff791d-9547-41ba-ac34-f2fe501ef217"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Company = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6cc83cb8-cb94-4716-bb7d-e25201f06b20"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Name = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ce43ca5e-4dfb-4fe1-98ea-17d8382e9531"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Index = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fdad723a-f062-492a-989c-8d8727c52679"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType CompaniesWhereManager = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("08ab248d-bdb1-49c5-a2da-d6485f49239f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompanyWhereEmployee = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1a4087de-f116-4f79-9441-31faee8054f3"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType PersonWhereNextPerson = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("25ff791d-9547-41ba-ac34-f2fe501ef217"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompanyWhereFirstPerson = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("28021756-f15f-4671-aa01-a40d3707d61a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompaniesWhereOwner = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("44abca14-9fb2-42a7-b8ab-a1ca87d87b2e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompaniesWhereIndexedMany2ManyPerson = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("509c5341-3d87-4da4-a807-5567d897169b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompanyWherePersonOneSort1 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("62b4ddac-efd7-4fc9-bbed-91c831a62f01"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompaniesWherePersonManySort1 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("64c1be0a-0636-4da0-8404-2a93ab600cd9"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompaniesWherePersonManySort2 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a9f60154-6bd1-4c76-94eb-edfd5beb6749"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompanyWherePersonOneSort2 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bdf71d38-8082-4a99-9636-4f4ec26fd45c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompaniesWhereMany2ManyPerson = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c53bdaea-c0a5-4179-bfbb-e12de45e2ae0"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompanyWhereNamedOneSort2 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2f9fc05e-c904-4056-83f0-a7081762594a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompaniesWhereNamedManySort1 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("996d27ff-3615-4a51-9214-944fac566a11"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompaniesWhereNamedManySort2 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c1f68661-4999-4851-9224-1878258b6a58"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CompanyWhereNamedOneSort1 = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cdf04399-aa37-4ea2-9ac8-bf6d19884933"))).AssociationType;

	}
}