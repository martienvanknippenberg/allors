// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public  partial class C3 : C3Allors , global::Domain.I34, global::Domain.I23, global::Domain.I3
	{
		public C3(Allors.IStrategy allors) : base(allors) {}

		public static new C3 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C3) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class C3Allors :  global::Domain.A3 
	{
		protected C3Allors(Allors.IStrategy allors) : base(allors){}


		virtual public Allors.Extent<global::Domain.I4> C3I4one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.C3I4one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.C3I4one2many, value);
			}
		}

		virtual public void AddC3I4one2many (global::Domain.I4 value)
		{
			Strategy.AddCompositeRole(C3Meta.C3I4one2many, value);
		}

		virtual public void RemoveC3I4one2many (global::Domain.I4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.C3I4one2many,value);
		}

		virtual public bool ExistC3I4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.C3I4one2many);
			}
		}

		virtual public void RemoveC3I4one2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.C3I4one2many);
		}



		virtual public global::System.String C3StringEquals 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.C3StringEquals);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.C3StringEquals, value);
			}
		}

		virtual public bool ExistC3StringEquals{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.C3StringEquals);
			}
		}

		virtual public void RemoveC3StringEquals()
		{
			Strategy.RemoveUnitRole(C3Meta.C3StringEquals);
		}


		virtual public global::Domain.C4 C3C4one2one
		{ 
			get
			{
				return (global::Domain.C4) Strategy.GetCompositeRole(C3Meta.C3C4one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.C3C4one2one ,value);
			}
		}

		virtual public bool ExistC3C4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.C3C4one2one);
			}
		}

		virtual public void RemoveC3C4one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C4one2one);
		}


		virtual public global::Domain.C2 C3C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C3Meta.C3C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.C3C2one2one ,value);
			}
		}

		virtual public bool ExistC3C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.C3C2one2one);
			}
		}

		virtual public void RemoveC3C2one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C4> C3C4one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.C3C4one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.C3C4one2many, value);
			}
		}

		virtual public void AddC3C4one2many (global::Domain.C4 value)
		{
			Strategy.AddCompositeRole(C3Meta.C3C4one2many, value);
		}

		virtual public void RemoveC3C4one2many (global::Domain.C4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C4one2many,value);
		}

		virtual public bool ExistC3C4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.C3C4one2many);
			}
		}

		virtual public void RemoveC3C4one2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.C3C4one2many);
		}


		virtual public global::Domain.A1 A1
		{ 
			get
			{
				return (global::Domain.A1) Strategy.GetCompositeRole(C3Meta.A1);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.A1 ,value);
			}
		}

		virtual public bool ExistA1
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.A1);
			}
		}

		virtual public void RemoveA1()
		{
			Strategy.RemoveCompositeRole(C3Meta.A1);
		}


		virtual public global::Domain.I4 C3I4many2one
		{ 
			get
			{
				return (global::Domain.I4) Strategy.GetCompositeRole(C3Meta.C3I4many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.C3I4many2one ,value);
			}
		}

		virtual public bool ExistC3I4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.C3I4many2one);
			}
		}

		virtual public void RemoveC3I4many2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.C3I4many2one);
		}


		virtual public global::Domain.C2 C3C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C3Meta.C3C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.C3C2many2one ,value);
			}
		}

		virtual public bool ExistC3C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.C3C2many2one);
			}
		}

		virtual public void RemoveC3C2many2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C2many2one);
		}


		virtual public Allors.Extent<global::Domain.C2> C3C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.C3C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.C3C2one2many, value);
			}
		}

		virtual public void AddC3C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C3Meta.C3C2one2many, value);
		}

		virtual public void RemoveC3C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C2one2many,value);
		}

		virtual public bool ExistC3C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.C3C2one2many);
			}
		}

		virtual public void RemoveC3C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.C3C2one2many);
		}


		virtual public Allors.Extent<global::Domain.I4> C3I4many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.C3I4many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.C3I4many2many, value);
			}
		}

		virtual public void AddC3I4many2many (global::Domain.I4 value)
		{
			Strategy.AddCompositeRole(C3Meta.C3I4many2many, value);
		}

		virtual public void RemoveC3I4many2many (global::Domain.I4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.C3I4many2many,value);
		}

		virtual public bool ExistC3I4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.C3I4many2many);
			}
		}

		virtual public void RemoveC3I4many2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.C3I4many2many);
		}


		virtual public Allors.Extent<global::Domain.C4> C3C4many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.C3C4many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.C3C4many2many, value);
			}
		}

		virtual public void AddC3C4many2many (global::Domain.C4 value)
		{
			Strategy.AddCompositeRole(C3Meta.C3C4many2many, value);
		}

		virtual public void RemoveC3C4many2many (global::Domain.C4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C4many2many,value);
		}

		virtual public bool ExistC3C4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.C3C4many2many);
			}
		}

		virtual public void RemoveC3C4many2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.C3C4many2many);
		}


		virtual public global::Domain.C4 C3C4many2one
		{ 
			get
			{
				return (global::Domain.C4) Strategy.GetCompositeRole(C3Meta.C3C4many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.C3C4many2one ,value);
			}
		}

		virtual public bool ExistC3C4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.C3C4many2one);
			}
		}

		virtual public void RemoveC3C4many2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C4many2one);
		}


		virtual public global::Domain.I4 C3I4one2one
		{ 
			get
			{
				return (global::Domain.I4) Strategy.GetCompositeRole(C3Meta.C3I4one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.C3I4one2one ,value);
			}
		}

		virtual public bool ExistC3I4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.C3I4one2one);
			}
		}

		virtual public void RemoveC3I4one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.C3I4one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> C3C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.C3C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.C3C2many2many, value);
			}
		}

		virtual public void AddC3C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C3Meta.C3C2many2many, value);
		}

		virtual public void RemoveC3C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.C3C2many2many,value);
		}

		virtual public bool ExistC3C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.C3C2many2many);
			}
		}

		virtual public void RemoveC3C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.C3C2many2many);
		}



		virtual public global::System.String C3AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.C3AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.C3AllorsString, value);
			}
		}

		virtual public bool ExistC3AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.C3AllorsString);
			}
		}

		virtual public void RemoveC3AllorsString()
		{
			Strategy.RemoveUnitRole(C3Meta.C3AllorsString);
		}



		virtual public global::System.String I34AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.I34AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I34AllorsString, value);
			}
		}

		virtual public bool ExistI34AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I34AllorsString);
			}
		}

		virtual public void RemoveI34AllorsString()
		{
			Strategy.RemoveUnitRole(C3Meta.I34AllorsString);
		}



		virtual public global::System.Int32? I34AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C3Meta.I34AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I34AllorsInteger, value);
			}
		}

		virtual public bool ExistI34AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I34AllorsInteger);
			}
		}

		virtual public void RemoveI34AllorsInteger()
		{
			Strategy.RemoveUnitRole(C3Meta.I34AllorsInteger);
		}



		virtual public global::System.Double? I34AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C3Meta.I34AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I34AllorsDouble, value);
			}
		}

		virtual public bool ExistI34AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I34AllorsDouble);
			}
		}

		virtual public void RemoveI34AllorsDouble()
		{
			Strategy.RemoveUnitRole(C3Meta.I34AllorsDouble);
		}



		virtual public global::System.Boolean? I34AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C3Meta.I34AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I34AllorsBoolean, value);
			}
		}

		virtual public bool ExistI34AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I34AllorsBoolean);
			}
		}

		virtual public void RemoveI34AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C3Meta.I34AllorsBoolean);
		}



		virtual public global::System.Decimal? I34AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C3Meta.I34AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I34AllorsDecimal, value);
			}
		}

		virtual public bool ExistI34AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I34AllorsDecimal);
			}
		}

		virtual public void RemoveI34AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C3Meta.I34AllorsDecimal);
		}



		virtual public global::System.String I23AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.I23AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I23AllorsString, value);
			}
		}

		virtual public bool ExistI23AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I23AllorsString);
			}
		}

		virtual public void RemoveI23AllorsString()
		{
			Strategy.RemoveUnitRole(C3Meta.I23AllorsString);
		}


		virtual public global::Domain.C1 C1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C3Meta.C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.C1one2one ,value);
			}
		}

		virtual public bool ExistC1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.C1one2one);
			}
		}

		virtual public void RemoveC1one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.C1one2one);
		}



		virtual public global::System.String I3StringEquals 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.I3StringEquals);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I3StringEquals, value);
			}
		}

		virtual public bool ExistI3StringEquals{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I3StringEquals);
			}
		}

		virtual public void RemoveI3StringEquals()
		{
			Strategy.RemoveUnitRole(C3Meta.I3StringEquals);
		}


		virtual public global::Domain.C4 I3C4many2one
		{ 
			get
			{
				return (global::Domain.C4) Strategy.GetCompositeRole(C3Meta.I3C4many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.I3C4many2one ,value);
			}
		}

		virtual public bool ExistI3C4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.I3C4many2one);
			}
		}

		virtual public void RemoveI3C4many2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.I3C4many2one);
		}


		virtual public global::Domain.I4 I3I4one2one
		{ 
			get
			{
				return (global::Domain.I4) Strategy.GetCompositeRole(C3Meta.I3I4one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.I3I4one2one ,value);
			}
		}

		virtual public bool ExistI3I4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.I3I4one2one);
			}
		}

		virtual public void RemoveI3I4one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.I3I4one2one);
		}


		virtual public global::Domain.C4 I3C4one2one
		{ 
			get
			{
				return (global::Domain.C4) Strategy.GetCompositeRole(C3Meta.I3C4one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.I3C4one2one ,value);
			}
		}

		virtual public bool ExistI3C4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.I3C4one2one);
			}
		}

		virtual public void RemoveI3C4one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.I3C4one2one);
		}


		virtual public global::Domain.I4 I3I4many2one
		{ 
			get
			{
				return (global::Domain.I4) Strategy.GetCompositeRole(C3Meta.I3I4many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.I3I4many2one ,value);
			}
		}

		virtual public bool ExistI3I4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.I3I4many2one);
			}
		}

		virtual public void RemoveI3I4many2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.I3I4many2one);
		}


		virtual public Allors.Extent<global::Domain.I4> I3I4many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.I3I4many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.I3I4many2many, value);
			}
		}

		virtual public void AddI3I4many2many (global::Domain.I4 value)
		{
			Strategy.AddCompositeRole(C3Meta.I3I4many2many, value);
		}

		virtual public void RemoveI3I4many2many (global::Domain.I4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.I3I4many2many,value);
		}

		virtual public bool ExistI3I4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.I3I4many2many);
			}
		}

		virtual public void RemoveI3I4many2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.I3I4many2many);
		}


		virtual public Allors.Extent<global::Domain.C4> I3C4one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.I3C4one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.I3C4one2many, value);
			}
		}

		virtual public void AddI3C4one2many (global::Domain.C4 value)
		{
			Strategy.AddCompositeRole(C3Meta.I3C4one2many, value);
		}

		virtual public void RemoveI3C4one2many (global::Domain.C4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.I3C4one2many,value);
		}

		virtual public bool ExistI3C4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.I3C4one2many);
			}
		}

		virtual public void RemoveI3C4one2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.I3C4one2many);
		}


		virtual public Allors.Extent<global::Domain.I4> I3I4one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.I3I4one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.I3I4one2many, value);
			}
		}

		virtual public void AddI3I4one2many (global::Domain.I4 value)
		{
			Strategy.AddCompositeRole(C3Meta.I3I4one2many, value);
		}

		virtual public void RemoveI3I4one2many (global::Domain.I4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.I3I4one2many,value);
		}

		virtual public bool ExistI3I4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.I3I4one2many);
			}
		}

		virtual public void RemoveI3I4one2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.I3I4one2many);
		}



		virtual public global::System.String I3AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.I3AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.I3AllorsString, value);
			}
		}

		virtual public bool ExistI3AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.I3AllorsString);
			}
		}

		virtual public void RemoveI3AllorsString()
		{
			Strategy.RemoveUnitRole(C3Meta.I3AllorsString);
		}


		virtual public Allors.Extent<global::Domain.C4> I3C4many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.I3C4many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.I3C4many2many, value);
			}
		}

		virtual public void AddI3C4many2many (global::Domain.C4 value)
		{
			Strategy.AddCompositeRole(C3Meta.I3C4many2many, value);
		}

		virtual public void RemoveI3C4many2many (global::Domain.C4 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.I3C4many2many,value);
		}

		virtual public bool ExistI3C4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.I3C4many2many);
			}
		}

		virtual public void RemoveI3C4many2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.I3C4many2many);
		}



		virtual public global::System.Boolean? S1234AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C3Meta.S1234AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.S1234AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.S1234AllorsBoolean);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C3Meta.S1234AllorsBoolean);
		}



		virtual public global::System.String S1234AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.S1234AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.S1234AllorsString, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.S1234AllorsString);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(C3Meta.S1234AllorsString);
		}


		virtual public global::Domain.C2 S1234C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C3Meta.S1234C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.S1234C2many2one ,value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.S1234C2many2one);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234C2many2one);
		}


		virtual public global::Domain.S1234 S1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C3Meta.S1234one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.S1234one2one ,value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.S1234one2one);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234one2one);
		}



		virtual public global::System.DateTime? S1234AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C3Meta.S1234AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.S1234AllorsDateTime, value);
			}
		}

		virtual public bool ExistS1234AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.S1234AllorsDateTime);
			}
		}

		virtual public void RemoveS1234AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C3Meta.S1234AllorsDateTime);
		}



		virtual public global::System.String ClassName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C3Meta.ClassName);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.ClassName, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.ClassName);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(C3Meta.ClassName);
		}



		virtual public global::System.Int64? S1234AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C3Meta.S1234AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.S1234AllorsLong, value);
			}
		}

		virtual public bool ExistS1234AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.S1234AllorsLong);
			}
		}

		virtual public void RemoveS1234AllorsLong()
		{
			Strategy.RemoveUnitRole(C3Meta.S1234AllorsLong);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.S1234many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.S1234many2many, value);
			}
		}

		virtual public void AddS1234many2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C3Meta.S1234many2many, value);
		}

		virtual public void RemoveS1234many2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234many2many,value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.S1234many2many);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.S1234many2many);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.S1234C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.S1234C2one2many, value);
			}
		}

		virtual public void AddS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C3Meta.S1234C2one2many, value);
		}

		virtual public void RemoveS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234C2one2many,value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.S1234C2one2many);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.S1234C2one2many);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.S1234one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.S1234one2many, value);
			}
		}

		virtual public void AddS1234one2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C3Meta.S1234one2many, value);
		}

		virtual public void RemoveS1234one2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234one2many,value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.S1234one2many);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.S1234one2many);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C3Meta.S1234C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C3Meta.S1234C2many2many, value);
			}
		}

		virtual public void AddS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C3Meta.S1234C2many2many, value);
		}

		virtual public void RemoveS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234C2many2many,value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C3Meta.S1234C2many2many);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C3Meta.S1234C2many2many);
		}


		virtual public global::Domain.C2 S1234C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C3Meta.S1234C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.S1234C2one2one ,value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.S1234C2one2one);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234C2one2one);
		}


		virtual public global::Domain.S1234 S1234many2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C3Meta.S1234many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C3Meta.S1234many2one ,value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C3Meta.S1234many2one);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(C3Meta.S1234many2one);
		}



		virtual public global::System.Int32? S1234AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C3Meta.S1234AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.S1234AllorsInteger, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.S1234AllorsInteger);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(C3Meta.S1234AllorsInteger);
		}



		virtual public global::System.Decimal? S1234AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C3Meta.S1234AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.S1234AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.S1234AllorsDecimal);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C3Meta.S1234AllorsDecimal);
		}



		virtual public global::System.Double? S1234AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C3Meta.S1234AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C3Meta.S1234AllorsDouble, value);
			}
		}

		virtual public bool ExistS1234AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C3Meta.S1234AllorsDouble);
			}
		}

		virtual public void RemoveS1234AllorsDouble()
		{
			Strategy.RemoveUnitRole(C3Meta.S1234AllorsDouble);
		}



		virtual public global::Domain.C1 C1WhereC3one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C3Meta.C1WhereC3one2many);
			}
		} 

		virtual public bool ExistC1WhereC3one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.C1WhereC3one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC3Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.C2sWhereC3Many2One);
			}
		}

		virtual public bool ExistC2sWhereC3Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.C2sWhereC3Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC3may2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.C1sWhereC3may2one);
			}
		}

		virtual public bool ExistC1sWhereC3may2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.C1sWhereC3may2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC3many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.C1sWhereC3many2many);
			}
		}

		virtual public bool ExistC1sWhereC3many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.C1sWhereC3many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC3Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.C2sWhereC3Many2Many);
			}
		}

		virtual public bool ExistC2sWhereC3Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.C2sWhereC3Many2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereC3one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C3Meta.C1WhereC3one2one);
			}
		} 

		virtual public bool ExistC1WhereC3one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.C1WhereC3one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC3many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.I12sWhereC3many2many);
			}
		}

		virtual public bool ExistI12sWhereC3many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.I12sWhereC3many2many);
			}
		}


		virtual public global::Domain.I12 I12WhereC3one2many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C3Meta.I12WhereC3one2many);
			}
		} 

		virtual public bool ExistI12WhereC3one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.I12WhereC3one2many);
			}
		}


		virtual public global::Domain.I12 I12WhereC3one2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C3Meta.I12WhereC3one2one);
			}
		} 

		virtual public bool ExistI12WhereC3one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.I12WhereC3one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC3many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.I12sWhereC3many2one);
			}
		}

		virtual public bool ExistI12sWhereC3many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.I12sWhereC3many2one);
			}
		}


		virtual public global::Domain.I12 I12WhereI34one2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C3Meta.I12WhereI34one2one);
			}
		} 

		virtual public bool ExistI12WhereI34one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.I12WhereI34one2one);
			}
		}


		virtual public global::Domain.I1 I1WhereI34one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C3Meta.I1WhereI34one2one);
			}
		} 

		virtual public bool ExistI1WhereI34one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.I1WhereI34one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI34many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.I1sWhereI34many2many);
			}
		}

		virtual public bool ExistI1sWhereI34many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.I1sWhereI34many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI34many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.I12sWhereI34many2many);
			}
		}

		virtual public bool ExistI12sWhereI34many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.I12sWhereI34many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI34many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.I12sWhereI34many2one);
			}
		}

		virtual public bool ExistI12sWhereI34many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.I12sWhereI34many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI34many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.I1sWhereI34many2one);
			}
		}

		virtual public bool ExistI1sWhereI34many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.I1sWhereI34many2one);
			}
		}


		virtual public global::Domain.I12 I12WhereI34one2many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C3Meta.I12WhereI34one2many);
			}
		} 

		virtual public bool ExistI12WhereI34one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.I12WhereI34one2many);
			}
		}


		virtual public global::Domain.I1 I1WhereI34one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C3Meta.I1WhereI34one2many);
			}
		} 

		virtual public bool ExistI1WhereI34one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.I1WhereI34one2many);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C3Meta.S1234WhereS1234one2one);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.S1234WhereS1234one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.S1234sWhereS1234many2many);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.S1234sWhereS1234many2many);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2many
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C3Meta.S1234WhereS1234one2many);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C3Meta.S1234WhereS1234one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C3Meta.S1234sWhereS1234many2one);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C3Meta.S1234sWhereS1234many2one);
			}
		}

	}
}