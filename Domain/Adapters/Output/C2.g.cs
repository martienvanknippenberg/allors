// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class C2 : C2Allors , global::Domain.I2, global::Domain.I23, global::Domain.I12
	{
		public C2(Allors.IStrategy allors) : base(allors) {}

		public static C2 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C2) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class C2Allors : Allors.ObjectBase
	{
		protected C2Allors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.Decimal? C2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.C2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDecimal, value);
			}
		}

		virtual public bool ExistC2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDecimal);
			}
		}

		virtual public void RemoveC2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDecimal);
		}


		virtual public Allors.Extent<global::Domain.C1> C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C1many2many, value);
			}
		}

		virtual public void AddC1many2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C1many2many, value);
		}

		virtual public void RemoveC1many2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C1many2many,value);
		}

		virtual public bool ExistC1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C1many2many);
			}
		}

		virtual public void RemoveC1many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C1many2many);
		}


		virtual public global::Domain.C2 C2C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.C2C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C2many2one ,value);
			}
		}

		virtual public bool ExistC2C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C2many2one);
			}
		}

		virtual public void RemoveC2C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2many2one);
		}



		virtual public global::System.Double? C2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.C2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDouble, value);
			}
		}

		virtual public bool ExistC2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDouble);
			}
		}

		virtual public void RemoveC2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDouble);
		}



		virtual public global::System.Int64? C2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.C2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsLong, value);
			}
		}

		virtual public bool ExistC2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsLong);
			}
		}

		virtual public void RemoveC2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsLong);
		}



		virtual public global::System.Int32? C2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.C2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsInteger, value);
			}
		}

		virtual public bool ExistC2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsInteger);
			}
		}

		virtual public void RemoveC2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.C2> C2C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C2many2many, value);
			}
		}

		virtual public void AddC2C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C2many2many, value);
		}

		virtual public void RemoveC2C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2many2many,value);
		}

		virtual public bool ExistC2C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C2many2many);
			}
		}

		virtual public void RemoveC2C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C2many2many);
		}



		virtual public global::System.Boolean? C2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.C2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsBoolean, value);
			}
		}

		virtual public bool ExistC2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsBoolean);
			}
		}

		virtual public void RemoveC2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsBoolean);
		}


		virtual public global::Domain.C1 C1many2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C1many2one ,value);
			}
		}

		virtual public bool ExistC1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C1many2one);
			}
		}

		virtual public void RemoveC1many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C1many2one);
		}


		virtual public global::Domain.C1 C1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C1one2one ,value);
			}
		}

		virtual public bool ExistC1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C1one2one);
			}
		}

		virtual public void RemoveC1one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C1one2one);
		}



		virtual public global::System.String C2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.C2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsString, value);
			}
		}

		virtual public bool ExistC2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsString);
			}
		}

		virtual public void RemoveC2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsString);
		}


		virtual public global::Domain.C2 C2C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.C2C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C2one2one ,value);
			}
		}

		virtual public bool ExistC2C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C2one2one);
			}
		}

		virtual public void RemoveC2C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> C2C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C2one2many, value);
			}
		}

		virtual public void AddC2C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C2one2many, value);
		}

		virtual public void RemoveC2C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2one2many,value);
		}

		virtual public bool ExistC2C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C2one2many);
			}
		}

		virtual public void RemoveC2C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C2one2many);
		}



		virtual public global::System.DateTime? C2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.C2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDateTime, value);
			}
		}

		virtual public bool ExistC2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDateTime);
			}
		}

		virtual public void RemoveC2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDateTime);
		}


		virtual public Allors.Extent<global::Domain.C1> C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C1one2many, value);
			}
		}

		virtual public void AddC1one2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C1one2many, value);
		}

		virtual public void RemoveC1one2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C1one2many,value);
		}

		virtual public bool ExistC1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C1one2many);
			}
		}

		virtual public void RemoveC1one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C1one2many);
		}


		virtual public Allors.Extent<global::Domain.C3> C3Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C3Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C3Many2Many, value);
			}
		}

		virtual public void AddC3Many2Many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C2Meta.C3Many2Many, value);
		}

		virtual public void RemoveC3Many2Many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C3Many2Many,value);
		}

		virtual public bool ExistC3Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C3Many2Many);
			}
		}

		virtual public void RemoveC3Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C3Many2Many);
		}


		virtual public global::Domain.C3 C3Many2One
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C2Meta.C3Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C3Many2One ,value);
			}
		}

		virtual public bool ExistC3Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C3Many2One);
			}
		}

		virtual public void RemoveC3Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C3Many2One);
		}



		virtual public global::System.Boolean? I2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.I2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsBoolean, value);
			}
		}

		virtual public bool ExistI2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsBoolean);
			}
		}

		virtual public void RemoveI2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsBoolean);
		}



		virtual public global::System.Decimal? I2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.I2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDecimal, value);
			}
		}

		virtual public bool ExistI2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDecimal);
			}
		}

		virtual public void RemoveI2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDecimal);
		}



		virtual public global::System.DateTime? I2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.I2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDateTime, value);
			}
		}

		virtual public bool ExistI2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDateTime);
			}
		}

		virtual public void RemoveI2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDateTime);
		}



		virtual public global::System.String I2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsString, value);
			}
		}

		virtual public bool ExistI2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsString);
			}
		}

		virtual public void RemoveI2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsString);
		}



		virtual public global::System.Int64? I2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.I2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsLong, value);
			}
		}

		virtual public bool ExistI2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsLong);
			}
		}

		virtual public void RemoveI2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsLong);
		}



		virtual public global::System.Int32? I2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.I2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsInteger, value);
			}
		}

		virtual public bool ExistI2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsInteger);
			}
		}

		virtual public void RemoveI2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsInteger);
		}



		virtual public global::System.Double? I2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.I2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDouble, value);
			}
		}

		virtual public bool ExistI2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDouble);
			}
		}

		virtual public void RemoveI2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDouble);
		}



		virtual public global::System.Double? S1234AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.S1234AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsDouble, value);
			}
		}

		virtual public bool ExistS1234AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsDouble);
			}
		}

		virtual public void RemoveS1234AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsDouble);
		}



		virtual public global::System.Decimal? S1234AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.S1234AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsDecimal);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsDecimal);
		}



		virtual public global::System.Int32? S1234AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.S1234AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsInteger, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsInteger);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsInteger);
		}


		virtual public global::Domain.S1234 S1234many2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C2Meta.S1234many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234many2one ,value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234many2one);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234many2one);
		}


		virtual public global::Domain.C2 S1234C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S1234C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234C2one2one ,value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234C2one2one);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234C2many2many, value);
			}
		}

		virtual public void AddS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234C2many2many, value);
		}

		virtual public void RemoveS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2many2many,value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234C2many2many);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234C2many2many);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234one2many, value);
			}
		}

		virtual public void AddS1234one2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234one2many, value);
		}

		virtual public void RemoveS1234one2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234one2many,value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234one2many);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234one2many);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234C2one2many, value);
			}
		}

		virtual public void AddS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234C2one2many, value);
		}

		virtual public void RemoveS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2one2many,value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234C2one2many);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234C2one2many);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234many2many, value);
			}
		}

		virtual public void AddS1234many2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234many2many, value);
		}

		virtual public void RemoveS1234many2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234many2many,value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234many2many);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234many2many);
		}



		virtual public global::System.Int64? S1234AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.S1234AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsLong, value);
			}
		}

		virtual public bool ExistS1234AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsLong);
			}
		}

		virtual public void RemoveS1234AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsLong);
		}



		virtual public global::System.String ClassName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.ClassName);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.ClassName, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.ClassName);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(C2Meta.ClassName);
		}



		virtual public global::System.DateTime? S1234AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.S1234AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsDateTime, value);
			}
		}

		virtual public bool ExistS1234AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsDateTime);
			}
		}

		virtual public void RemoveS1234AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsDateTime);
		}


		virtual public global::Domain.S1234 S1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C2Meta.S1234one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234one2one ,value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234one2one);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234one2one);
		}


		virtual public global::Domain.C2 S1234C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S1234C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234C2many2one ,value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234C2many2one);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2many2one);
		}



		virtual public global::System.String S1234AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.S1234AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsString, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsString);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsString);
		}



		virtual public global::System.Boolean? S1234AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.S1234AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsBoolean);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsBoolean);
		}



		virtual public global::System.String S2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.S2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsString, value);
			}
		}

		virtual public bool ExistS2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsString);
			}
		}

		virtual public void RemoveS2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsString);
		}



		virtual public global::System.Int32? S2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.S2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsInteger, value);
			}
		}

		virtual public bool ExistS2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsInteger);
			}
		}

		virtual public void RemoveS2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsInteger);
		}



		virtual public global::System.Double? S2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.S2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsDouble, value);
			}
		}

		virtual public bool ExistS2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsDouble);
			}
		}

		virtual public void RemoveS2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsDouble);
		}



		virtual public global::System.Boolean? S2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.S2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsBoolean, value);
			}
		}

		virtual public bool ExistS2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsBoolean);
			}
		}

		virtual public void RemoveS2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsBoolean);
		}



		virtual public global::System.Decimal? S2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.S2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsDecimal, value);
			}
		}

		virtual public bool ExistS2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsDecimal);
			}
		}

		virtual public void RemoveS2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsDecimal);
		}



		virtual public global::System.DateTime? S2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.S2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsDateTime, value);
			}
		}

		virtual public bool ExistS2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsDateTime);
			}
		}

		virtual public void RemoveS2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsDateTime);
		}



		virtual public global::System.Int64? S2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.S2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsLong, value);
			}
		}

		virtual public bool ExistS2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsLong);
			}
		}

		virtual public void RemoveS2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsLong);
		}



		virtual public global::System.String I23AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I23AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I23AllorsString, value);
			}
		}

		virtual public bool ExistI23AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I23AllorsString);
			}
		}

		virtual public void RemoveI23AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I23AllorsString);
		}



		virtual public global::System.Boolean? I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsBoolean);
		}



		virtual public global::System.Int32? I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.I34> I12I34one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I34one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I34one2many, value);
			}
		}

		virtual public void AddI12I34one2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I34one2many, value);
		}

		virtual public void RemoveI12I34one2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34one2many,value);
		}

		virtual public bool ExistI12I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I34one2many);
			}
		}

		virtual public void RemoveI12I34one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I34one2many);
		}


		virtual public global::Domain.C3 C3many2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C2Meta.C3many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C3many2one ,value);
			}
		}

		virtual public bool ExistC3many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C3many2one);
			}
		}

		virtual public void RemoveC3many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C3many2one);
		}


		virtual public global::Domain.C2 I12C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C2many2one ,value);
			}
		}

		virtual public bool ExistI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C2many2one);
			}
		}

		virtual public void RemoveI12C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2many2one);
		}



		virtual public global::System.Double? I12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.I12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDouble, value);
			}
		}

		virtual public bool ExistI12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDouble);
			}
		}

		virtual public void RemoveI12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDouble);
		}


		virtual public global::Domain.I34 I12I34many2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C2Meta.I12I34many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I34many2one ,value);
			}
		}

		virtual public bool ExistI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I34many2one);
			}
		}

		virtual public void RemoveI12I34many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34many2one);
		}


		virtual public Allors.Extent<global::Domain.I34> I12I34many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I34many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I34many2many, value);
			}
		}

		virtual public void AddI12I34many2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I34many2many, value);
		}

		virtual public void RemoveI12I34many2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34many2many,value);
		}

		virtual public bool ExistI12I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I34many2many);
			}
		}

		virtual public void RemoveI12I34many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I34many2many);
		}


		virtual public global::Domain.C3 I12C3one2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C2Meta.I12C3one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C3one2one ,value);
			}
		}

		virtual public bool ExistI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C3one2one);
			}
		}

		virtual public void RemoveI12C3one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C3one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C2many2many, value);
			}
		}

		virtual public void AddI12C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C2many2many, value);
		}

		virtual public void RemoveI12C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2many2many,value);
		}

		virtual public bool ExistI12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C2many2many);
			}
		}

		virtual public void RemoveI12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C2many2many);
		}



		virtual public global::System.Int64? I12AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.I12AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsLong, value);
			}
		}

		virtual public bool ExistI12AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsLong);
			}
		}

		virtual public void RemoveI12AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsLong);
		}



		virtual public global::System.Decimal? I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDecimal);
		}


		virtual public global::Domain.C2 I12C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C2one2one ,value);
			}
		}

		virtual public bool ExistI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C2one2one);
			}
		}

		virtual public void RemoveI12C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C3> I12C3one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C3one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C3one2many, value);
			}
		}

		virtual public void AddI12C3one2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C3one2many, value);
		}

		virtual public void RemoveI12C3one2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C3one2many,value);
		}

		virtual public bool ExistI12C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C3one2many);
			}
		}

		virtual public void RemoveI12C3one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C3one2many);
		}


		virtual public Allors.Extent<global::Domain.C3> I12C3many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C3many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C3many2many, value);
			}
		}

		virtual public void AddI12C3many2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C3many2many, value);
		}

		virtual public void RemoveI12C3many2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C3many2many,value);
		}

		virtual public bool ExistI12C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C3many2many);
			}
		}

		virtual public void RemoveI12C3many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C3many2many);
		}



		virtual public global::System.String PrefetchTest 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.PrefetchTest);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.PrefetchTest, value);
			}
		}

		virtual public bool ExistPrefetchTest{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.PrefetchTest);
			}
		}

		virtual public void RemovePrefetchTest()
		{
			Strategy.RemoveUnitRole(C2Meta.PrefetchTest);
		}



		virtual public global::System.DateTime? I12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.I12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDateTime, value);
			}
		}

		virtual public bool ExistI12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDateTime);
			}
		}

		virtual public void RemoveI12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDateTime);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsString);
		}


		virtual public global::Domain.I34 I12I34one2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C2Meta.I12I34one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I34one2one ,value);
			}
		}

		virtual public bool ExistI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I34one2one);
			}
		}

		virtual public void RemoveI12I34one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C2one2many, value);
			}
		}

		virtual public void AddI12C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C2one2many, value);
		}

		virtual public void RemoveI12C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2one2many,value);
		}

		virtual public bool ExistI12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C2one2many);
			}
		}

		virtual public void RemoveI12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C2one2many);
		}



		virtual public global::System.String S12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.S12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsString, value);
			}
		}

		virtual public bool ExistS12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsString);
			}
		}

		virtual public void RemoveS12AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsString);
		}



		virtual public global::System.DateTime? S12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.S12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsDateTime, value);
			}
		}

		virtual public bool ExistS12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsDateTime);
			}
		}

		virtual public void RemoveS12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsDateTime);
		}


		virtual public Allors.Extent<global::Domain.C2> S12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S12C2many2many, value);
			}
		}

		virtual public void AddS12C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S12C2many2many, value);
		}

		virtual public void RemoveS12C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2many2many,value);
		}

		virtual public bool ExistS12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S12C2many2many);
			}
		}

		virtual public void RemoveS12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S12C2many2many);
		}


		virtual public global::Domain.C2 S12C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S12C2many2one ,value);
			}
		}

		virtual public bool ExistS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S12C2many2one);
			}
		}

		virtual public void RemoveS12C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2many2one);
		}


		virtual public global::Domain.C2 S12C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S12C2one2one ,value);
			}
		}

		virtual public bool ExistS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S12C2one2one);
			}
		}

		virtual public void RemoveS12C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2one2one);
		}


		virtual public Allors.Extent<global::Domain.C2> S12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S12C2one2many, value);
			}
		}

		virtual public void AddS12C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S12C2one2many, value);
		}

		virtual public void RemoveS12C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2one2many,value);
		}

		virtual public bool ExistS12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S12C2one2many);
			}
		}

		virtual public void RemoveS12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S12C2one2many);
		}



		virtual public global::System.Boolean? S12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.S12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsBoolean, value);
			}
		}

		virtual public bool ExistS12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsBoolean);
			}
		}

		virtual public void RemoveS12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsBoolean);
		}



		virtual public global::System.Double? S12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.S12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsDouble, value);
			}
		}

		virtual public bool ExistS12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsDouble);
			}
		}

		virtual public void RemoveS12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsDouble);
		}



		virtual public global::System.Int32? S12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.S12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsInteger, value);
			}
		}

		virtual public bool ExistS12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsInteger);
			}
		}

		virtual public void RemoveS12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsInteger);
		}



		virtual public global::System.Decimal? S12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.S12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsDecimal, value);
			}
		}

		virtual public bool ExistS12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsDecimal);
			}
		}

		virtual public void RemoveS12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsDecimal);
		}



		virtual public Allors.Extent<global::Domain.I1> I1sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereC2many2one);
			}
		}

		virtual public bool ExistI1sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereC2many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C3> C3sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C3sWhereC2many2many);
			}
		}

		virtual public bool ExistC3sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C3sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereC2many2one);
			}
		}

		virtual public bool ExistC2sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereC2many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereC2one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereC2one2one);
			}
		} 

		virtual public bool ExistI1WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereC2one2one);
			}
		}


		virtual public global::Domain.I1 I1WhereC2one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereC2one2many);
			}
		} 

		virtual public bool ExistI1WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereC2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereC2many2one);
			}
		}

		virtual public bool ExistI12sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereC2many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S12> S12sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S12sWhereC2many2many);
			}
		}

		virtual public bool ExistS12sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S12sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereC2many2many);
			}
		}

		virtual public bool ExistC2sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereC2many2many);
			}
		}


		virtual public global::Domain.S1234 S1234WhereC2one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereC2one2one);
			}
		} 

		virtual public bool ExistS1234WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S12> S12sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S12sWhereC2many2one);
			}
		}

		virtual public bool ExistS12sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S12sWhereC2many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereC2many2many);
			}
		}

		virtual public bool ExistC1sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereC2many2many);
			}
		}

		virtual public bool ExistS1234sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereC2many2many);
			}
		}

		virtual public bool ExistI12sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereC2many2many);
			}
		}


		virtual public global::Domain.S12 S12WhereC2one2one
		{ 
			get
			{
				return (global::Domain.S12) Strategy.GetCompositeAssociation(C2Meta.S12WhereC2one2one);
			}
		} 

		virtual public bool ExistS12WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S12WhereC2one2one);
			}
		}


		virtual public global::Domain.C3 C3WhereC2one2many
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeAssociation(C2Meta.C3WhereC2one2many);
			}
		} 

		virtual public bool ExistC3WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C3WhereC2one2many);
			}
		}


		virtual public global::Domain.S1234 S1234WhereC2one2many
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereC2one2many);
			}
		} 

		virtual public bool ExistS1234WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereC2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C3> C3sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C3sWhereC2many2one);
			}
		}

		virtual public bool ExistC3sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C3sWhereC2many2one);
			}
		}


		virtual public global::Domain.C2 C2WhereC2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereC2one2one);
			}
		} 

		virtual public bool ExistC2WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereC2one2one);
			}
		}


		virtual public global::Domain.S12 S12WhereC2one2many
		{ 
			get
			{
				return (global::Domain.S12) Strategy.GetCompositeAssociation(C2Meta.S12WhereC2one2many);
			}
		} 

		virtual public bool ExistS12WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S12WhereC2one2many);
			}
		}


		virtual public global::Domain.C2 C2WhereC2one2many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereC2one2many);
			}
		} 

		virtual public bool ExistC2WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereC2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereC2many2one);
			}
		}

		virtual public bool ExistC1sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereC2many2one);
			}
		}


		virtual public global::Domain.I12 I12WhereC2one2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereC2one2one);
			}
		} 

		virtual public bool ExistI12WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereC2one2one);
			}
		}


		virtual public global::Domain.C1 C1WhereC2one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereC2one2one);
			}
		} 

		virtual public bool ExistC1WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereC2many2many);
			}
		}

		virtual public bool ExistI1sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereC2many2many);
			}
		}


		virtual public global::Domain.C3 C3WhereC2one2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeAssociation(C2Meta.C3WhereC2one2one);
			}
		} 

		virtual public bool ExistC3WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C3WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereC2many2one);
			}
		}

		virtual public bool ExistS1234sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereC2many2one);
			}
		}


		virtual public global::Domain.I12 I12WhereC2one2many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereC2one2many);
			}
		} 

		virtual public bool ExistI12WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereC2one2many);
			}
		}


		virtual public global::Domain.C1 C1WhereC2one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereC2one2many);
			}
		} 

		virtual public bool ExistC1WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereC2one2many);
			}
		}


		virtual public global::Domain.I1 I1WhereI2one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI2one2many);
			}
		} 

		virtual public bool ExistI1WhereI2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI2one2many);
			}
		}


		virtual public global::Domain.C1 C1WhereI2one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI2one2one);
			}
		} 

		virtual public bool ExistC1WhereI2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI2many2one);
			}
		}

		virtual public bool ExistI1sWhereI2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI2many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI2many2many);
			}
		}

		virtual public bool ExistI1sWhereI2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI2many2many);
			}
		}


		virtual public global::Domain.C1 C1WhereI2one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI2one2many);
			}
		} 

		virtual public bool ExistC1WhereI2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI2many2one);
			}
		}

		virtual public bool ExistC1sWhereI2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI2many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereI2one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI2one2one);
			}
		} 

		virtual public bool ExistI1WhereI2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI2many2many);
			}
		}

		virtual public bool ExistC1sWhereI2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereS1234many2one);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereS1234many2one);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2many
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereS1234one2many);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereS1234one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereS1234many2many);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereS1234many2many);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereS1234one2one);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereS1234one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereS2many2one);
			}
		}

		virtual public bool ExistC1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereS2many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereS2one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereS2one2one);
			}
		} 

		virtual public bool ExistI1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereS2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S1> S1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1sWhereS2many2one);
			}
		}

		virtual public bool ExistS1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1sWhereS2many2one);
			}
		}


		virtual public global::Domain.S1 S1WhereS2one2many
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeAssociation(C2Meta.S1WhereS2one2many);
			}
		} 

		virtual public bool ExistS1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1WhereS2one2many);
			}
		}


		virtual public global::Domain.C1 C1WhereS2one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereS2one2one);
			}
		} 

		virtual public bool ExistC1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereS2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereS2many2many);
			}
		}

		virtual public bool ExistI1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereS2many2many);
			}
		}


		virtual public global::Domain.I1 I1WhereS2one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereS2one2many);
			}
		} 

		virtual public bool ExistI1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereS2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereS2many2many);
			}
		}

		virtual public bool ExistC1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereS2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1> S1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1sWhereS2many2many);
			}
		}

		virtual public bool ExistS1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1sWhereS2many2many);
			}
		}


		virtual public global::Domain.S1 S1WhereS2one2one
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeAssociation(C2Meta.S1WhereS2one2one);
			}
		} 

		virtual public bool ExistS1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1WhereS2one2one);
			}
		}


		virtual public global::Domain.C1 C1WhereS2one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereS2one2many);
			}
		} 

		virtual public bool ExistC1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereS2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereS2many2one);
			}
		}

		virtual public bool ExistI1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereS2many2one);
			}
		}


		virtual public global::Domain.C1 C1WhereI12one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI12one2one);
			}
		} 

		virtual public bool ExistC1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI12one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI12many2one);
			}
		}

		virtual public bool ExistI1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI12many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereI12one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI12one2one);
			}
		} 

		virtual public bool ExistI1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI12one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI12many2one);
			}
		}

		virtual public bool ExistC1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI12many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI12many2many);
			}
		}

		virtual public bool ExistI1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI12many2many);
			}
		}


		virtual public global::Domain.I1 I1WhereI12one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI12one2many);
			}
		} 

		virtual public bool ExistI1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI12one2many);
			}
		}


		virtual public global::Domain.C1 C1WhereI12one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI12one2many);
			}
		} 

		virtual public bool ExistC1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI12one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI12many2many);
			}
		}

		virtual public bool ExistC1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI12many2many);
			}
		}

	}

	public static class C2Meta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Domain.M.D.Find( new System.Guid("72c07e8a-03f5-4da8-ab37-236333d4f74e") );

		public static readonly global::Allors.Meta.RoleType C2AllorsDecimal = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("07eaa992-322a-40e9-bf2c-aa33b69f54cd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("0947eb06-5511-475f-8d68-06cfb812678e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("0ecc2d3b-f813-44db-b349-3e67d7e0b2d7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsDouble = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("262ad367-a52c-4d8b-94e2-b477bb098423"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsLong = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("41cd7805-0f93-460f-8572-9c479f3db206"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsInteger = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("42f9f4b6-3b35-4168-93cb-35171dbf83f4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("49d04b6f-6393-49f6-bb6b-2dd634d6b9ee"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsBoolean = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("61daaaae-dd22-405e-aa98-6321d2f8af04"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("7ee9d97c-8ae3-438c-adfd-6a35b3ff645b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9540e8d3-9fe3-4aea-9918-fc31210f2622"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsString = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9c7cde3f-9b61-4c79-a5d7-afe1067262ce"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9e9d1c6a-f647-4922-b5f4-874b8b6c1907"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a95948a7-3f12-4b85-8823-82dea87740c0"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsDateTime = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("ce23482d-3a22-4202-98e7-5934fd9abd2d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("d82be8f5-673a-466b-8abb-077be0bc6eb5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C3Many2Many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("d92643c0-854c-40f8-92c8-93a0245e33c2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C3Many2One = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("f3482f88-4408-4e2e-b179-7f757bf0eb3d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsBoolean = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("35040d7c-ab7f-4a99-9d09-e01e24ca3cb9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsDecimal = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("4f095abd-8803-4610-87f0-2847ddd5e9f4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsDateTime = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("81d9eb2f-55a7-4d1c-853d-4369eb691ba5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsString = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9f91841c-f63f-4ffa-bee6-62e100f3cd15"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsLong = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("d0c49b92-a108-48b5-bc95-72d2e6109ad2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsInteger = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("d30dd036-6d28-48df-873b-3a76da8c029e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsDouble = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("fbad33e7-ede1-41fc-97e9-ddf33a0f6459"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsDouble = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("012a43d3-e1e0-4693-a771-1526c29b7ac4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsDecimal = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("2ac36edd-d718-4252-b7cf-74849e1fca6e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsInteger = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("46263379-afd4-4472-bb05-057fb88163ab"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("4b846355-000b-4651-bff2-51f1275c1461"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("58a56dee-c613-4d76-ab99-5608e7709cd8"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("73302b50-8526-40ae-a202-5b17e1093629"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("8fb24e1c-9e04-4b3d-8a97-153d3c0ea7ec"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("94a49847-273f-4e9b-b07b-d615d994757a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a2e7c6f6-ca0d-4fb3-9431-8dd1be7ebdb7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsLong = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("b0814062-4881-43ec-935e-c6b61ef0bcf6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType ClassName = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("b299db28-1107-4120-946c-fbdad2271c5c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsDateTime = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c13e8484-75a3-40be-afd5-44a31aca3771"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c2fac2fc-14c6-4aa3-89ff-afba1316d06d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234C2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("df9eb36a-366f-4a5a-a750-f2f23f681c74"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsString = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("e6164217-2f54-4134-8c53-4a45caa9dd11"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S1234AllorsBoolean = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("ef45cd72-2e16-47df-b949-c803a554b307"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S2AllorsString = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("1c758737-140a-49f0-badc-29658b4bc55f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S2AllorsInteger = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("1f5a6afe-f458-43db-bea0-8c90074b5abf"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S2AllorsDouble = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("74dd2b7b-e647-4967-9838-46c701baf3a7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S2AllorsBoolean = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9a191c76-bd05-498f-91da-33184c72fe90"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S2AllorsDecimal = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9d70a5f5-ed72-4ba3-98ac-e50752f8fb79"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S2AllorsDateTime = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a305d91a-5fe1-467d-9f24-6cce5dd30b1d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S2AllorsLong = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("bbb8d0fa-fe1e-49a6-a18d-0c790e52bb0c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I23AllorsString = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("0407c93e-f2ea-49e4-8779-44b42c554e60"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsBoolean = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("1a0eb6ea-d877-42c9-a35a-889fb347f883"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsInteger = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("249ff221-9261-4219-b0a8-0dc2a8dac8db"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("2c05b90e-a036-450a-8b4e-ee70c8146fed"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C3many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("3327e14d-5601-4806-b6c5-b740a2c3aa38"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("3589d5bc-3338-449a-bd14-34a19d92251e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDouble = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("4c7dd6a2-db16-4477-9b21-34dcb8f50738"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("61fc731f-d769-4eb9-bf87-983e73e403e4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("716d13fc-f608-41a8-ac9e-824890c585b5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C3one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("74a22498-ec2c-441b-a42c-0c248ace685d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("7f373030-657a-4c6b-a086-ac4de33e4648"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsLong = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("94b55cec-cf78-420b-b4c9-1bca8a8af9dc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDecimal = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9fbca845-1f98-4ac8-8117-fa66bbe287eb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("afabb84c-f1b3-423b-9028-2ec5bb58e994"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C3one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("b0fc73fb-fa74-4e8c-b9e1-17c01698f342"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C3many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("b889bc75-3d93-4577-a4d7-752393284220"))).RoleType;
		public static readonly global::Allors.Meta.RoleType PrefetchTest = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c2d1f044-b996-4b16-8fe3-1786f86973b1"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDateTime = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c3a2e1da-307c-4fad-ab34-6e9d07eea74f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsString = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("e227ff6c-a4df-49cf-a02f-04e94af6eb4b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I34one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("f31ace17-76b1-46db-9fc0-099b94fbada5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("f37b107e-74e5-401f-a7e8-8ac54ceb6c73"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsString = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("06fabe71-737a-4cff-ac10-2d15dafce503"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsDateTime = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("2eb9e232-4ed4-4997-a21a-f11bb0fe3b0e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("39f50108-df59-455d-8371-fc07f3dbb7ef"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("61e8c425-407e-408b-9f2e-c95548833004"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("830117d4-fbe1-4944-bacf-54331e8451d7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12C2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a3aac482-aad0-4b59-9361-51b23867e5a2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsBoolean = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a97eca8e-807b-4a06-9587-6240f6150203"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsDouble = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("acc4ae39-2d5c-4485-be22-87b27e84b627"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsInteger = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("d07313ca-fd8d-4c74-928e-41274aa28de9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType S12AllorsDecimal = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("f7ace363-89bd-4ea5-a865-4a6e3de2d723"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType I1sWhereC2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("0d63e4c7-28de-4d47-8f23-7ee1d3606751"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C3sWhereC2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("0e06c403-2a29-4f40-b7b6-3e4fed28aeba"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereC2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("0ecc2d3b-f813-44db-b349-3e67d7e0b2d7"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("14a93943-13f6-481d-98c7-19fb55625af9"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("2cd562b6-7f54-49af-b853-2244f10ec60e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereC2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("3589d5bc-3338-449a-bd14-34a19d92251e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S12sWhereC2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("39f50108-df59-455d-8371-fc07f3dbb7ef"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereC2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("49d04b6f-6393-49f6-bb6b-2dd634d6b9ee"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234WhereC2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("58a56dee-c613-4d76-ab99-5608e7709cd8"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S12sWhereC2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("61e8c425-407e-408b-9f2e-c95548833004"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("71abe169-dea4-4834-8d37-34cbcffa6cee"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234sWhereC2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("73302b50-8526-40ae-a202-5b17e1093629"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereC2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("7f373030-657a-4c6b-a086-ac4de33e4648"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S12WhereC2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("830117d4-fbe1-4944-bacf-54331e8451d7"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C3WhereC2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("92505f70-3611-4ed6-bd27-71030299e176"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234WhereC2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("94a49847-273f-4e9b-b07b-d615d994757a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C3sWhereC2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("958bc7c6-d609-4407-ba92-50726c9af5d5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9e9d1c6a-f647-4922-b5f4-874b8b6c1907"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S12WhereC2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a3aac482-aad0-4b59-9361-51b23867e5a2"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a95948a7-3f12-4b85-8823-82dea87740c0"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("ac2096a9-b58b-41d3-a1d3-920f0b41cb2f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereC2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("afabb84c-f1b3-423b-9028-2ec5bb58e994"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("b4e3d3d1-65b2-4803-954f-1e09f39e5594"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereC2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("b4f171d3-1463-41bc-8230-e53e5a717b89"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C3WhereC2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("d81da318-f954-42b4-b605-e011a92726ba"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234sWhereC2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("df9eb36a-366f-4a5a-a750-f2f23f681c74"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereC2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("f37b107e-74e5-401f-a7e8-8ac54ceb6c73"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("f39739d2-e8fc-406e-be6a-c92acee07686"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("036e3008-07f8-4a15-bca2-eb21837778a0"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("03fc18eb-46be-411a-9b1e-4a1953843d92"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("0b0f8c40-266c-424a-8276-0e8e2673d1a7"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("4a30d40e-ade3-4304-b17b-185abc8b7fde"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("4c0362ad-4d0e-4e57-a057-1852ddd8eed8"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("4dab4e16-b8a2-46c1-949d-62aead9a9c9f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("70312f37-52e9-4cf6-9dd6-b357628ea3ed"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c92fbc53-ae5e-450e-9681-ca17833e6e2f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234sWhereS1234many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("4b846355-000b-4651-bff2-51f1275c1461"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234WhereS1234one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("8fb24e1c-9e04-4b3d-8a97-153d3c0ea7ec"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234sWhereS1234many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a2e7c6f6-ca0d-4fb3-9431-8dd1be7ebdb7"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1234WhereS1234one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c2fac2fc-14c6-4aa3-89ff-afba1316d06d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereS2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("2cee32ad-4e62-4112-9775-f84b0298e93a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereS2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("68549750-b8f9-4a29-a078-803e7348e142"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1sWhereS2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("6a166388-5bca-4cd9-bfee-0da27cbc3073"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1WhereS2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("6ee98698-15dc-4998-88c3-d2a4d1c19e8c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereS2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("92cbd254-9763-41e1-9c73-4a378aab4b8e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereS2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("973d6e4f-57ff-454a-9621-bd5dccb65525"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereS2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a77bcd80-82df-4b76-a1bc-8e78106d7d53"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereS2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("b2071550-cc1b-4543-b98f-006e7564a74b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1sWhereS2many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c6f49460-a259-44de-b674-4d0585fe00cd"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType S1WhereS2one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("dc22175f-185d-4cd3-b492-74b0a9389c91"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereS2one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("f47b9392-1391-416e-9a49-23ab0627133e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereS2many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("fe51c02e-ed28-4628-9da1-7bc2131c8992"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("13761939-4842-45ba-af73-2a5976e2d6e3"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("28b92468-27e5-4471-b3a5-37b8ec4f794e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12one2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("381c61c1-312d-47ea-8314-8ac051378a81"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12many2one = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("599420c6-0757-49f6-8ae7-4cb0714ca791"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("9b05ecb0-c3d5-4b11-98dc-653aef9f65cc"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("a458ad6e-0f4a-473b-a233-04b8e7fadf62"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12one2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("ad1b1fb1-b30c-431f-b975-5505f6311a18"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12many2many = ((Allors.Meta.RelationType)global::Domain.M.D.Find( new System.Guid("c58903fb-443b-4de9-b010-15f3f09ff5df"))).AssociationType;

	}
}