// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public  partial class C2 : C2Allors , global::Domain.I12, global::Domain.I23, global::Domain.I2
	{
		public C2(Allors.IStrategy allors) : base(allors) {}

		public static new C2 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C2) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class C2Allors :  global::Domain.A2 
	{
		protected C2Allors(Allors.IStrategy allors) : base(allors){}


		virtual public global::Domain.C3 C3Many2One
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C2Meta.C3Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C3Many2One ,value);
			}
		}

		virtual public bool ExistC3Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C3Many2One);
			}
		}

		virtual public void RemoveC3Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C3Many2One);
		}


		virtual public Allors.Extent<global::Domain.C3> C3Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C3Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C3Many2Many, value);
			}
		}

		virtual public void AddC3Many2Many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C2Meta.C3Many2Many, value);
		}

		virtual public void RemoveC3Many2Many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C3Many2Many,value);
		}

		virtual public bool ExistC3Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C3Many2Many);
			}
		}

		virtual public void RemoveC3Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C3Many2Many);
		}


		virtual public Allors.Extent<global::Domain.C1> C1one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C1one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C1one2many, value);
			}
		}

		virtual public void AddC1one2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C1one2many, value);
		}

		virtual public void RemoveC1one2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C1one2many,value);
		}

		virtual public bool ExistC1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C1one2many);
			}
		}

		virtual public void RemoveC1one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C1one2many);
		}



		virtual public global::System.DateTime? C2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.C2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDateTime, value);
			}
		}

		virtual public bool ExistC2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDateTime);
			}
		}

		virtual public void RemoveC2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDateTime);
		}


		virtual public Allors.Extent<global::Domain.C2> C2C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C2one2many, value);
			}
		}

		virtual public void AddC2C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C2one2many, value);
		}

		virtual public void RemoveC2C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2one2many,value);
		}

		virtual public bool ExistC2C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C2one2many);
			}
		}

		virtual public void RemoveC2C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C2one2many);
		}


		virtual public global::Domain.C2 C2C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.C2C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C2one2one ,value);
			}
		}

		virtual public bool ExistC2C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C2one2one);
			}
		}

		virtual public void RemoveC2C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2one2one);
		}



		virtual public global::System.String C2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.C2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsString, value);
			}
		}

		virtual public bool ExistC2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsString);
			}
		}

		virtual public void RemoveC2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsString);
		}


		virtual public global::Domain.C1 C1one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.C1one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C1one2one ,value);
			}
		}

		virtual public bool ExistC1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C1one2one);
			}
		}

		virtual public void RemoveC1one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C1one2one);
		}


		virtual public global::Domain.C1 C1many2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.C1many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C1many2one ,value);
			}
		}

		virtual public bool ExistC1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C1many2one);
			}
		}

		virtual public void RemoveC1many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C1many2one);
		}



		virtual public global::System.Boolean? C2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.C2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsBoolean, value);
			}
		}

		virtual public bool ExistC2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsBoolean);
			}
		}

		virtual public void RemoveC2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsBoolean);
		}


		virtual public Allors.Extent<global::Domain.C2> C2C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C2many2many, value);
			}
		}

		virtual public void AddC2C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C2many2many, value);
		}

		virtual public void RemoveC2C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2many2many,value);
		}

		virtual public bool ExistC2C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C2many2many);
			}
		}

		virtual public void RemoveC2C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C2many2many);
		}



		virtual public global::System.Int32? C2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.C2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsInteger, value);
			}
		}

		virtual public bool ExistC2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsInteger);
			}
		}

		virtual public void RemoveC2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsInteger);
		}



		virtual public global::System.Int64? C2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.C2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsLong, value);
			}
		}

		virtual public bool ExistC2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsLong);
			}
		}

		virtual public void RemoveC2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsLong);
		}



		virtual public global::System.Double? C2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.C2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDouble, value);
			}
		}

		virtual public bool ExistC2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDouble);
			}
		}

		virtual public void RemoveC2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDouble);
		}


		virtual public global::Domain.C2 C2C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.C2C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C2many2one ,value);
			}
		}

		virtual public bool ExistC2C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C2many2one);
			}
		}

		virtual public void RemoveC2C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2many2one);
		}


		virtual public Allors.Extent<global::Domain.C1> C1many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C1many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C1many2many, value);
			}
		}

		virtual public void AddC1many2many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C1many2many, value);
		}

		virtual public void RemoveC1many2many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C1many2many,value);
		}

		virtual public bool ExistC1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C1many2many);
			}
		}

		virtual public void RemoveC1many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C1many2many);
		}



		virtual public global::System.Decimal? C2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.C2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDecimal, value);
			}
		}

		virtual public bool ExistC2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDecimal);
			}
		}

		virtual public void RemoveC2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDecimal);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C2one2many, value);
			}
		}

		virtual public void AddI12C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C2one2many, value);
		}

		virtual public void RemoveI12C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2one2many,value);
		}

		virtual public bool ExistI12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C2one2many);
			}
		}

		virtual public void RemoveI12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C2one2many);
		}


		virtual public global::Domain.I34 I12I34one2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C2Meta.I12I34one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I34one2one ,value);
			}
		}

		virtual public bool ExistI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I34one2one);
			}
		}

		virtual public void RemoveI12I34one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34one2one);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsString);
		}



		virtual public global::System.DateTime? I12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.I12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDateTime, value);
			}
		}

		virtual public bool ExistI12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDateTime);
			}
		}

		virtual public void RemoveI12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDateTime);
		}



		virtual public global::System.String PrefetchTest 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.PrefetchTest);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.PrefetchTest, value);
			}
		}

		virtual public bool ExistPrefetchTest{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.PrefetchTest);
			}
		}

		virtual public void RemovePrefetchTest()
		{
			Strategy.RemoveUnitRole(C2Meta.PrefetchTest);
		}


		virtual public Allors.Extent<global::Domain.C3> I12C3many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C3many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C3many2many, value);
			}
		}

		virtual public void AddI12C3many2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C3many2many, value);
		}

		virtual public void RemoveI12C3many2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C3many2many,value);
		}

		virtual public bool ExistI12C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C3many2many);
			}
		}

		virtual public void RemoveI12C3many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C3many2many);
		}


		virtual public Allors.Extent<global::Domain.C3> I12C3one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C3one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C3one2many, value);
			}
		}

		virtual public void AddI12C3one2many (global::Domain.C3 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C3one2many, value);
		}

		virtual public void RemoveI12C3one2many (global::Domain.C3 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C3one2many,value);
		}

		virtual public bool ExistI12C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C3one2many);
			}
		}

		virtual public void RemoveI12C3one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C3one2many);
		}


		virtual public global::Domain.C2 I12C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C2one2one ,value);
			}
		}

		virtual public bool ExistI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C2one2one);
			}
		}

		virtual public void RemoveI12C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2one2one);
		}



		virtual public global::System.Decimal? I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDecimal);
		}



		virtual public global::System.Int64? I12AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.I12AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsLong, value);
			}
		}

		virtual public bool ExistI12AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsLong);
			}
		}

		virtual public void RemoveI12AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsLong);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C2many2many, value);
			}
		}

		virtual public void AddI12C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C2many2many, value);
		}

		virtual public void RemoveI12C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2many2many,value);
		}

		virtual public bool ExistI12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C2many2many);
			}
		}

		virtual public void RemoveI12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C2many2many);
		}


		virtual public global::Domain.C3 I12C3one2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C2Meta.I12C3one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C3one2one ,value);
			}
		}

		virtual public bool ExistI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C3one2one);
			}
		}

		virtual public void RemoveI12C3one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C3one2one);
		}


		virtual public Allors.Extent<global::Domain.I34> I12I34many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I34many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I34many2many, value);
			}
		}

		virtual public void AddI12I34many2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I34many2many, value);
		}

		virtual public void RemoveI12I34many2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34many2many,value);
		}

		virtual public bool ExistI12I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I34many2many);
			}
		}

		virtual public void RemoveI12I34many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I34many2many);
		}


		virtual public global::Domain.I34 I12I34many2one
		{ 
			get
			{
				return (global::Domain.I34) Strategy.GetCompositeRole(C2Meta.I12I34many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I34many2one ,value);
			}
		}

		virtual public bool ExistI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I34many2one);
			}
		}

		virtual public void RemoveI12I34many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34many2one);
		}



		virtual public global::System.Double? I12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.I12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDouble, value);
			}
		}

		virtual public bool ExistI12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDouble);
			}
		}

		virtual public void RemoveI12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDouble);
		}


		virtual public global::Domain.C2 I12C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C2many2one ,value);
			}
		}

		virtual public bool ExistI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C2many2one);
			}
		}

		virtual public void RemoveI12C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2many2one);
		}


		virtual public global::Domain.C3 C3many2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeRole(C2Meta.C3many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C3many2one ,value);
			}
		}

		virtual public bool ExistC3many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C3many2one);
			}
		}

		virtual public void RemoveC3many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.C3many2one);
		}


		virtual public Allors.Extent<global::Domain.I34> I12I34one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I34one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I34one2many, value);
			}
		}

		virtual public void AddI12I34one2many (global::Domain.I34 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I34one2many, value);
		}

		virtual public void RemoveI12I34one2many (global::Domain.I34 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I34one2many,value);
		}

		virtual public bool ExistI12I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I34one2many);
			}
		}

		virtual public void RemoveI12I34one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I34one2many);
		}



		virtual public global::System.Int32? I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsInteger);
		}



		virtual public global::System.Boolean? I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsBoolean);
		}



		virtual public global::System.Decimal? S12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.S12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsDecimal, value);
			}
		}

		virtual public bool ExistS12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsDecimal);
			}
		}

		virtual public void RemoveS12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsDecimal);
		}



		virtual public global::System.Int32? S12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.S12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsInteger, value);
			}
		}

		virtual public bool ExistS12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsInteger);
			}
		}

		virtual public void RemoveS12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsInteger);
		}



		virtual public global::System.Double? S12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.S12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsDouble, value);
			}
		}

		virtual public bool ExistS12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsDouble);
			}
		}

		virtual public void RemoveS12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsDouble);
		}



		virtual public global::System.Boolean? S12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.S12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsBoolean, value);
			}
		}

		virtual public bool ExistS12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsBoolean);
			}
		}

		virtual public void RemoveS12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsBoolean);
		}


		virtual public Allors.Extent<global::Domain.C2> S12C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S12C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S12C2one2many, value);
			}
		}

		virtual public void AddS12C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S12C2one2many, value);
		}

		virtual public void RemoveS12C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2one2many,value);
		}

		virtual public bool ExistS12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S12C2one2many);
			}
		}

		virtual public void RemoveS12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S12C2one2many);
		}


		virtual public global::Domain.C2 S12C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S12C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S12C2one2one ,value);
			}
		}

		virtual public bool ExistS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S12C2one2one);
			}
		}

		virtual public void RemoveS12C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2one2one);
		}


		virtual public global::Domain.C2 S12C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S12C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S12C2many2one ,value);
			}
		}

		virtual public bool ExistS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S12C2many2one);
			}
		}

		virtual public void RemoveS12C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2many2one);
		}


		virtual public Allors.Extent<global::Domain.C2> S12C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S12C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S12C2many2many, value);
			}
		}

		virtual public void AddS12C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S12C2many2many, value);
		}

		virtual public void RemoveS12C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S12C2many2many,value);
		}

		virtual public bool ExistS12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S12C2many2many);
			}
		}

		virtual public void RemoveS12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S12C2many2many);
		}



		virtual public global::System.DateTime? S12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.S12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsDateTime, value);
			}
		}

		virtual public bool ExistS12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsDateTime);
			}
		}

		virtual public void RemoveS12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsDateTime);
		}



		virtual public global::System.String S12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.S12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S12AllorsString, value);
			}
		}

		virtual public bool ExistS12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S12AllorsString);
			}
		}

		virtual public void RemoveS12AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.S12AllorsString);
		}



		virtual public global::System.String I23AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I23AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I23AllorsString, value);
			}
		}

		virtual public bool ExistI23AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I23AllorsString);
			}
		}

		virtual public void RemoveI23AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I23AllorsString);
		}



		virtual public global::System.Double? I2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.I2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDouble, value);
			}
		}

		virtual public bool ExistI2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDouble);
			}
		}

		virtual public void RemoveI2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDouble);
		}



		virtual public global::System.Int32? I2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.I2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsInteger, value);
			}
		}

		virtual public bool ExistI2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsInteger);
			}
		}

		virtual public void RemoveI2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsInteger);
		}



		virtual public global::System.Int64? I2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.I2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsLong, value);
			}
		}

		virtual public bool ExistI2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsLong);
			}
		}

		virtual public void RemoveI2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsLong);
		}



		virtual public global::System.String I2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsString, value);
			}
		}

		virtual public bool ExistI2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsString);
			}
		}

		virtual public void RemoveI2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsString);
		}



		virtual public global::System.DateTime? I2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.I2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDateTime, value);
			}
		}

		virtual public bool ExistI2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDateTime);
			}
		}

		virtual public void RemoveI2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDateTime);
		}



		virtual public global::System.Decimal? I2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.I2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDecimal, value);
			}
		}

		virtual public bool ExistI2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDecimal);
			}
		}

		virtual public void RemoveI2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDecimal);
		}



		virtual public global::System.Boolean? I2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.I2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsBoolean, value);
			}
		}

		virtual public bool ExistI2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsBoolean);
			}
		}

		virtual public void RemoveI2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsBoolean);
		}



		virtual public global::System.Int64? S2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.S2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsLong, value);
			}
		}

		virtual public bool ExistS2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsLong);
			}
		}

		virtual public void RemoveS2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsLong);
		}



		virtual public global::System.DateTime? S2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.S2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsDateTime, value);
			}
		}

		virtual public bool ExistS2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsDateTime);
			}
		}

		virtual public void RemoveS2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsDateTime);
		}



		virtual public global::System.Decimal? S2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.S2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsDecimal, value);
			}
		}

		virtual public bool ExistS2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsDecimal);
			}
		}

		virtual public void RemoveS2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsDecimal);
		}



		virtual public global::System.Boolean? S2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.S2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsBoolean, value);
			}
		}

		virtual public bool ExistS2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsBoolean);
			}
		}

		virtual public void RemoveS2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsBoolean);
		}



		virtual public global::System.Double? S2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.S2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsDouble, value);
			}
		}

		virtual public bool ExistS2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsDouble);
			}
		}

		virtual public void RemoveS2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsDouble);
		}



		virtual public global::System.Int32? S2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.S2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsInteger, value);
			}
		}

		virtual public bool ExistS2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsInteger);
			}
		}

		virtual public void RemoveS2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsInteger);
		}



		virtual public global::System.String S2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.S2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S2AllorsString, value);
			}
		}

		virtual public bool ExistS2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S2AllorsString);
			}
		}

		virtual public void RemoveS2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.S2AllorsString);
		}



		virtual public global::System.Boolean? S1234AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.S1234AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsBoolean, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsBoolean);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsBoolean);
		}



		virtual public global::System.String S1234AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.S1234AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsString, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsString);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsString);
		}


		virtual public global::Domain.C2 S1234C2many2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S1234C2many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234C2many2one ,value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234C2many2one);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2many2one);
		}


		virtual public global::Domain.S1234 S1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C2Meta.S1234one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234one2one ,value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234one2one);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234one2one);
		}



		virtual public global::System.DateTime? S1234AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.S1234AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsDateTime, value);
			}
		}

		virtual public bool ExistS1234AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsDateTime);
			}
		}

		virtual public void RemoveS1234AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsDateTime);
		}



		virtual public global::System.String ClassName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.ClassName);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.ClassName, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.ClassName);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(C2Meta.ClassName);
		}



		virtual public global::System.Int64? S1234AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.S1234AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsLong, value);
			}
		}

		virtual public bool ExistS1234AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsLong);
			}
		}

		virtual public void RemoveS1234AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsLong);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234many2many, value);
			}
		}

		virtual public void AddS1234many2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234many2many, value);
		}

		virtual public void RemoveS1234many2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234many2many,value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234many2many);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234many2many);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234C2one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234C2one2many, value);
			}
		}

		virtual public void AddS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234C2one2many, value);
		}

		virtual public void RemoveS1234C2one2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2one2many,value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234C2one2many);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234C2one2many);
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234one2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234one2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234one2many, value);
			}
		}

		virtual public void AddS1234one2many (global::Domain.S1234 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234one2many, value);
		}

		virtual public void RemoveS1234one2many (global::Domain.S1234 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234one2many,value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234one2many);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234one2many);
		}


		virtual public Allors.Extent<global::Domain.C2> S1234C2many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.S1234C2many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.S1234C2many2many, value);
			}
		}

		virtual public void AddS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.S1234C2many2many, value);
		}

		virtual public void RemoveS1234C2many2many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2many2many,value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.S1234C2many2many);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.S1234C2many2many);
		}


		virtual public global::Domain.C2 S1234C2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.S1234C2one2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234C2one2one ,value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234C2one2one);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234C2one2one);
		}


		virtual public global::Domain.S1234 S1234many2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeRole(C2Meta.S1234many2one);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.S1234many2one ,value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.S1234many2one);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(C2Meta.S1234many2one);
		}



		virtual public global::System.Int32? S1234AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.S1234AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsInteger, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsInteger);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsInteger);
		}



		virtual public global::System.Decimal? S1234AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.S1234AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsDecimal, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsDecimal);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsDecimal);
		}



		virtual public global::System.Double? S1234AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.S1234AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.S1234AllorsDouble, value);
			}
		}

		virtual public bool ExistS1234AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.S1234AllorsDouble);
			}
		}

		virtual public void RemoveS1234AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.S1234AllorsDouble);
		}



		virtual public global::Domain.C1 C1WhereC2one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereC2one2many);
			}
		} 

		virtual public bool ExistC1WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereC2one2many);
			}
		}


		virtual public global::Domain.I12 I12WhereC2one2many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereC2one2many);
			}
		} 

		virtual public bool ExistI12WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereC2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereC2many2one);
			}
		}

		virtual public bool ExistS1234sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereC2many2one);
			}
		}


		virtual public global::Domain.C3 C3WhereC2one2one
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeAssociation(C2Meta.C3WhereC2one2one);
			}
		} 

		virtual public bool ExistC3WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C3WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereC2many2many);
			}
		}

		virtual public bool ExistI1sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereC2many2many);
			}
		}


		virtual public global::Domain.C1 C1WhereC2one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereC2one2one);
			}
		} 

		virtual public bool ExistC1WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereC2one2one);
			}
		}


		virtual public global::Domain.I12 I12WhereC2one2one
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereC2one2one);
			}
		} 

		virtual public bool ExistI12WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereC2many2one);
			}
		}

		virtual public bool ExistC1sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereC2many2one);
			}
		}


		virtual public global::Domain.C2 C2WhereC2one2many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereC2one2many);
			}
		} 

		virtual public bool ExistC2WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereC2one2many);
			}
		}


		virtual public global::Domain.S12 S12WhereC2one2many
		{ 
			get
			{
				return (global::Domain.S12) Strategy.GetCompositeAssociation(C2Meta.S12WhereC2one2many);
			}
		} 

		virtual public bool ExistS12WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S12WhereC2one2many);
			}
		}


		virtual public global::Domain.C2 C2WhereC2one2one
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereC2one2one);
			}
		} 

		virtual public bool ExistC2WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C3> C3sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C3sWhereC2many2one);
			}
		}

		virtual public bool ExistC3sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C3sWhereC2many2one);
			}
		}


		virtual public global::Domain.S1234 S1234WhereC2one2many
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereC2one2many);
			}
		} 

		virtual public bool ExistS1234WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereC2one2many);
			}
		}


		virtual public global::Domain.C3 C3WhereC2one2many
		{ 
			get
			{
				return (global::Domain.C3) Strategy.GetCompositeAssociation(C2Meta.C3WhereC2one2many);
			}
		} 

		virtual public bool ExistC3WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C3WhereC2one2many);
			}
		}


		virtual public global::Domain.S12 S12WhereC2one2one
		{ 
			get
			{
				return (global::Domain.S12) Strategy.GetCompositeAssociation(C2Meta.S12WhereC2one2one);
			}
		} 

		virtual public bool ExistS12WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S12WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereC2many2many);
			}
		}

		virtual public bool ExistI12sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereC2many2many);
			}
		}

		virtual public bool ExistS1234sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereC2many2many);
			}
		}

		virtual public bool ExistC1sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S12> S12sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S12sWhereC2many2one);
			}
		}

		virtual public bool ExistS12sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S12sWhereC2many2one);
			}
		}


		virtual public global::Domain.S1234 S1234WhereC2one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereC2one2one);
			}
		} 

		virtual public bool ExistS1234WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereC2many2many);
			}
		}

		virtual public bool ExistC2sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S12> S12sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S12sWhereC2many2many);
			}
		}

		virtual public bool ExistS12sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S12sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereC2many2one);
			}
		}

		virtual public bool ExistI12sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereC2many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereC2one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereC2one2many);
			}
		} 

		virtual public bool ExistI1WhereC2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereC2one2many);
			}
		}


		virtual public global::Domain.I1 I1WhereC2one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereC2one2one);
			}
		} 

		virtual public bool ExistI1WhereC2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereC2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereC2many2one);
			}
		}

		virtual public bool ExistC2sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereC2many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C3> C3sWhereC2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C3sWhereC2many2many);
			}
		}

		virtual public bool ExistC3sWhereC2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C3sWhereC2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereC2many2one);
			}
		}

		virtual public bool ExistI1sWhereC2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereC2many2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI12many2many);
			}
		}

		virtual public bool ExistC1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI12many2many);
			}
		}


		virtual public global::Domain.C1 C1WhereI12one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI12one2many);
			}
		} 

		virtual public bool ExistC1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI12one2many);
			}
		}


		virtual public global::Domain.I1 I1WhereI12one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI12one2many);
			}
		} 

		virtual public bool ExistI1WhereI12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI12one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI12many2many);
			}
		}

		virtual public bool ExistI1sWhereI12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI12many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI12many2one);
			}
		}

		virtual public bool ExistC1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI12many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereI12one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI12one2one);
			}
		} 

		virtual public bool ExistI1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI12one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI12many2one);
			}
		}

		virtual public bool ExistI1sWhereI12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI12many2one);
			}
		}


		virtual public global::Domain.C1 C1WhereI12one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI12one2one);
			}
		} 

		virtual public bool ExistC1WhereI12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI12one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI2many2many);
			}
		}

		virtual public bool ExistC1sWhereI2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI2many2many);
			}
		}


		virtual public global::Domain.I1 I1WhereI2one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI2one2one);
			}
		} 

		virtual public bool ExistI1WhereI2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI2many2one);
			}
		}

		virtual public bool ExistC1sWhereI2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI2many2one);
			}
		}


		virtual public global::Domain.C1 C1WhereI2one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI2one2many);
			}
		} 

		virtual public bool ExistC1WhereI2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI2many2many);
			}
		}

		virtual public bool ExistI1sWhereI2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI2many2one);
			}
		}

		virtual public bool ExistI1sWhereI2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI2many2one);
			}
		}


		virtual public global::Domain.C1 C1WhereI2one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI2one2one);
			}
		} 

		virtual public bool ExistC1WhereI2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI2one2one);
			}
		}


		virtual public global::Domain.I1 I1WhereI2one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI2one2many);
			}
		} 

		virtual public bool ExistI1WhereI2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereS2many2one);
			}
		}

		virtual public bool ExistI1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereS2many2one);
			}
		}


		virtual public global::Domain.C1 C1WhereS2one2many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereS2one2many);
			}
		} 

		virtual public bool ExistC1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereS2one2many);
			}
		}


		virtual public global::Domain.S1 S1WhereS2one2one
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeAssociation(C2Meta.S1WhereS2one2one);
			}
		} 

		virtual public bool ExistS1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1WhereS2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S1> S1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1sWhereS2many2many);
			}
		}

		virtual public bool ExistS1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1sWhereS2many2many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereS2many2many);
			}
		}

		virtual public bool ExistC1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereS2many2many);
			}
		}


		virtual public global::Domain.I1 I1WhereS2one2many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereS2one2many);
			}
		} 

		virtual public bool ExistI1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereS2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereS2many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereS2many2many);
			}
		}

		virtual public bool ExistI1sWhereS2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereS2many2many);
			}
		}


		virtual public global::Domain.C1 C1WhereS2one2one
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereS2one2one);
			}
		} 

		virtual public bool ExistC1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereS2one2one);
			}
		}


		virtual public global::Domain.S1 S1WhereS2one2many
		{ 
			get
			{
				return (global::Domain.S1) Strategy.GetCompositeAssociation(C2Meta.S1WhereS2one2many);
			}
		} 

		virtual public bool ExistS1WhereS2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1WhereS2one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1> S1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1sWhereS2many2one);
			}
		}

		virtual public bool ExistS1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1sWhereS2many2one);
			}
		}


		virtual public global::Domain.I1 I1WhereS2one2one
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereS2one2one);
			}
		} 

		virtual public bool ExistI1WhereS2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereS2one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereS2many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereS2many2one);
			}
		}

		virtual public bool ExistC1sWhereS2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereS2many2one);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2one
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereS1234one2one);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereS1234one2one);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereS1234many2many);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereS1234many2many);
			}
		}


		virtual public global::Domain.S1234 S1234WhereS1234one2many
		{ 
			get
			{
				return (global::Domain.S1234) Strategy.GetCompositeAssociation(C2Meta.S1234WhereS1234one2many);
			}
		} 

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.S1234WhereS1234one2many);
			}
		}


		virtual public Allors.Extent<global::Domain.S1234> S1234sWhereS1234many2one
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.S1234sWhereS1234many2one);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.S1234sWhereS1234many2one);
			}
		}

	}
}