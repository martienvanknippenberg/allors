// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public abstract partial class A3 : A3Allors , global::Domain.AI34, global::Domain.AI3
	{
		public A3(Allors.IStrategy allors) : base(allors) {}

		public static new A3 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (A3) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class A3Allors :  global::Domain.A34 
	{
		protected A3Allors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.String A3AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(A3Meta.A3AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(A3Meta.A3AllorsString, value);
			}
		}

		virtual public bool ExistA3AllorsString{
			get
			{
				return Strategy.ExistUnitRole(A3Meta.A3AllorsString);
			}
		}

		virtual public void RemoveA3AllorsString()
		{
			Strategy.RemoveUnitRole(A3Meta.A3AllorsString);
		}


		virtual public Allors.Extent<global::Domain.C4> A3C4many2manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(A3Meta.A3C4many2many);
			}
			set
			{
				Strategy.SetCompositeRoles(A3Meta.A3C4many2many, value);
			}
		}

		virtual public void AddA3C4many2many (global::Domain.C4 value)
		{
			Strategy.AddCompositeRole(A3Meta.A3C4many2many, value);
		}

		virtual public void RemoveA3C4many2many (global::Domain.C4 value)
		{
			Strategy.RemoveCompositeRole(A3Meta.A3C4many2many,value);
		}

		virtual public bool ExistA3C4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(A3Meta.A3C4many2many);
			}
		}

		virtual public void RemoveA3C4many2manies()
		{
			Strategy.RemoveCompositeRoles(A3Meta.A3C4many2many);
		}

	}
}