// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class DerivationLogC1 : DerivationLogC1Allors , global::Domain.DerivationLogI12
	{
		public DerivationLogC1(Allors.IStrategy allors) : base(allors) {}

		public static DerivationLogC1 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (DerivationLogC1) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class DerivationLogC1Allors : Allors.ObjectBase
	{
		protected DerivationLogC1Allors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.Guid? UniqueId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(DerivationLogC1Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(DerivationLogC1Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(DerivationLogC1Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(DerivationLogC1Meta.UniqueId);
		}

	}

	public static class DerivationLogC1Meta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2361c456-b624-493a-8377-2dd1e697e17a") );

		public static readonly global::Allors.Meta.RoleType UniqueId = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0b89b096-a69a-495c-acfe-b24a9b27e320"))).RoleType;

	}
}