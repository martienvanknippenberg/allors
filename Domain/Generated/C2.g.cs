// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class C2 : C2Allors , global::Domain.I2
	{
		public C2(Allors.IStrategy allors) : base(allors) {}

		public static C2 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C2) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class C2Allors : Allors.ObjectBase
	{
		protected C2Allors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.Decimal? C2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.C2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDecimal, value);
			}
		}

		virtual public bool ExistC2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDecimal);
			}
		}

		virtual public void RemoveC2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDecimal);
		}


		virtual public global::Domain.C1 C2C1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.C2C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C1One2One ,value);
			}
		}

		virtual public bool ExistC2C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C1One2One);
			}
		}

		virtual public void RemoveC2C1One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C1One2One);
		}


		virtual public global::Domain.C2 C2C2Many2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.C2C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C2Many2One ,value);
			}
		}

		virtual public bool ExistC2C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C2Many2One);
			}
		}

		virtual public void RemoveC2C2Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2Many2One);
		}



		virtual public global::System.Guid? C2AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C2Meta.C2AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsUnique, value);
			}
		}

		virtual public bool ExistC2AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsUnique);
			}
		}

		virtual public void RemoveC2AllorsUnique()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsUnique);
		}


		virtual public global::Domain.I12 C2I12Many2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C2Meta.C2I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2I12Many2One ,value);
			}
		}

		virtual public bool ExistC2I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2I12Many2One);
			}
		}

		virtual public void RemoveC2I12Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I12Many2One);
		}


		virtual public global::Domain.I12 C2I12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C2Meta.C2I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2I12One2One ,value);
			}
		}

		virtual public bool ExistC2I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2I12One2One);
			}
		}

		virtual public void RemoveC2I12One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I12One2One);
		}


		virtual public Allors.Extent<global::Domain.I1> C2I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2I1Many2Many, value);
			}
		}

		virtual public void AddC2I1Many2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2I1Many2Many, value);
		}

		virtual public void RemoveC2I1Many2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I1Many2Many,value);
		}

		virtual public bool ExistC2I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2I1Many2Many);
			}
		}

		virtual public void RemoveC2I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2I1Many2Many);
		}



		virtual public global::System.Double? C2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.C2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDouble, value);
			}
		}

		virtual public bool ExistC2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDouble);
			}
		}

		virtual public void RemoveC2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDouble);
		}


		virtual public Allors.Extent<global::Domain.I1> C2I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2I1One2Many, value);
			}
		}

		virtual public void AddC2I1One2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2I1One2Many, value);
		}

		virtual public void RemoveC2I1One2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I1One2Many,value);
		}

		virtual public bool ExistC2I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2I1One2Many);
			}
		}

		virtual public void RemoveC2I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2I1One2Many);
		}


		virtual public global::Domain.I2 C2I2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C2Meta.C2I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2I2One2One ,value);
			}
		}

		virtual public bool ExistC2I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2I2One2One);
			}
		}

		virtual public void RemoveC2I2One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I2One2One);
		}



		virtual public global::System.Int64? C2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.C2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsLong, value);
			}
		}

		virtual public bool ExistC2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsLong);
			}
		}

		virtual public void RemoveC2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsLong);
		}



		virtual public global::System.Int32? C2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.C2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsInteger, value);
			}
		}

		virtual public bool ExistC2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsInteger);
			}
		}

		virtual public void RemoveC2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.I2> C2I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2I2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2I2Many2Many, value);
			}
		}

		virtual public void AddC2I2Many2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2I2Many2Many, value);
		}

		virtual public void RemoveC2I2Many2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I2Many2Many,value);
		}

		virtual public bool ExistC2I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2I2Many2Many);
			}
		}

		virtual public void RemoveC2I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2I2Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I12> C2I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2I12Many2Many, value);
			}
		}

		virtual public void AddC2I12Many2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2I12Many2Many, value);
		}

		virtual public void RemoveC2I12Many2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I12Many2Many,value);
		}

		virtual public bool ExistC2I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2I12Many2Many);
			}
		}

		virtual public void RemoveC2I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2I12Many2Many);
		}


		virtual public Allors.Extent<global::Domain.C2> C2C2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C2One2Many, value);
			}
		}

		virtual public void AddC2C2One2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C2One2Many, value);
		}

		virtual public void RemoveC2C2One2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2One2Many,value);
		}

		virtual public bool ExistC2C2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C2One2Many);
			}
		}

		virtual public void RemoveC2C2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C2One2Many);
		}



		virtual public global::System.Boolean? C2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.C2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsBoolean, value);
			}
		}

		virtual public bool ExistC2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsBoolean);
			}
		}

		virtual public void RemoveC2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsBoolean);
		}


		virtual public global::Domain.I1 C2I1Many2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C2Meta.C2I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2I1Many2One ,value);
			}
		}

		virtual public bool ExistC2I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2I1Many2One);
			}
		}

		virtual public void RemoveC2I1Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I1Many2One);
		}


		virtual public global::Domain.I1 C2I1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C2Meta.C2I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2I1One2One ,value);
			}
		}

		virtual public bool ExistC2I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2I1One2One);
			}
		}

		virtual public void RemoveC2I1One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I1One2One);
		}


		virtual public Allors.Extent<global::Domain.C1> C2C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C1Many2Many, value);
			}
		}

		virtual public void AddC2C1Many2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C1Many2Many, value);
		}

		virtual public void RemoveC2C1Many2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C1Many2Many,value);
		}

		virtual public bool ExistC2C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C1Many2Many);
			}
		}

		virtual public void RemoveC2C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C1Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I12> C2I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2I12One2Many, value);
			}
		}

		virtual public void AddC2I12One2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2I12One2Many, value);
		}

		virtual public void RemoveC2I12One2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I12One2Many,value);
		}

		virtual public bool ExistC2I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2I12One2Many);
			}
		}

		virtual public void RemoveC2I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2I12One2Many);
		}


		virtual public Allors.Extent<global::Domain.I2> C2I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2I2One2Many, value);
			}
		}

		virtual public void AddC2I2One2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2I2One2Many, value);
		}

		virtual public void RemoveC2I2One2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I2One2Many,value);
		}

		virtual public bool ExistC2I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2I2One2Many);
			}
		}

		virtual public void RemoveC2I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2I2One2Many);
		}


		virtual public global::Domain.C2 C2C2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.C2C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C2One2One ,value);
			}
		}

		virtual public bool ExistC2C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C2One2One);
			}
		}

		virtual public void RemoveC2C2One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2One2One);
		}



		virtual public global::System.String C2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.C2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsString, value);
			}
		}

		virtual public bool ExistC2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsString);
			}
		}

		virtual public void RemoveC2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsString);
		}


		virtual public global::Domain.C1 C2C1Many2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.C2C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2C1Many2One ,value);
			}
		}

		virtual public bool ExistC2C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2C1Many2One);
			}
		}

		virtual public void RemoveC2C1Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C1Many2One);
		}


		virtual public Allors.Extent<global::Domain.C2> C2C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C2Many2Many, value);
			}
		}

		virtual public void AddC2C2Many2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C2Many2Many, value);
		}

		virtual public void RemoveC2C2Many2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C2Many2Many,value);
		}

		virtual public bool ExistC2C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C2Many2Many);
			}
		}

		virtual public void RemoveC2C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C2Many2Many);
		}



		virtual public global::System.DateTime? C2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.C2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsDateTime, value);
			}
		}

		virtual public bool ExistC2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsDateTime);
			}
		}

		virtual public void RemoveC2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsDateTime);
		}


		virtual public global::Domain.I2 C2I2Many2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C2Meta.C2I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.C2I2Many2One ,value);
			}
		}

		virtual public bool ExistC2I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.C2I2Many2One);
			}
		}

		virtual public void RemoveC2I2Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.C2I2Many2One);
		}


		virtual public Allors.Extent<global::Domain.C1> C2C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.C2C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.C2C1One2Many, value);
			}
		}

		virtual public void AddC2C1One2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.C2C1One2Many, value);
		}

		virtual public void RemoveC2C1One2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.C2C1One2Many,value);
		}

		virtual public bool ExistC2C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.C2C1One2Many);
			}
		}

		virtual public void RemoveC2C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.C2C1One2Many);
		}



		virtual public global::System.Byte[] C2AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C2Meta.C2AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.C2AllorsBinary, value);
			}
		}

		virtual public bool ExistC2AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.C2AllorsBinary);
			}
		}

		virtual public void RemoveC2AllorsBinary()
		{
			Strategy.RemoveUnitRole(C2Meta.C2AllorsBinary);
		}


		virtual public global::Domain.I2 I2I2Many2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C2Meta.I2I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2I2Many2One ,value);
			}
		}

		virtual public bool ExistI2I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2I2Many2One);
			}
		}

		virtual public void RemoveI2I2Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I2Many2One);
		}


		virtual public global::Domain.C1 I2C1Many2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.I2C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2C1Many2One ,value);
			}
		}

		virtual public bool ExistI2C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2C1Many2One);
			}
		}

		virtual public void RemoveI2C1Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C1Many2One);
		}


		virtual public global::Domain.I12 I2I12Many2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C2Meta.I2I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2I12Many2One ,value);
			}
		}

		virtual public bool ExistI2I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2I12Many2One);
			}
		}

		virtual public void RemoveI2I12Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I12Many2One);
		}



		virtual public global::System.Boolean? I2AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.I2AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsBoolean, value);
			}
		}

		virtual public bool ExistI2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsBoolean);
			}
		}

		virtual public void RemoveI2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsBoolean);
		}


		virtual public Allors.Extent<global::Domain.C1> I2C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2C1One2Many, value);
			}
		}

		virtual public void AddI2C1One2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2C1One2Many, value);
		}

		virtual public void RemoveI2C1One2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C1One2Many,value);
		}

		virtual public bool ExistI2C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2C1One2Many);
			}
		}

		virtual public void RemoveI2C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2C1One2Many);
		}


		virtual public global::Domain.C1 I2C1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.I2C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2C1One2One ,value);
			}
		}

		virtual public bool ExistI2C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2C1One2One);
			}
		}

		virtual public void RemoveI2C1One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C1One2One);
		}



		virtual public global::System.Decimal? I2AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.I2AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDecimal, value);
			}
		}

		virtual public bool ExistI2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDecimal);
			}
		}

		virtual public void RemoveI2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDecimal);
		}


		virtual public Allors.Extent<global::Domain.I2> I2I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2Many2any);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2Many2any, value);
			}
		}

		virtual public void AddI2Many2any (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2Many2any, value);
		}

		virtual public void RemoveI2Many2any (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2Many2any,value);
		}

		virtual public bool ExistI2I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2Many2any);
			}
		}

		virtual public void RemoveI2I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2Many2any);
		}



		virtual public global::System.Byte[] I2AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C2Meta.I2AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsBinary, value);
			}
		}

		virtual public bool ExistI2AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsBinary);
			}
		}

		virtual public void RemoveI2AllorsBinary()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsBinary);
		}



		virtual public global::System.Guid? I2AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C2Meta.I2AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsUnique, value);
			}
		}

		virtual public bool ExistI2AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsUnique);
			}
		}

		virtual public void RemoveI2AllorsUnique()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsUnique);
		}


		virtual public global::Domain.I1 I2I1Many2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C2Meta.I2I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2I1Many2One ,value);
			}
		}

		virtual public bool ExistI2I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2I1Many2One);
			}
		}

		virtual public void RemoveI2I1Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I1Many2One);
		}


		virtual public Allors.Extent<global::Domain.I12> I2I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2I12One2Many, value);
			}
		}

		virtual public void AddI2I12One2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2I12One2Many, value);
		}

		virtual public void RemoveI2I12One2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I12One2Many,value);
		}

		virtual public bool ExistI2I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2I12One2Many);
			}
		}

		virtual public void RemoveI2I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2I12One2Many);
		}


		virtual public global::Domain.I12 I2I12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C2Meta.I2I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2I12One2One ,value);
			}
		}

		virtual public bool ExistI2I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2I12One2One);
			}
		}

		virtual public void RemoveI2I12One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I12One2One);
		}


		virtual public Allors.Extent<global::Domain.C2> I2C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2C2Many2Many, value);
			}
		}

		virtual public void AddI2C2Many2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2C2Many2Many, value);
		}

		virtual public void RemoveI2C2Many2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C2Many2Many,value);
		}

		virtual public bool ExistI2C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2C2Many2Many);
			}
		}

		virtual public void RemoveI2C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2C2Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I1> I2I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2I1Many2Many, value);
			}
		}

		virtual public void AddI2I1Many2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2I1Many2Many, value);
		}

		virtual public void RemoveI2I1Many2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I1Many2Many,value);
		}

		virtual public bool ExistI2I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2I1Many2Many);
			}
		}

		virtual public void RemoveI2I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2I1Many2Many);
		}


		virtual public global::Domain.C2 I2C2Many2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I2C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2C2Many2One ,value);
			}
		}

		virtual public bool ExistI2C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2C2Many2One);
			}
		}

		virtual public void RemoveI2C2Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C2Many2One);
		}



		virtual public global::System.String I2AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I2AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsString, value);
			}
		}

		virtual public bool ExistI2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsString);
			}
		}

		virtual public void RemoveI2AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsString);
		}


		virtual public Allors.Extent<global::Domain.C2> I2C2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2C2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2C2One2Many, value);
			}
		}

		virtual public void AddI2C2One2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2C2One2Many, value);
		}

		virtual public void RemoveI2C2One2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C2One2Many,value);
		}

		virtual public bool ExistI2C2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2C2One2Many);
			}
		}

		virtual public void RemoveI2C2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2C2One2Many);
		}


		virtual public global::Domain.I1 I2I1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C2Meta.I2I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2I1One2One ,value);
			}
		}

		virtual public bool ExistI2I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2I1One2One);
			}
		}

		virtual public void RemoveI2I1One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I1One2One);
		}



		virtual public global::System.DateTime? I2AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.I2AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDateTime, value);
			}
		}

		virtual public bool ExistI2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDateTime);
			}
		}

		virtual public void RemoveI2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDateTime);
		}


		virtual public Allors.Extent<global::Domain.I1> I2I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2I1One2Many, value);
			}
		}

		virtual public void AddI2I1One2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2I1One2Many, value);
		}

		virtual public void RemoveI2I1One2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I1One2Many,value);
		}

		virtual public bool ExistI2I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2I1One2Many);
			}
		}

		virtual public void RemoveI2I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2I1One2Many);
		}


		virtual public Allors.Extent<global::Domain.I12> I2I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2I12Many2Many, value);
			}
		}

		virtual public void AddI2I12Many2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2I12Many2Many, value);
		}

		virtual public void RemoveI2I12Many2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I12Many2Many,value);
		}

		virtual public bool ExistI2I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2I12Many2Many);
			}
		}

		virtual public void RemoveI2I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2I12Many2Many);
		}


		virtual public global::Domain.I2 I2I2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C2Meta.I2I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2I2One2One ,value);
			}
		}

		virtual public bool ExistI2I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2I2One2One);
			}
		}

		virtual public void RemoveI2I2One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I2One2One);
		}



		virtual public global::System.Int64? I2AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.I2AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsLong, value);
			}
		}

		virtual public bool ExistI2AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsLong);
			}
		}

		virtual public void RemoveI2AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsLong);
		}



		virtual public global::System.Int32? I2AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.I2AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsInteger, value);
			}
		}

		virtual public bool ExistI2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsInteger);
			}
		}

		virtual public void RemoveI2AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.I2> I2I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2I2One2Many, value);
			}
		}

		virtual public void AddI2I2One2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2I2One2Many, value);
		}

		virtual public void RemoveI2I2One2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2I2One2Many,value);
		}

		virtual public bool ExistI2I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2I2One2Many);
			}
		}

		virtual public void RemoveI2I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2I2One2Many);
		}


		virtual public Allors.Extent<global::Domain.C1> I2C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I2C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I2C1Many2Many, value);
			}
		}

		virtual public void AddI2C1Many2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I2C1Many2Many, value);
		}

		virtual public void RemoveI2C1Many2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C1Many2Many,value);
		}

		virtual public bool ExistI2C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I2C1Many2Many);
			}
		}

		virtual public void RemoveI2C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I2C1Many2Many);
		}


		virtual public global::Domain.C2 I2C2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I2C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I2C2One2One ,value);
			}
		}

		virtual public bool ExistI2C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I2C2One2One);
			}
		}

		virtual public void RemoveI2C2One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I2C2One2One);
		}



		virtual public global::System.Double? I2AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.I2AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I2AllorsDouble, value);
			}
		}

		virtual public bool ExistI2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I2AllorsDouble);
			}
		}

		virtual public void RemoveI2AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.I2AllorsDouble);
		}



		virtual public global::System.Byte[] I12AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C2Meta.I12AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsBinary, value);
			}
		}

		virtual public bool ExistI12AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsBinary);
			}
		}

		virtual public void RemoveI12AllorsBinary()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsBinary);
		}


		virtual public global::Domain.C2 I12C2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I12C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C2One2One ,value);
			}
		}

		virtual public bool ExistI12C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C2One2One);
			}
		}

		virtual public void RemoveI12C2One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2One2One);
		}



		virtual public global::System.Double? I12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C2Meta.I12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDouble, value);
			}
		}

		virtual public bool ExistI12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDouble);
			}
		}

		virtual public void RemoveI12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDouble);
		}


		virtual public global::Domain.I1 I12I1Many2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C2Meta.I12I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I1Many2One ,value);
			}
		}

		virtual public bool ExistI12I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I1Many2One);
			}
		}

		virtual public void RemoveI12I1Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I1Many2One);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsString);
		}


		virtual public Allors.Extent<global::Domain.I12> I12I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I12Many2Many, value);
			}
		}

		virtual public void AddI12I12Many2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I12Many2Many, value);
		}

		virtual public void RemoveI12I12Many2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I12Many2Many,value);
		}

		virtual public bool ExistI12I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I12Many2Many);
			}
		}

		virtual public void RemoveI12I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I12Many2Many);
		}



		virtual public global::System.Decimal? I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C2Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDecimal);
		}


		virtual public Allors.Extent<global::Domain.I2> I12I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I2Many2Many, value);
			}
		}

		virtual public void AddI12I2Many2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I2Many2Many, value);
		}

		virtual public void RemoveI12I2Many2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I2Many2Many,value);
		}

		virtual public bool ExistI12I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I2Many2Many);
			}
		}

		virtual public void RemoveI12I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I2Many2Many);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C2Many2Many, value);
			}
		}

		virtual public void AddI12C2Many2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C2Many2Many, value);
		}

		virtual public void RemoveI12C2Many2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2Many2Many,value);
		}

		virtual public bool ExistI12C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C2Many2Many);
			}
		}

		virtual public void RemoveI12C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C2Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I1> I12I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I1Many2Many, value);
			}
		}

		virtual public void AddI12I1Many2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I1Many2Many, value);
		}

		virtual public void RemoveI12I1Many2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I1Many2Many,value);
		}

		virtual public bool ExistI12I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I1Many2Many);
			}
		}

		virtual public void RemoveI12I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I1Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I12> I12I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I12One2Many, value);
			}
		}

		virtual public void AddI12I12One2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I12One2Many, value);
		}

		virtual public void RemoveI12I12One2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I12One2Many,value);
		}

		virtual public bool ExistI12I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I12One2Many);
			}
		}

		virtual public void RemoveI12I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I12One2Many);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.Name);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(C2Meta.Name);
		}


		virtual public Allors.Extent<global::Domain.C1> I12C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C1Many2Many, value);
			}
		}

		virtual public void AddI12C1Many2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C1Many2Many, value);
		}

		virtual public void RemoveI12C1Many2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C1Many2Many,value);
		}

		virtual public bool ExistI12C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C1Many2Many);
			}
		}

		virtual public void RemoveI12C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C1Many2Many);
		}


		virtual public global::Domain.I2 I12I2Many2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C2Meta.I12I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I2Many2One ,value);
			}
		}

		virtual public bool ExistI12I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I2Many2One);
			}
		}

		virtual public void RemoveI12I2Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I2Many2One);
		}



		virtual public global::System.Guid? I12AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C2Meta.I12AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsUnique, value);
			}
		}

		virtual public bool ExistI12AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsUnique);
			}
		}

		virtual public void RemoveI12AllorsUnique()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsUnique);
		}



		virtual public global::System.Int32? I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C2Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.I1> I12I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I1One2Many, value);
			}
		}

		virtual public void AddI12I1One2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I1One2Many, value);
		}

		virtual public void RemoveI12I1One2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I1One2Many,value);
		}

		virtual public bool ExistI12I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I1One2Many);
			}
		}

		virtual public void RemoveI12I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I1One2Many);
		}


		virtual public global::Domain.C1 I12C1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.I12C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C1One2One ,value);
			}
		}

		virtual public bool ExistI12C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C1One2One);
			}
		}

		virtual public void RemoveI12C1One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C1One2One);
		}



		virtual public global::System.Int64? I12AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C2Meta.I12AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsLong, value);
			}
		}

		virtual public bool ExistI12AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsLong);
			}
		}

		virtual public void RemoveI12AllorsLong()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsLong);
		}


		virtual public global::Domain.I12 I12I12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C2Meta.I12I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I12One2One ,value);
			}
		}

		virtual public bool ExistI12I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I12One2One);
			}
		}

		virtual public void RemoveI12I12One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I12One2One);
		}


		virtual public global::Domain.I2 I12I2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C2Meta.I12I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I2One2One ,value);
			}
		}

		virtual public bool ExistI12I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I2One2One);
			}
		}

		virtual public void RemoveI12I2One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I2One2One);
		}


		virtual public Allors.Extent<global::Domain.I12> Dependencies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.Dependency);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.Dependency, value);
			}
		}

		virtual public void AddDependency (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C2Meta.Dependency, value);
		}

		virtual public void RemoveDependency (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.Dependency,value);
		}

		virtual public bool ExistDependencies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.Dependency);
			}
		}

		virtual public void RemoveDependencies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.Dependency);
		}


		virtual public Allors.Extent<global::Domain.I2> I12I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12I2One2Many, value);
			}
		}

		virtual public void AddI12I2One2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12I2One2Many, value);
		}

		virtual public void RemoveI12I2One2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I2One2Many,value);
		}

		virtual public bool ExistI12I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12I2One2Many);
			}
		}

		virtual public void RemoveI12I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12I2One2Many);
		}


		virtual public global::Domain.C2 I12C2Many2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C2Meta.I12C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C2Many2One ,value);
			}
		}

		virtual public bool ExistI12C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C2Many2One);
			}
		}

		virtual public void RemoveI12C2Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C2Many2One);
		}


		virtual public global::Domain.I12 I12I12Many2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C2Meta.I12I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I12Many2One ,value);
			}
		}

		virtual public bool ExistI12I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I12Many2One);
			}
		}

		virtual public void RemoveI12I12Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I12Many2One);
		}



		virtual public global::System.Boolean? I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C2Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsBoolean);
		}


		virtual public global::Domain.I1 I12I1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C2Meta.I12I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12I1One2One ,value);
			}
		}

		virtual public bool ExistI12I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12I1One2One);
			}
		}

		virtual public void RemoveI12I1One2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12I1One2One);
		}


		virtual public Allors.Extent<global::Domain.C1> I12C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.I12C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.I12C1One2Many, value);
			}
		}

		virtual public void AddI12C1One2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C2Meta.I12C1One2Many, value);
		}

		virtual public void RemoveI12C1One2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C1One2Many,value);
		}

		virtual public bool ExistI12C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.I12C1One2Many);
			}
		}

		virtual public void RemoveI12C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C2Meta.I12C1One2Many);
		}


		virtual public global::Domain.C1 I12C1Many2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C2Meta.I12C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.I12C1Many2One ,value);
			}
		}

		virtual public bool ExistI12C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.I12C1Many2One);
			}
		}

		virtual public void RemoveI12C1Many2One()
		{
			Strategy.RemoveCompositeRole(C2Meta.I12C1Many2One);
		}



		virtual public global::System.DateTime? I12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C2Meta.I12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.I12AllorsDateTime, value);
			}
		}

		virtual public bool ExistI12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.I12AllorsDateTime);
			}
		}

		virtual public void RemoveI12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C2Meta.I12AllorsDateTime);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C2Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(C2Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(C2Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(C2Meta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(C2Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(C2Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(C2Meta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C2Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(C2Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(C2Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(C2Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(C2Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(C2Meta.SecurityToken);
		}


		virtual public global::Domain.SearchData SearchData
		{ 
			get
			{
				return (global::Domain.SearchData) Strategy.GetCompositeRole(C2Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(C2Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(C2Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(C2Meta.SearchData);
		}



		virtual public Allors.Extent<global::Domain.I2> I2sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I2sWhereC2Many2Many);
			}
		}

		virtual public bool ExistI2sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I2sWhereC2Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I2sWhereC2Many2One);
			}
		}

		virtual public bool ExistI2sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I2sWhereC2Many2One);
			}
		}


		virtual public global::Domain.I2 I2WhereC2One2Many
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C2Meta.I2WhereC2One2Many);
			}
		} 

		virtual public bool ExistI2WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I2WhereC2One2Many);
			}
		}


		virtual public global::Domain.I2 I2WhereC2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C2Meta.I2WhereC2One2One);
			}
		} 

		virtual public bool ExistI2WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I2WhereC2One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereC2Many2One);
			}
		}

		virtual public bool ExistC1sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereC2Many2One);
			}
		}


		virtual public global::Domain.C1 C1WhereC2One2Many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereC2One2Many);
			}
		} 

		virtual public bool ExistC1WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereC2One2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereC2One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereC2One2One);
			}
		} 

		virtual public bool ExistC1WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereC2One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereC2Many2Many);
			}
		}

		virtual public bool ExistC1sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereC2Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereC2Many2One);
			}
		}

		virtual public bool ExistC2sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereC2Many2One);
			}
		}


		virtual public global::Domain.C2 C2WhereC2One2Many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereC2One2Many);
			}
		} 

		virtual public bool ExistC2WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereC2One2Many);
			}
		}


		virtual public global::Domain.C2 C2WhereC2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereC2One2One);
			}
		} 

		virtual public bool ExistC2WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereC2One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereC2Many2Many);
			}
		}

		virtual public bool ExistC2sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereC2Many2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereC2One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereC2One2One);
			}
		} 

		virtual public bool ExistI12WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereC2One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereC2Many2Many);
			}
		}

		virtual public bool ExistI12sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereC2Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereC2Many2One);
			}
		}

		virtual public bool ExistI12sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereC2Many2One);
			}
		}


		virtual public global::Domain.I1 I1WhereC2One2Many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereC2One2Many);
			}
		} 

		virtual public bool ExistI1WhereC2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereC2One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereC2Many2Many);
			}
		}

		virtual public bool ExistI1sWhereC2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereC2Many2Many);
			}
		}


		virtual public global::Domain.I1 I1WhereC2One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereC2One2One);
			}
		} 

		virtual public bool ExistI1WhereC2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereC2One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereC2Many2One);
			}
		}

		virtual public bool ExistI1sWhereC2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereC2Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I2sWhereI2Many2One);
			}
		}

		virtual public bool ExistI2sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I2sWhereI2Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI2Many2any
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I2sWhereI2Many2any);
			}
		}

		virtual public bool ExistI2sWhereI2Many2any
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I2sWhereI2Many2any);
			}
		}


		virtual public global::Domain.I2 I2WhereI2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C2Meta.I2WhereI2One2One);
			}
		} 

		virtual public bool ExistI2WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I2WhereI2One2One);
			}
		}


		virtual public global::Domain.I2 I2WhereI2One2Many
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C2Meta.I2WhereI2One2Many);
			}
		} 

		virtual public bool ExistI2WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I2WhereI2One2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereI2One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI2One2One);
			}
		} 

		virtual public bool ExistC1WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI2One2One);
			}
		}


		virtual public global::Domain.C1 C1WhereI2One2Many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI2One2Many);
			}
		} 

		virtual public bool ExistC1WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI2One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI2Many2Many);
			}
		}

		virtual public bool ExistC1sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI2Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI2Many2One);
			}
		}

		virtual public bool ExistC1sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI2Many2One);
			}
		}


		virtual public global::Domain.C2 C2WhereI2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereI2One2One);
			}
		} 

		virtual public bool ExistC2WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereI2One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereI2Many2Many);
			}
		}

		virtual public bool ExistC2sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereI2Many2Many);
			}
		}


		virtual public global::Domain.C2 C2WhereI2One2Many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereI2One2Many);
			}
		} 

		virtual public bool ExistC2WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereI2One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereI2Many2One);
			}
		}

		virtual public bool ExistC2sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereI2Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereI2Many2Many);
			}
		}

		virtual public bool ExistI12sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereI2Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereI2Many2One);
			}
		}

		virtual public bool ExistI12sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereI2Many2One);
			}
		}


		virtual public global::Domain.I12 I12WhereI2One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereI2One2One);
			}
		} 

		virtual public bool ExistI12WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereI2One2One);
			}
		}


		virtual public global::Domain.I12 I12WhereI2One2Many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereI2One2Many);
			}
		} 

		virtual public bool ExistI12WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereI2One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI2Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI2Many2Many);
			}
		}

		virtual public bool ExistI1sWhereI2Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI2Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI2Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI2Many2One);
			}
		}

		virtual public bool ExistI1sWhereI2Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI2Many2One);
			}
		}


		virtual public global::Domain.I1 I1WhereI2One2Many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI2One2Many);
			}
		} 

		virtual public bool ExistI1WhereI2One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI2One2Many);
			}
		}


		virtual public global::Domain.I1 I1WhereI2One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI2One2One);
			}
		} 

		virtual public bool ExistI1WhereI2One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI2One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I2sWhereI12Many2One);
			}
		}

		virtual public bool ExistI2sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I2sWhereI12Many2One);
			}
		}


		virtual public global::Domain.I2 I2WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C2Meta.I2WhereI12One2Many);
			}
		} 

		virtual public bool ExistI2WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I2WhereI12One2Many);
			}
		}


		virtual public global::Domain.I2 I2WhereI12One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C2Meta.I2WhereI12One2One);
			}
		} 

		virtual public bool ExistI2WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I2WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I2sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI2sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I2sWhereI12Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI12Many2Many);
			}
		}

		virtual public bool ExistC1sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI12Many2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI12One2Many);
			}
		} 

		virtual public bool ExistC1WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI12One2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereI12One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C2Meta.C1WhereI12One2One);
			}
		} 

		virtual public bool ExistC1WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C1WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C1sWhereI12Many2One);
			}
		}

		virtual public bool ExistC1sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C1sWhereI12Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereI12Many2One);
			}
		}

		virtual public bool ExistC2sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereI12Many2One);
			}
		}


		virtual public global::Domain.C2 C2WhereI12One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereI12One2One);
			}
		} 

		virtual public bool ExistC2WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.C2sWhereI12Many2Many);
			}
		}

		virtual public bool ExistC2sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.C2sWhereI12Many2Many);
			}
		}


		virtual public global::Domain.C2 C2WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C2Meta.C2WhereI12One2Many);
			}
		} 

		virtual public bool ExistC2WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.C2WhereI12One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI12sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereI12Many2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereI12One2Many);
			}
		} 

		virtual public bool ExistI12WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereI12One2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereI12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C2Meta.I12WhereI12One2One);
			}
		} 

		virtual public bool ExistI12WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I12WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereDependency
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereDependency);
			}
		}

		virtual public bool ExistI12sWhereDependency
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereDependency);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I12sWhereI12Many2One);
			}
		}

		virtual public bool ExistI12sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I12sWhereI12Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI1sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI12Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C2Meta.I1sWhereI12Many2One);
			}
		}

		virtual public bool ExistI1sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C2Meta.I1sWhereI12Many2One);
			}
		}


		virtual public global::Domain.I1 I1WhereI12One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI12One2One);
			}
		} 

		virtual public bool ExistI1WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI12One2One);
			}
		}


		virtual public global::Domain.I1 I1WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C2Meta.I1WhereI12One2Many);
			}
		} 

		virtual public bool ExistI1WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C2Meta.I1WhereI12One2Many);
			}
		}

	}

	public static class C2Meta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("72c07e8a-03f5-4da8-ab37-236333d4f74e") );

		public static readonly global::Allors.Meta.RoleType C2AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("07eaa992-322a-40e9-bf2c-aa33b69f54cd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0c8209e3-b2fc-4c7a-acd2-6b5b8ac89bf4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("12896fc2-c9e9-4a89-b875-0aeb92e298e5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1444d919-6ca1-4642-8d18-9d955c817581"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("165cc83e-935d-4d0d-aec7-5da155300086"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1d0c57c9-a3d1-4134-bc7d-7bb587d8250f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1d98eda7-6dba-43f1-a5ce-44f7ed104cf9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("262ad367-a52c-4d8b-94e2-b477bb098423"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2ac55066-c748-4f90-9d0f-1090fe02cc76"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("38063edc-271a-410d-b857-807a9100c7b5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("41cd7805-0f93-460f-8572-9c479f3db206"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("42f9f4b6-3b35-4168-93cb-35171dbf83f4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4a963639-72c3-4e9f-9058-bcfc8fe0bc9e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("50300577-b5fb-4c16-9ac5-41151543f958"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("60680366-4790-4443-a941-b30cd4bd3848"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("61daaaae-dd22-405e-aa98-6321d2f8af04"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("65a246a7-cd78-45eb-90db-39f542e7c6cf"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("67780894-fa62-48ba-8f47-7f54106090cd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("70600f67-7b18-4b5c-b11e-2ed180c5b2d6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("770eb33c-c8ef-4629-a3a0-20decd92ff62"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7a9129c9-7b6d-4bdd-a630-cfd1392549b7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("86ad371b-0afd-420b-a855-38ebb3f39f38"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9c7cde3f-9b61-4c79-a5d7-afe1067262ce"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a5315151-aa0f-42a3-9d5b-2c7f2cb92560"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bc6c7fe0-6501-428c-a929-da87a9f4b885"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ce23482d-3a22-4202-98e7-5934fd9abd2d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2I2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e08d75a9-9b67-4d20-a476-757f8fb17376"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2C1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f748949e-de5a-4f2e-85e2-e15516d9bf24"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C2AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fa8ad982-9953-47dd-9905-81cc4572300e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("01d9ff41-d503-421e-93a6-5563e1787543"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1f763206-c575-4e34-9e6b-997d434d3f42"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("23e9c15f-097f-4452-9bac-d7cf2a65134a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("35040d7c-ab7f-4a99-9d09-e01e24ca3cb9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("40b8edb3-e8c4-46c0-855b-4b18e0e8d7f3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("49736daf-d0bd-4216-97fa-958cfa21a4f0"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4f095abd-8803-4610-87f0-2847ddd5e9f4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2Many2any = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5ebbc734-23dd-494f-af2d-8e75caaa3e26"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("62a8a93d-3744-49de-9f9a-9997b6ef4da6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("663559c4-ef64-4e78-89b4-bfa00691c627"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6bb406bc-627b-444c-9c16-df9878e05e9c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("83dc0581-e04a-4f51-a44e-4fef63d44356"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("87499e99-ed77-44c1-89d6-b4f570b6f217"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("92fdb313-0b90-48f6-b054-a4ab38f880ba"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9bed0518-1946-4e23-9d4b-e4cda439984c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9f361b97-0b04-496d-ac60-718760c2a4e2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9f91841c-f63f-4ffa-bee6-62e100f3cd15"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b39fdd23-d7dd-473f-9705-df2f29be5ffe"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b640bf16-0dc0-4203-aa76-f456371239ae"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b6d44d67-3a51-482c-88d1-a4917ca2a065"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bbb01166-2671-4ca1-8b1e-12e6ae8aeb03"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cb9f21e0-a841-45de-8ba4-991b4ceca616"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cc4c704c-ab7e-45d4-baa9-b67cfff9448e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d0c49b92-a108-48b5-bc95-72d2e6109ad2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d30dd036-6d28-48df-873b-3a76da8c029e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2I2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("deb9cbd3-386f-4599-802c-be50945b9f1d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f364c9fe-ad36-4305-80fd-4921451c70a5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2C2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f85c2d97-10b9-478d-9b82-2700d95d5cb1"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I2AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fbad33e7-ede1-41fc-97e9-ddf33a0f6459"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("042d1311-1c06-4d7c-b68e-eb734f9c7327"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("107c212d-cc1c-41b2-9c1d-b40c0102072c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1611cb5d-4676-4e85-bfc5-5572e8ff1138"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("167b53c0-644c-467e-9f7c-fcb9415d02c6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("199a84c4-c7cb-4f23-8b6c-078b14525e18"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1bf2abe0-9273-4fb9-b491-020320f1f8db"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("41a74fec-cfbc-43ca-a6e7-890f0dd1eddb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4a2b2f43-037d-4149-8a1e-401e5df963ba"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("51ebb024-c847-4165-b216-b3b6e8883961"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("59ae05e3-573c-4ea4-9181-2c545236ed1e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5e473f63-b1d7-4530-b64f-26435fb5063c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Name = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6daafb16-1bc3-4f15-8e25-1a982c5bb3c5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7827af95-147f-4803-865a-b418d567da68"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7f6fdb73-3e19-40e7-8feb-6ddbdf2e745a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("93a59d0a-278d-435b-967e-551523f0cb85"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("95551e3a-bad2-4136-923f-c8e5f0f2aec7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("95c77a0f-7f4c-4142-a93f-f688cfd554af"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9aefdda0-e547-4c9b-bf28-431669f8ea2e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9bcbb810-fe3e-4829-8b1c-40219d16b60b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a89b4c06-bba5-4b05-bd6f-c32bc195c32f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ac920d1d-290b-484b-9283-3829337182bc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Dependency = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2e3ddda-0cc3-4cfd-a114-9040882ec58a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2f568a1-51ba-4b6b-a1f1-b82bdec382b5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c018face-b292-455c-a2c0-8f71377fb6cb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c6ecc142-0fbd-48b7-98ae-994fa9b5b814"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ccdd1ae2-263e-4221-9841-4cff1907ee8d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ce0f7d58-b415-43f3-989b-9d8b34754e4b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f302dd07-1abc-409e-aa71-ec9f7ac439aa"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f6436bc9-e307-4001-8f1f-5b37553ab3c6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fa6656dc-3a7a-4701-bc6b-3cd06aaa4483"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SearchData = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5f38c771-10db-456e-ac31-6833f7087b50"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType I2sWhereC2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("92fdb313-0b90-48f6-b054-a4ab38f880ba"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereC2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9f361b97-0b04-496d-ac60-718760c2a4e2"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereC2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b39fdd23-d7dd-473f-9705-df2f29be5ffe"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereC2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f85c2d97-10b9-478d-9b82-2700d95d5cb1"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5490dc63-a8f6-4a86-91ef-fef97a86f119"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9f6538c2-e6dd-4c27-80ed-2748f645cb95"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e97fc754-c736-4359-9662-19dce9429f89"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f29d4a52-9ba5-40f6-ba99-050cbd03e554"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereC2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("12896fc2-c9e9-4a89-b875-0aeb92e298e5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("60680366-4790-4443-a941-b30cd4bd3848"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("86ad371b-0afd-420b-a855-38ebb3f39f38"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereC2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bc6c7fe0-6501-428c-a929-da87a9f4b885"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereC2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("107c212d-cc1c-41b2-9c1d-b40c0102072c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereC2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("51ebb024-c847-4165-b216-b3b6e8883961"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereC2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c018face-b292-455c-a2c0-8f71377fb6cb"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4506a14b-22f1-41fe-972b-40fab7c6dd31"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereC2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6199e5b4-133d-4d0e-9941-207316164ec8"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b6e0fce0-14fc-46e3-995d-1b6e3699ed96"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereC2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef1a0a5e-1794-4478-9d0a-517182355206"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("01d9ff41-d503-421e-93a6-5563e1787543"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI2Many2any = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5ebbc734-23dd-494f-af2d-8e75caaa3e26"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cc4c704c-ab7e-45d4-baa9-b67cfff9448e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("deb9cbd3-386f-4599-802c-be50945b9f1d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6def7988-4bcf-4964-9de6-c6ede41d5e5a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("82f5fb26-c260-41bc-a784-a2d5e35243bd"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cda97972-84c8-48e3-99d8-fd7c99c5dbc9"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d0341bed-2732-4bcb-b1bb-9f9589de5d03"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("38063edc-271a-410d-b857-807a9100c7b5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4a963639-72c3-4e9f-9058-bcfc8fe0bc9e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7a9129c9-7b6d-4bdd-a630-cfd1392549b7"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e08d75a9-9b67-4d20-a476-757f8fb17376"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4a2b2f43-037d-4149-8a1e-401e5df963ba"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7f6fdb73-3e19-40e7-8feb-6ddbdf2e745a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ac920d1d-290b-484b-9283-3829337182bc"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2f568a1-51ba-4b6b-a1f1-b82bdec382b5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0acbea28-f8aa-477c-b296-b8976d9b10a5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("194580f4-e0e3-4b52-b9ba-6020171be4e9"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("39e28141-fd6b-4f49-8884-d5400f6c57ff"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a5761a0e-5c10-407a-bd68-0c4f69d78968"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("23e9c15f-097f-4452-9bac-d7cf2a65134a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("83dc0581-e04a-4f51-a44e-4fef63d44356"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("87499e99-ed77-44c1-89d6-b4f570b6f217"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cb9f21e0-a841-45de-8ba4-991b4ceca616"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("94a2b37d-9431-4496-b992-630cda5b9851"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("98c5f58b-1777-4d9a-8828-37dbf7051510"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b9f2c4c7-6979-40cf-82a2-fa99a5d9e9a4"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bcf4df45-6616-4cdf-8ada-f944f9c7ff1a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("165cc83e-935d-4d0d-aec7-5da155300086"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1d0c57c9-a3d1-4134-bc7d-7bb587d8250f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("50300577-b5fb-4c16-9ac5-41151543f958"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("770eb33c-c8ef-4629-a3a0-20decd92ff62"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1bf2abe0-9273-4fb9-b491-020320f1f8db"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5e473f63-b1d7-4530-b64f-26435fb5063c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a89b4c06-bba5-4b05-bd6f-c32bc195c32f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereDependency = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2e3ddda-0cc3-4cfd-a114-9040882ec58a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c6ecc142-0fbd-48b7-98ae-994fa9b5b814"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0a2895ec-0102-493d-9b94-e12e94b4a403"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2e85d74a-8d13-4bc0-ae4f-42b305e79373"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a51d9d21-40ec-44b9-853d-8c18f54d659d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e386cca6-e738-4c37-8bfc-b23057d7a0be"))).AssociationType;

	}
}