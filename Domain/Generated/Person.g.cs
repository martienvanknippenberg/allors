// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Person : PersonAllors , global::Domain.User, global::Domain.AccessControlledObject, global::Domain.UniquelyIdentifiable, global::Domain.SearchResult, global::Domain.UserInterfaceable, global::Domain.Searchable, global::Domain.Printable
	{
		public Person(Allors.IStrategy allors) : base(allors) {}

		public static Person Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Person) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class PersonAllors : Allors.ObjectBase
	{
		protected PersonAllors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.String LastName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.LastName);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.LastName, value);
			}
		}

		virtual public bool ExistLastName{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.LastName);
			}
		}

		virtual public void RemoveLastName()
		{
			Strategy.RemoveUnitRole(PersonMeta.LastName);
		}



		virtual public global::System.String MiddleName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.MiddleName);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.MiddleName, value);
			}
		}

		virtual public bool ExistMiddleName{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.MiddleName);
			}
		}

		virtual public void RemoveMiddleName()
		{
			Strategy.RemoveUnitRole(PersonMeta.MiddleName);
		}



		virtual public global::System.String FirstName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.FirstName);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.FirstName, value);
			}
		}

		virtual public bool ExistFirstName{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.FirstName);
			}
		}

		virtual public void RemoveFirstName()
		{
			Strategy.RemoveUnitRole(PersonMeta.FirstName);
		}


		virtual public global::Domain.Address MainAddress
		{ 
			get
			{
				return (global::Domain.Address) Strategy.GetCompositeRole(PersonMeta.MainAddress);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.MainAddress ,value);
			}
		}

		virtual public bool ExistMainAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.MainAddress);
			}
		}

		virtual public void RemoveMainAddress()
		{
			Strategy.RemoveCompositeRole(PersonMeta.MainAddress);
		}



		virtual public global::System.String TinyMCEText 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.TinyMCEText);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.TinyMCEText, value);
			}
		}

		virtual public bool ExistTinyMCEText{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.TinyMCEText);
			}
		}

		virtual public void RemoveTinyMCEText()
		{
			Strategy.RemoveUnitRole(PersonMeta.TinyMCEText);
		}



		virtual public global::System.String Text 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.Text);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.Text, value);
			}
		}

		virtual public bool ExistText{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.Text);
			}
		}

		virtual public void RemoveText()
		{
			Strategy.RemoveUnitRole(PersonMeta.Text);
		}



		virtual public global::System.Int32? Age 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(PersonMeta.Age);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.Age, value);
			}
		}

		virtual public bool ExistAge{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.Age);
			}
		}

		virtual public void RemoveAge()
		{
			Strategy.RemoveUnitRole(PersonMeta.Age);
		}



		virtual public global::System.Boolean? IsStudent 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(PersonMeta.IsStudent);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.IsStudent, value);
			}
		}

		virtual public bool ExistIsStudent{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.IsStudent);
			}
		}

		virtual public void RemoveIsStudent()
		{
			Strategy.RemoveUnitRole(PersonMeta.IsStudent);
		}


		virtual public global::Domain.MailboxAddress MailboxAddress
		{ 
			get
			{
				return (global::Domain.MailboxAddress) Strategy.GetCompositeRole(PersonMeta.MailboxAddress);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.MailboxAddress ,value);
			}
		}

		virtual public bool ExistMailboxAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.MailboxAddress);
			}
		}

		virtual public void RemoveMailboxAddress()
		{
			Strategy.RemoveCompositeRole(PersonMeta.MailboxAddress);
		}


		virtual public global::Domain.Gender Gender
		{ 
			get
			{
				return (global::Domain.Gender) Strategy.GetCompositeRole(PersonMeta.Gender);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.Gender ,value);
			}
		}

		virtual public bool ExistGender
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.Gender);
			}
		}

		virtual public void RemoveGender()
		{
			Strategy.RemoveCompositeRole(PersonMeta.Gender);
		}



		virtual public global::System.String FullName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.FullName);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.FullName, value);
			}
		}

		virtual public bool ExistFullName{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.FullName);
			}
		}

		virtual public void RemoveFullName()
		{
			Strategy.RemoveUnitRole(PersonMeta.FullName);
		}



		virtual public global::System.Int32? ShirtSize 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(PersonMeta.ShirtSize);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.ShirtSize, value);
			}
		}

		virtual public bool ExistShirtSize{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.ShirtSize);
			}
		}

		virtual public void RemoveShirtSize()
		{
			Strategy.RemoveUnitRole(PersonMeta.ShirtSize);
		}



		virtual public global::System.String CKEditorText 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.CKEditorText);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.CKEditorText, value);
			}
		}

		virtual public bool ExistCKEditorText{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.CKEditorText);
			}
		}

		virtual public void RemoveCKEditorText()
		{
			Strategy.RemoveUnitRole(PersonMeta.CKEditorText);
		}



		virtual public global::System.Boolean? IsMarried 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(PersonMeta.IsMarried);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.IsMarried, value);
			}
		}

		virtual public bool ExistIsMarried{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.IsMarried);
			}
		}

		virtual public void RemoveIsMarried()
		{
			Strategy.RemoveUnitRole(PersonMeta.IsMarried);
		}



		virtual public global::System.DateTime? BirthDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(PersonMeta.BirthDate);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.BirthDate, value);
			}
		}

		virtual public bool ExistBirthDate{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.BirthDate);
			}
		}

		virtual public void RemoveBirthDate()
		{
			Strategy.RemoveUnitRole(PersonMeta.BirthDate);
		}



		virtual public global::System.Decimal? Weight 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(PersonMeta.Weight);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.Weight, value);
			}
		}

		virtual public bool ExistWeight{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.Weight);
			}
		}

		virtual public void RemoveWeight()
		{
			Strategy.RemoveUnitRole(PersonMeta.Weight);
		}


		virtual public global::Domain.Media Photo
		{ 
			get
			{
				return (global::Domain.Media) Strategy.GetCompositeRole(PersonMeta.Photo);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.Photo ,value);
			}
		}

		virtual public bool ExistPhoto
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.Photo);
			}
		}

		virtual public void RemovePhoto()
		{
			Strategy.RemoveCompositeRole(PersonMeta.Photo);
		}


		virtual public Allors.Extent<global::Domain.Address> Addresses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PersonMeta.Address);
			}
			set
			{
				Strategy.SetCompositeRoles(PersonMeta.Address, value);
			}
		}

		virtual public void AddAddress (global::Domain.Address value)
		{
			Strategy.AddCompositeRole(PersonMeta.Address, value);
		}

		virtual public void RemoveAddress (global::Domain.Address value)
		{
			Strategy.RemoveCompositeRole(PersonMeta.Address,value);
		}

		virtual public bool ExistAddresses
		{
			get
			{
				return Strategy.ExistCompositeRoles(PersonMeta.Address);
			}
		}

		virtual public void RemoveAddresses()
		{
			Strategy.RemoveCompositeRoles(PersonMeta.Address);
		}



		virtual public global::System.Boolean? UserEmailConfirmed 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(PersonMeta.UserEmailConfirmed);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.UserEmailConfirmed, value);
			}
		}

		virtual public bool ExistUserEmailConfirmed{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.UserEmailConfirmed);
			}
		}

		virtual public void RemoveUserEmailConfirmed()
		{
			Strategy.RemoveUnitRole(PersonMeta.UserEmailConfirmed);
		}



		virtual public global::System.String UserName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.UserName);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.UserName, value);
			}
		}

		virtual public bool ExistUserName{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.UserName);
			}
		}

		virtual public void RemoveUserName()
		{
			Strategy.RemoveUnitRole(PersonMeta.UserName);
		}



		virtual public global::System.String UserEmail 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.UserEmail);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.UserEmail, value);
			}
		}

		virtual public bool ExistUserEmail{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.UserEmail);
			}
		}

		virtual public void RemoveUserEmail()
		{
			Strategy.RemoveUnitRole(PersonMeta.UserEmail);
		}



		virtual public global::System.String UserPasswordHash 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.UserPasswordHash);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.UserPasswordHash, value);
			}
		}

		virtual public bool ExistUserPasswordHash{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.UserPasswordHash);
			}
		}

		virtual public void RemoveUserPasswordHash()
		{
			Strategy.RemoveUnitRole(PersonMeta.UserPasswordHash);
		}


		virtual public global::Domain.SecurityToken OwnerSecurityToken
		{ 
			get
			{
				return (global::Domain.SecurityToken) Strategy.GetCompositeRole(PersonMeta.OwnerSecurityToken);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.OwnerSecurityToken ,value);
			}
		}

		virtual public bool ExistOwnerSecurityToken
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.OwnerSecurityToken);
			}
		}

		virtual public void RemoveOwnerSecurityToken()
		{
			Strategy.RemoveCompositeRole(PersonMeta.OwnerSecurityToken);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(PersonMeta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PersonMeta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(PersonMeta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(PersonMeta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(PersonMeta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(PersonMeta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(PersonMeta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PersonMeta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(PersonMeta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(PersonMeta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(PersonMeta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(PersonMeta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(PersonMeta.SecurityToken);
		}


		virtual public global::Domain.Locale Locale
		{ 
			get
			{
				return (global::Domain.Locale) Strategy.GetCompositeRole(PersonMeta.Locale);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.Locale ,value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			Strategy.RemoveCompositeRole(PersonMeta.Locale);
		}



		virtual public global::System.Guid? UniqueId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(PersonMeta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(PersonMeta.UniqueId);
		}


		virtual public global::Domain.SearchData SearchData
		{ 
			get
			{
				return (global::Domain.SearchData) Strategy.GetCompositeRole(PersonMeta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(PersonMeta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(PersonMeta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(PersonMeta.SearchData);
		}



		virtual public global::System.String PrintContent 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PersonMeta.PrintContent);
			}
			set
			{
				Strategy.SetUnitRole(PersonMeta.PrintContent, value);
			}
		}

		virtual public bool ExistPrintContent{
			get
			{
				return Strategy.ExistUnitRole(PersonMeta.PrintContent);
			}
		}

		virtual public void RemovePrintContent()
		{
			Strategy.RemoveUnitRole(PersonMeta.PrintContent);
		}



		virtual public Allors.Extent<global::Domain.Organisation> OrganisationsWhereShareholder
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.OrganisationsWhereShareholder);
			}
		}

		virtual public bool ExistOrganisationsWhereShareholder
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.OrganisationsWhereShareholder);
			}
		}


		virtual public global::Domain.Organisation OrganisationWhereEmployee
		{ 
			get
			{
				return (global::Domain.Organisation) Strategy.GetCompositeAssociation(PersonMeta.OrganisationWhereEmployee);
			}
		} 

		virtual public bool ExistOrganisationWhereEmployee
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.OrganisationWhereEmployee);
			}
		}


		virtual public global::Domain.Organisation OrganisationWhereOwner
		{ 
			get
			{
				return (global::Domain.Organisation) Strategy.GetCompositeAssociation(PersonMeta.OrganisationWhereOwner);
			}
		} 

		virtual public bool ExistOrganisationWhereOwner
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.OrganisationWhereOwner);
			}
		}


		virtual public Allors.Extent<global::Domain.StatefulCompany> StatefulCompaniesWhereEmployee
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.StatefulCompaniesWhereEmployee);
			}
		}

		virtual public bool ExistStatefulCompaniesWhereEmployee
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.StatefulCompaniesWhereEmployee);
			}
		}


		virtual public Allors.Extent<global::Domain.StatefulCompany> StatefulCompaniesWhereManager
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.StatefulCompaniesWhereManager);
			}
		}

		virtual public bool ExistStatefulCompaniesWhereManager
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.StatefulCompaniesWhereManager);
			}
		}


		virtual public global::Domain.BadUI BadUIWherePersonMany
		{ 
			get
			{
				return (global::Domain.BadUI) Strategy.GetCompositeAssociation(PersonMeta.BadUIWherePersonMany);
			}
		} 

		virtual public bool ExistBadUIWherePersonMany
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.BadUIWherePersonMany);
			}
		}


		virtual public Allors.Extent<global::Domain.BadUI> BadUIsWherePersonOne
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.BadUIsWherePersonOne);
			}
		}

		virtual public bool ExistBadUIsWherePersonOne
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.BadUIsWherePersonOne);
			}
		}


		virtual public global::Domain.Singleton SingletonWhereGuest
		{ 
			get
			{
				return (global::Domain.Singleton) Strategy.GetCompositeAssociation(PersonMeta.SingletonWhereGuest);
			}
		} 

		virtual public bool ExistSingletonWhereGuest
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PersonMeta.SingletonWhereGuest);
			}
		}


		virtual public Allors.Extent<global::Domain.UserGroup> UserGroupsWhereMember
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.UserGroupsWhereMember);
			}
		}

		virtual public bool ExistUserGroupsWhereMember
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.UserGroupsWhereMember);
			}
		}


		virtual public Allors.Extent<global::Domain.Login> LoginsWhereUser
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.LoginsWhereUser);
			}
		}

		virtual public bool ExistLoginsWhereUser
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.LoginsWhereUser);
			}
		}


		virtual public Allors.Extent<global::Domain.AccessControl> AccessControlsWhereSubject
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.AccessControlsWhereSubject);
			}
		}

		virtual public bool ExistAccessControlsWhereSubject
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.AccessControlsWhereSubject);
			}
		}


		virtual public Allors.Extent<global::Domain.PrintQueue> PrintQueuesWherePrintable
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PersonMeta.PrintQueuesWherePrintable);
			}
		}

		virtual public bool ExistPrintQueuesWherePrintable
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PersonMeta.PrintQueuesWherePrintable);
			}
		}

	}

	public static class PersonMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c799ca62-a554-467d-9aa2-1663293bb37f") );

		public static readonly global::Allors.Meta.RoleType LastName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8a3e4664-bb40-4208-8e90-a1b5be323f27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType MiddleName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("eb18bb28-da9c-47b4-a091-2f8f2303dcb6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType FirstName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ed4b710a-fe24-4143-bb96-ed1bd9beae1a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType MainAddress = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0375a3d3-1a1b-4cbb-b735-1fe508bcc672"))).RoleType;
		public static readonly global::Allors.Meta.RoleType TinyMCEText = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("15de4e58-c5ef-4ebb-9bf6-5ab06a02c5a4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Text = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1b057406-3343-426b-ab5b-ceb93ba02446"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Age = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2a25125f-3545-4209-afc6-523eb0d8851e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType IsStudent = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("54f11f06-8d3f-4d58-bcdc-d40e6820fdad"))).RoleType;
		public static readonly global::Allors.Meta.RoleType MailboxAddress = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6340de2a-c3b1-4893-a7f3-cb924b82fa0e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Gender = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("654f6c84-62f2-4c0a-9d68-532ed3f39447"))).RoleType;
		public static readonly global::Allors.Meta.RoleType FullName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("688ebeb9-8a53-4e8d-b284-3faa0a01ef7c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType ShirtSize = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6b626ba5-0c45-48c7-8b6b-5ea85e002d90"))).RoleType;
		public static readonly global::Allors.Meta.RoleType CKEditorText = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6cc34453-ac7a-4004-8380-033f92324e99"))).RoleType;
		public static readonly global::Allors.Meta.RoleType IsMarried = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a8a3b4b8-c4f2-4054-ab2a-2eac6fd058e4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType BirthDate = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("adf83a86-878d-4148-a9fc-152f56697136"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Weight = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("afc32e62-c310-421b-8c1d-6f2b0bb88b54"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Photo = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b3ddd2df-8a5a-4747-bd4f-1f1eb37386b3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Address = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e9e7c874-4d94-42ff-a4c9-414d05ff9533"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UserEmailConfirmed = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0b3b650b-fcd4-4475-b5c4-e2ee4f39b0be"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UserName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5e8ab257-1a1c-4448-aacc-71dbaaba525b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UserEmail = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c1ae3652-5854-4b68-9890-a954067767fc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UserPasswordHash = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ea0c7596-c0b8-4984-bc25-cb4b4857954e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType OwnerSecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5fb15e8b-011c-46f7-83dd-485d4cc4f9f2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Locale = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8c005a4e-5ffe-45fd-b279-778e274f4d83"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UniqueId = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e1842d87-8157-40e7-b06e-4375f311f2c3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SearchData = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5f38c771-10db-456e-ac31-6833f7087b50"))).RoleType;
		public static readonly global::Allors.Meta.RoleType PrintContent = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c75d4e4c-d47c-4757-bcb0-25b6daedec9e"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType OrganisationsWhereShareholder = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("15f33fa4-c878-45a0-b40c-c5214bce350b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType OrganisationWhereEmployee = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("49b96f79-c33d-4847-8c64-d50a6adb4985"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType OrganisationWhereOwner = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("845ff004-516f-4ad5-9870-3d0e966a9f7d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType StatefulCompaniesWhereEmployee = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6c848eeb-7b42-45ea-81ac-fa983e1e0fa9"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType StatefulCompaniesWhereManager = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9940e8ed-189e-42c6-b0d1-7c01920b9fac"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType BadUIWherePersonMany = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8a999086-ca90-40a1-90ae-475d231bb1eb"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType BadUIsWherePersonOne = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a4db0d75-3dff-45ac-9c1d-623bca046b4a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType SingletonWhereGuest = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f16652b0-b712-43d7-8d4e-34a22487514d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType UserGroupsWhereMember = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("585bb5cf-9ba4-4865-9027-3667185abc4f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType LoginsWhereUser = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c2d950ad-39d3-40f1-8817-11a026e9890b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType AccessControlsWhereSubject = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("37dd1e27-ba75-404c-9410-c6399d28317c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType PrintQueuesWherePrintable = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("679156a1-f683-4772-b724-54b318eb3cb3"))).AssociationType;

	}
}