// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Place : PlaceAllors , global::Domain.UserInterfaceable, global::Domain.Searchable
	{
		public Place(Allors.IStrategy allors) : base(allors) {}

		public static Place Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Place) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class PlaceAllors : Allors.ObjectBase
	{
		protected PlaceAllors(Allors.IStrategy allors) : base(allors){}


		virtual public global::Domain.Country Country
		{ 
			get
			{
				return (global::Domain.Country) Strategy.GetCompositeRole(PlaceMeta.Country);
			}
			set
			{
				Strategy.SetCompositeRole(PlaceMeta.Country ,value);
			}
		}

		virtual public bool ExistCountry
		{
			get
			{
				return Strategy.ExistCompositeRole(PlaceMeta.Country);
			}
		}

		virtual public void RemoveCountry()
		{
			Strategy.RemoveCompositeRole(PlaceMeta.Country);
		}



		virtual public global::System.String City 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PlaceMeta.City);
			}
			set
			{
				Strategy.SetUnitRole(PlaceMeta.City, value);
			}
		}

		virtual public bool ExistCity{
			get
			{
				return Strategy.ExistUnitRole(PlaceMeta.City);
			}
		}

		virtual public void RemoveCity()
		{
			Strategy.RemoveUnitRole(PlaceMeta.City);
		}



		virtual public global::System.String PostalCode 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PlaceMeta.PostalCode);
			}
			set
			{
				Strategy.SetUnitRole(PlaceMeta.PostalCode, value);
			}
		}

		virtual public bool ExistPostalCode{
			get
			{
				return Strategy.ExistUnitRole(PlaceMeta.PostalCode);
			}
		}

		virtual public void RemovePostalCode()
		{
			Strategy.RemoveUnitRole(PlaceMeta.PostalCode);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PlaceMeta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(PlaceMeta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(PlaceMeta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(PlaceMeta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PlaceMeta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(PlaceMeta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(PlaceMeta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(PlaceMeta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(PlaceMeta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(PlaceMeta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PlaceMeta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(PlaceMeta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(PlaceMeta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(PlaceMeta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(PlaceMeta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(PlaceMeta.SecurityToken);
		}


		virtual public global::Domain.SearchData SearchData
		{ 
			get
			{
				return (global::Domain.SearchData) Strategy.GetCompositeRole(PlaceMeta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(PlaceMeta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(PlaceMeta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(PlaceMeta.SearchData);
		}



		virtual public Allors.Extent<global::Domain.Address> AddressesWherePlace
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(PlaceMeta.AddressesWherePlace);
			}
		}

		virtual public bool ExistAddressesWherePlace
		{
			get
			{
				return Strategy.ExistCompositeAssociations(PlaceMeta.AddressesWherePlace);
			}
		}

	}

	public static class PlaceMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("268f63d2-17da-4f29-b0d0-76db611598c6") );

		public static readonly global::Allors.Meta.RoleType Country = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1bf1cc1e-75bf-4a3f-87bd-a2fae2697855"))).RoleType;
		public static readonly global::Allors.Meta.RoleType City = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d029f486-4bb8-43a1-8356-98b9bee10de4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType PostalCode = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d80d7c6a-138a-43dd-9748-8ffb89b1dabb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SearchData = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5f38c771-10db-456e-ac31-6833f7087b50"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType AddressesWherePlace = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("36e7d935-a9c7-484d-8551-9bdc5bdeab68"))).AssociationType;

	}
}