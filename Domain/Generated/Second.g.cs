// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Second : SecondAllors 
	{
		public Second(Allors.IStrategy allors) : base(allors) {}

		public static Second Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Second) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class SecondAllors : Allors.ObjectBase
	{
		protected SecondAllors(Allors.IStrategy allors) : base(allors){}


		virtual public global::Domain.Third Third
		{ 
			get
			{
				return (global::Domain.Third) Strategy.GetCompositeRole(SecondMeta.Third);
			}
			set
			{
				Strategy.SetCompositeRole(SecondMeta.Third ,value);
			}
		}

		virtual public bool ExistThird
		{
			get
			{
				return Strategy.ExistCompositeRole(SecondMeta.Third);
			}
		}

		virtual public void RemoveThird()
		{
			Strategy.RemoveCompositeRole(SecondMeta.Third);
		}



		virtual public global::System.Boolean? IsDerived 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(SecondMeta.IsDerived);
			}
			set
			{
				Strategy.SetUnitRole(SecondMeta.IsDerived, value);
			}
		}

		virtual public bool ExistIsDerived{
			get
			{
				return Strategy.ExistUnitRole(SecondMeta.IsDerived);
			}
		}

		virtual public void RemoveIsDerived()
		{
			Strategy.RemoveUnitRole(SecondMeta.IsDerived);
		}



		virtual public global::Domain.First FirstWhereSecond
		{ 
			get
			{
				return (global::Domain.First) Strategy.GetCompositeAssociation(SecondMeta.FirstWhereSecond);
			}
		} 

		virtual public bool ExistFirstWhereSecond
		{
			get
			{
				return Strategy.ExistCompositeAssociation(SecondMeta.FirstWhereSecond);
			}
		}

	}

	public static class SecondMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c1f169a1-553b-4a24-aba7-01e0b7102fe5") );

		public static readonly global::Allors.Meta.RoleType Third = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4f0eba0d-09b4-4bbc-8e42-15de94921ab5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType IsDerived = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8a7b7af9-f421-4e96-a1a7-04d4c4bdd1d7"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType FirstWhereSecond = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("24886999-11f0-408f-b094-14b36ac4129b"))).AssociationType;

	}
}