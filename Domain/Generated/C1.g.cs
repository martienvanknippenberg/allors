// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class C1 : C1Allors , global::Domain.I1
	{
		public C1(Allors.IStrategy allors) : base(allors) {}

		public static C1 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C1) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class C1Allors : Allors.ObjectBase
	{
		protected C1Allors(Allors.IStrategy allors) : base(allors){}


		virtual public global::Domain.I1 C1I1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.C1I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I1One2One ,value);
			}
		}

		virtual public bool ExistC1I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I1One2One);
			}
		}

		virtual public void RemoveC1I1One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1One2One);
		}



		virtual public global::System.String C1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.C1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsString, value);
			}
		}

		virtual public bool ExistC1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsString);
			}
		}

		virtual public void RemoveC1AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsString);
		}


		virtual public global::Domain.C2 C1C2Many2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.C1C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C2Many2One ,value);
			}
		}

		virtual public bool ExistC1C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C2Many2One);
			}
		}

		virtual public void RemoveC1C2Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2Many2One);
		}


		virtual public global::Domain.I2 C1I2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.C1I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I2One2One ,value);
			}
		}

		virtual public bool ExistC1I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I2One2One);
			}
		}

		virtual public void RemoveC1I2One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2One2One);
		}


		virtual public global::Domain.C1 C1C1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.C1C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C1One2One ,value);
			}
		}

		virtual public bool ExistC1C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C1One2One);
			}
		}

		virtual public void RemoveC1C1One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1One2One);
		}


		virtual public global::Domain.I1 C1I1Many2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.C1I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I1Many2One ,value);
			}
		}

		virtual public bool ExistC1I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I1Many2One);
			}
		}

		virtual public void RemoveC1I1Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1Many2One);
		}


		virtual public Allors.Extent<global::Domain.I1> C1I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I1Many2Many, value);
			}
		}

		virtual public void AddC1I1Many2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I1Many2Many, value);
		}

		virtual public void RemoveC1I1Many2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1Many2Many,value);
		}

		virtual public bool ExistC1I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I1Many2Many);
			}
		}

		virtual public void RemoveC1I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I1Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I2> C1I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I2One2Many, value);
			}
		}

		virtual public void AddC1I2One2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I2One2Many, value);
		}

		virtual public void RemoveC1I2One2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2One2Many,value);
		}

		virtual public bool ExistC1I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I2One2Many);
			}
		}

		virtual public void RemoveC1I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I2One2Many);
		}



		virtual public global::System.Decimal? C1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.C1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsDecimal, value);
			}
		}

		virtual public bool ExistC1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsDecimal);
			}
		}

		virtual public void RemoveC1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsDecimal);
		}


		virtual public Allors.Extent<global::Domain.C1> C1C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C1Many2Many, value);
			}
		}

		virtual public void AddC1C1Many2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C1Many2Many, value);
		}

		virtual public void RemoveC1C1Many2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1Many2Many,value);
		}

		virtual public bool ExistC1C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C1Many2Many);
			}
		}

		virtual public void RemoveC1C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C1Many2Many);
		}



		virtual public global::System.Int64? C1AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.C1AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsLong, value);
			}
		}

		virtual public bool ExistC1AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsLong);
			}
		}

		virtual public void RemoveC1AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsLong);
		}


		virtual public Allors.Extent<global::Domain.I12> C1I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I12Many2Many, value);
			}
		}

		virtual public void AddC1I12Many2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I12Many2Many, value);
		}

		virtual public void RemoveC1I12Many2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12Many2Many,value);
		}

		virtual public bool ExistC1I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I12Many2Many);
			}
		}

		virtual public void RemoveC1I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I12Many2Many);
		}



		virtual public global::System.Byte[] C1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C1Meta.C1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsBinary, value);
			}
		}

		virtual public bool ExistC1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsBinary);
			}
		}

		virtual public void RemoveC1AllorsBinary()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsBinary);
		}


		virtual public Allors.Extent<global::Domain.I12> C1I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I12One2Many, value);
			}
		}

		virtual public void AddC1I12One2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I12One2Many, value);
		}

		virtual public void RemoveC1I12One2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12One2Many,value);
		}

		virtual public bool ExistC1I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I12One2Many);
			}
		}

		virtual public void RemoveC1I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I12One2Many);
		}


		virtual public Allors.Extent<global::Domain.C2> C1C2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C2One2Many, value);
			}
		}

		virtual public void AddC1C2One2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C2One2Many, value);
		}

		virtual public void RemoveC1C2One2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2One2Many,value);
		}

		virtual public bool ExistC1C2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C2One2Many);
			}
		}

		virtual public void RemoveC1C2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C2One2Many);
		}


		virtual public Allors.Extent<global::Domain.C1> C1C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C1One2Many, value);
			}
		}

		virtual public void AddC1C1One2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C1One2Many, value);
		}

		virtual public void RemoveC1C1One2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1One2Many,value);
		}

		virtual public bool ExistC1C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C1One2Many);
			}
		}

		virtual public void RemoveC1C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C1One2Many);
		}



		virtual public global::System.String AllorsStringMax 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.AllorsStringMax);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.AllorsStringMax, value);
			}
		}

		virtual public bool ExistAllorsStringMax{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.AllorsStringMax);
			}
		}

		virtual public void RemoveAllorsStringMax()
		{
			Strategy.RemoveUnitRole(C1Meta.AllorsStringMax);
		}


		virtual public global::Domain.C1 C1C1Many2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.C1C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C1Many2One ,value);
			}
		}

		virtual public bool ExistC1C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C1Many2One);
			}
		}

		virtual public void RemoveC1C1Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C1Many2One);
		}



		virtual public global::System.Boolean? C1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.C1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsBoolean, value);
			}
		}

		virtual public bool ExistC1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsBoolean);
			}
		}

		virtual public void RemoveC1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsBoolean);
		}


		virtual public global::Domain.I12 C1I12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.C1I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I12One2One ,value);
			}
		}

		virtual public bool ExistC1I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I12One2One);
			}
		}

		virtual public void RemoveC1I12One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12One2One);
		}


		virtual public global::Domain.I12 C1I12Many2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.C1I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I12Many2One ,value);
			}
		}

		virtual public bool ExistC1I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I12Many2One);
			}
		}

		virtual public void RemoveC1I12Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I12Many2One);
		}


		virtual public Allors.Extent<global::Domain.I2> C1I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I2Many2Many, value);
			}
		}

		virtual public void AddC1I2Many2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I2Many2Many, value);
		}

		virtual public void RemoveC1I2Many2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2Many2Many,value);
		}

		virtual public bool ExistC1I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I2Many2Many);
			}
		}

		virtual public void RemoveC1I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I2Many2Many);
		}



		virtual public global::System.Guid? C1AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C1Meta.C1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsUnique, value);
			}
		}

		virtual public bool ExistC1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsUnique);
			}
		}

		virtual public void RemoveC1AllorsUnique()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsUnique);
		}


		virtual public global::Domain.I2 C1I2Many2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.C1I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1I2Many2One ,value);
			}
		}

		virtual public bool ExistC1I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1I2Many2One);
			}
		}

		virtual public void RemoveC1I2Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I2Many2One);
		}


		virtual public Allors.Extent<global::Domain.I1> C1I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1I1One2Many, value);
			}
		}

		virtual public void AddC1I1One2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1I1One2Many, value);
		}

		virtual public void RemoveC1I1One2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1I1One2Many,value);
		}

		virtual public bool ExistC1I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1I1One2Many);
			}
		}

		virtual public void RemoveC1I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1I1One2Many);
		}


		virtual public global::Domain.C2 C1C2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.C1C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.C1C2One2One ,value);
			}
		}

		virtual public bool ExistC1C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.C1C2One2One);
			}
		}

		virtual public void RemoveC1C2One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2One2One);
		}



		virtual public global::System.DateTime? C1AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.C1AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsDateTime, value);
			}
		}

		virtual public bool ExistC1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsDateTime);
			}
		}

		virtual public void RemoveC1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsDateTime);
		}



		virtual public global::System.Double? C1AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.C1AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsDouble, value);
			}
		}

		virtual public bool ExistC1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsDouble);
			}
		}

		virtual public void RemoveC1AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsDouble);
		}


		virtual public Allors.Extent<global::Domain.C2> C1C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.C1C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.C1C2Many2Many, value);
			}
		}

		virtual public void AddC1C2Many2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.C1C2Many2Many, value);
		}

		virtual public void RemoveC1C2Many2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.C1C2Many2Many,value);
		}

		virtual public bool ExistC1C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.C1C2Many2Many);
			}
		}

		virtual public void RemoveC1C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.C1C2Many2Many);
		}



		virtual public global::System.Int32? C1AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.C1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.C1AllorsInteger, value);
			}
		}

		virtual public bool ExistC1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.C1AllorsInteger);
			}
		}

		virtual public void RemoveC1AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.C1AllorsInteger);
		}


		virtual public global::Domain.I1 I1I1Many2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.I1I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I1Many2One ,value);
			}
		}

		virtual public bool ExistI1I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I1Many2One);
			}
		}

		virtual public void RemoveI1I1Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1Many2One);
		}


		virtual public Allors.Extent<global::Domain.I12> I1I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I12Many2Many, value);
			}
		}

		virtual public void AddI1I12Many2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I12Many2Many, value);
		}

		virtual public void RemoveI1I12Many2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12Many2Many,value);
		}

		virtual public bool ExistI1I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I12Many2Many);
			}
		}

		virtual public void RemoveI1I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I12Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I2> I1I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I2Many2Many, value);
			}
		}

		virtual public void AddI1I2Many2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I2Many2Many, value);
		}

		virtual public void RemoveI1I2Many2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2Many2Many,value);
		}

		virtual public bool ExistI1I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I2Many2Many);
			}
		}

		virtual public void RemoveI1I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I2Many2Many);
		}


		virtual public global::Domain.I2 I1I2Many2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.I1I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I2Many2One ,value);
			}
		}

		virtual public bool ExistI1I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I2Many2One);
			}
		}

		virtual public void RemoveI1I2Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2Many2One);
		}



		virtual public global::System.String I1AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.I1AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsString, value);
			}
		}

		virtual public bool ExistI1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsString);
			}
		}

		virtual public void RemoveI1AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsString);
		}


		virtual public global::Domain.I12 I1I12Many2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.I1I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I12Many2One ,value);
			}
		}

		virtual public bool ExistI1I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I12Many2One);
			}
		}

		virtual public void RemoveI1I12Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12Many2One);
		}


		virtual public Allors.Extent<global::Domain.I2> I1I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I2One2Many, value);
			}
		}

		virtual public void AddI1I2One2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I2One2Many, value);
		}

		virtual public void RemoveI1I2One2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2One2Many,value);
		}

		virtual public bool ExistI1I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I2One2Many);
			}
		}

		virtual public void RemoveI1I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I2One2Many);
		}


		virtual public Allors.Extent<global::Domain.C2> I1C2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C2One2Many, value);
			}
		}

		virtual public void AddI1C2One2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C2One2Many, value);
		}

		virtual public void RemoveI1C2One2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2One2Many,value);
		}

		virtual public bool ExistI1C2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C2One2Many);
			}
		}

		virtual public void RemoveI1C2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C2One2Many);
		}



		virtual public global::System.DateTime? I1AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I1AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsDateTime, value);
			}
		}

		virtual public bool ExistI1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsDateTime);
			}
		}

		virtual public void RemoveI1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsDateTime);
		}


		virtual public global::Domain.C1 I1C1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.I1C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C1One2One ,value);
			}
		}

		virtual public bool ExistI1C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C1One2One);
			}
		}

		virtual public void RemoveI1C1One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1One2One);
		}



		virtual public global::System.Int32? I1AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I1AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsInteger, value);
			}
		}

		virtual public bool ExistI1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsInteger);
			}
		}

		virtual public void RemoveI1AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.C2> I1C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C2Many2Many, value);
			}
		}

		virtual public void AddI1C2Many2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C2Many2Many, value);
		}

		virtual public void RemoveI1C2Many2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2Many2Many,value);
		}

		virtual public bool ExistI1C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C2Many2Many);
			}
		}

		virtual public void RemoveI1C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C2Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I1> I1I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I1One2Many, value);
			}
		}

		virtual public void AddI1I1One2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I1One2Many, value);
		}

		virtual public void RemoveI1I1One2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1One2Many,value);
		}

		virtual public bool ExistI1I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I1One2Many);
			}
		}

		virtual public void RemoveI1I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I1One2Many);
		}


		virtual public Allors.Extent<global::Domain.I1> I1I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I1Many2Many, value);
			}
		}

		virtual public void AddI1I1Many2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I1Many2Many, value);
		}

		virtual public void RemoveI1I1Many2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1Many2Many,value);
		}

		virtual public bool ExistI1I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I1Many2Many);
			}
		}

		virtual public void RemoveI1I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I1Many2Many);
		}



		virtual public global::System.Boolean? I1AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.I1AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsBoolean, value);
			}
		}

		virtual public bool ExistI1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsBoolean);
			}
		}

		virtual public void RemoveI1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsBoolean);
		}



		virtual public global::System.Int64? I1AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I1AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsLong, value);
			}
		}

		virtual public bool ExistI1AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsLong);
			}
		}

		virtual public void RemoveI1AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsLong);
		}



		virtual public global::System.Decimal? I1AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I1AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsDecimal, value);
			}
		}

		virtual public bool ExistI1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsDecimal);
			}
		}

		virtual public void RemoveI1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsDecimal);
		}


		virtual public global::Domain.I12 I1I12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.I1I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I12One2One ,value);
			}
		}

		virtual public bool ExistI1I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I12One2One);
			}
		}

		virtual public void RemoveI1I12One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12One2One);
		}


		virtual public global::Domain.I2 I1I2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.I1I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I2One2One ,value);
			}
		}

		virtual public bool ExistI1I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I2One2One);
			}
		}

		virtual public void RemoveI1I2One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I2One2One);
		}


		virtual public global::Domain.C2 I1C2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I1C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C2One2One ,value);
			}
		}

		virtual public bool ExistI1C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C2One2One);
			}
		}

		virtual public void RemoveI1C2One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2One2One);
		}


		virtual public Allors.Extent<global::Domain.C1> I1C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C1One2Many, value);
			}
		}

		virtual public void AddI1C1One2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C1One2Many, value);
		}

		virtual public void RemoveI1C1One2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1One2Many,value);
		}

		virtual public bool ExistI1C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C1One2Many);
			}
		}

		virtual public void RemoveI1C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C1One2Many);
		}



		virtual public global::System.Byte[] I1AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C1Meta.I1AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsBinary, value);
			}
		}

		virtual public bool ExistI1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsBinary);
			}
		}

		virtual public void RemoveI1AllorsBinary()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsBinary);
		}


		virtual public Allors.Extent<global::Domain.C1> I1C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1C1Many2Many, value);
			}
		}

		virtual public void AddI1C1Many2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1C1Many2Many, value);
		}

		virtual public void RemoveI1C1Many2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1Many2Many,value);
		}

		virtual public bool ExistI1C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1C1Many2Many);
			}
		}

		virtual public void RemoveI1C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1C1Many2Many);
		}



		virtual public global::System.Double? I1AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I1AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsDouble, value);
			}
		}

		virtual public bool ExistI1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsDouble);
			}
		}

		virtual public void RemoveI1AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsDouble);
		}


		virtual public global::Domain.I1 I1I1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.I1I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1I1One2One ,value);
			}
		}

		virtual public bool ExistI1I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1I1One2One);
			}
		}

		virtual public void RemoveI1I1One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I1One2One);
		}


		virtual public global::Domain.C1 I1C1Many2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.I1C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C1Many2One ,value);
			}
		}

		virtual public bool ExistI1C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C1Many2One);
			}
		}

		virtual public void RemoveI1C1Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C1Many2One);
		}


		virtual public Allors.Extent<global::Domain.I12> I1I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I1I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I1I12One2Many, value);
			}
		}

		virtual public void AddI1I12One2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.I1I12One2Many, value);
		}

		virtual public void RemoveI1I12One2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I1I12One2Many,value);
		}

		virtual public bool ExistI1I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I1I12One2Many);
			}
		}

		virtual public void RemoveI1I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I1I12One2Many);
		}


		virtual public global::Domain.C2 I1C2Many2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I1C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I1C2Many2One ,value);
			}
		}

		virtual public bool ExistI1C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I1C2Many2One);
			}
		}

		virtual public void RemoveI1C2Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I1C2Many2One);
		}



		virtual public global::System.Guid? I1AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C1Meta.I1AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I1AllorsUnique, value);
			}
		}

		virtual public bool ExistI1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I1AllorsUnique);
			}
		}

		virtual public void RemoveI1AllorsUnique()
		{
			Strategy.RemoveUnitRole(C1Meta.I1AllorsUnique);
		}



		virtual public global::System.Byte[] I12AllorsBinary 
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(C1Meta.I12AllorsBinary);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsBinary, value);
			}
		}

		virtual public bool ExistI12AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsBinary);
			}
		}

		virtual public void RemoveI12AllorsBinary()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsBinary);
		}


		virtual public global::Domain.C2 I12C2One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I12C2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12C2One2One ,value);
			}
		}

		virtual public bool ExistI12C2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12C2One2One);
			}
		}

		virtual public void RemoveI12C2One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C2One2One);
		}



		virtual public global::System.Double? I12AllorsDouble 
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(C1Meta.I12AllorsDouble);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsDouble, value);
			}
		}

		virtual public bool ExistI12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsDouble);
			}
		}

		virtual public void RemoveI12AllorsDouble()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsDouble);
		}


		virtual public global::Domain.I1 I12I1Many2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.I12I1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I1Many2One ,value);
			}
		}

		virtual public bool ExistI12I1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I1Many2One);
			}
		}

		virtual public void RemoveI12I1Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I1Many2One);
		}



		virtual public global::System.String I12AllorsString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.I12AllorsString);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsString, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsString);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsString);
		}


		virtual public Allors.Extent<global::Domain.I12> I12I12Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I12Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I12Many2Many, value);
			}
		}

		virtual public void AddI12I12Many2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I12Many2Many, value);
		}

		virtual public void RemoveI12I12Many2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I12Many2Many,value);
		}

		virtual public bool ExistI12I12Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I12Many2Many);
			}
		}

		virtual public void RemoveI12I12Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I12Many2Many);
		}



		virtual public global::System.Decimal? I12AllorsDecimal 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(C1Meta.I12AllorsDecimal);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsDecimal, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsDecimal);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsDecimal);
		}


		virtual public Allors.Extent<global::Domain.I2> I12I2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I2Many2Many, value);
			}
		}

		virtual public void AddI12I2Many2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I2Many2Many, value);
		}

		virtual public void RemoveI12I2Many2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I2Many2Many,value);
		}

		virtual public bool ExistI12I2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I2Many2Many);
			}
		}

		virtual public void RemoveI12I2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I2Many2Many);
		}


		virtual public Allors.Extent<global::Domain.C2> I12C2Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12C2Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12C2Many2Many, value);
			}
		}

		virtual public void AddI12C2Many2Many (global::Domain.C2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12C2Many2Many, value);
		}

		virtual public void RemoveI12C2Many2Many (global::Domain.C2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C2Many2Many,value);
		}

		virtual public bool ExistI12C2Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12C2Many2Many);
			}
		}

		virtual public void RemoveI12C2Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12C2Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I1> I12I1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I1Many2Many, value);
			}
		}

		virtual public void AddI12I1Many2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I1Many2Many, value);
		}

		virtual public void RemoveI12I1Many2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I1Many2Many,value);
		}

		virtual public bool ExistI12I1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I1Many2Many);
			}
		}

		virtual public void RemoveI12I1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I1Many2Many);
		}


		virtual public Allors.Extent<global::Domain.I12> I12I12One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I12One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I12One2Many, value);
			}
		}

		virtual public void AddI12I12One2Many (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I12One2Many, value);
		}

		virtual public void RemoveI12I12One2Many (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I12One2Many,value);
		}

		virtual public bool ExistI12I12One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I12One2Many);
			}
		}

		virtual public void RemoveI12I12One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I12One2Many);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.Name);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(C1Meta.Name);
		}


		virtual public Allors.Extent<global::Domain.C1> I12C1Many2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12C1Many2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12C1Many2Many, value);
			}
		}

		virtual public void AddI12C1Many2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12C1Many2Many, value);
		}

		virtual public void RemoveI12C1Many2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C1Many2Many,value);
		}

		virtual public bool ExistI12C1Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12C1Many2Many);
			}
		}

		virtual public void RemoveI12C1Many2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12C1Many2Many);
		}


		virtual public global::Domain.I2 I12I2Many2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.I12I2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I2Many2One ,value);
			}
		}

		virtual public bool ExistI12I2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I2Many2One);
			}
		}

		virtual public void RemoveI12I2Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I2Many2One);
		}



		virtual public global::System.Guid? I12AllorsUnique 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(C1Meta.I12AllorsUnique);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsUnique, value);
			}
		}

		virtual public bool ExistI12AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsUnique);
			}
		}

		virtual public void RemoveI12AllorsUnique()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsUnique);
		}



		virtual public global::System.Int32? I12AllorsInteger 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(C1Meta.I12AllorsInteger);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsInteger, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsInteger);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsInteger);
		}


		virtual public Allors.Extent<global::Domain.I1> I12I1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I1One2Many, value);
			}
		}

		virtual public void AddI12I1One2Many (global::Domain.I1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I1One2Many, value);
		}

		virtual public void RemoveI12I1One2Many (global::Domain.I1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I1One2Many,value);
		}

		virtual public bool ExistI12I1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I1One2Many);
			}
		}

		virtual public void RemoveI12I1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I1One2Many);
		}


		virtual public global::Domain.C1 I12C1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.I12C1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12C1One2One ,value);
			}
		}

		virtual public bool ExistI12C1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12C1One2One);
			}
		}

		virtual public void RemoveI12C1One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C1One2One);
		}



		virtual public global::System.Int64? I12AllorsLong 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(C1Meta.I12AllorsLong);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsLong, value);
			}
		}

		virtual public bool ExistI12AllorsLong{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsLong);
			}
		}

		virtual public void RemoveI12AllorsLong()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsLong);
		}


		virtual public global::Domain.I12 I12I12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.I12I12One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I12One2One ,value);
			}
		}

		virtual public bool ExistI12I12One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I12One2One);
			}
		}

		virtual public void RemoveI12I12One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I12One2One);
		}


		virtual public global::Domain.I2 I12I2One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeRole(C1Meta.I12I2One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I2One2One ,value);
			}
		}

		virtual public bool ExistI12I2One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I2One2One);
			}
		}

		virtual public void RemoveI12I2One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I2One2One);
		}


		virtual public Allors.Extent<global::Domain.I12> Dependencies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.Dependency);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.Dependency, value);
			}
		}

		virtual public void AddDependency (global::Domain.I12 value)
		{
			Strategy.AddCompositeRole(C1Meta.Dependency, value);
		}

		virtual public void RemoveDependency (global::Domain.I12 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.Dependency,value);
		}

		virtual public bool ExistDependencies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.Dependency);
			}
		}

		virtual public void RemoveDependencies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.Dependency);
		}


		virtual public Allors.Extent<global::Domain.I2> I12I2One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12I2One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12I2One2Many, value);
			}
		}

		virtual public void AddI12I2One2Many (global::Domain.I2 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12I2One2Many, value);
		}

		virtual public void RemoveI12I2One2Many (global::Domain.I2 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I2One2Many,value);
		}

		virtual public bool ExistI12I2One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12I2One2Many);
			}
		}

		virtual public void RemoveI12I2One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12I2One2Many);
		}


		virtual public global::Domain.C2 I12C2Many2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeRole(C1Meta.I12C2Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12C2Many2One ,value);
			}
		}

		virtual public bool ExistI12C2Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12C2Many2One);
			}
		}

		virtual public void RemoveI12C2Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C2Many2One);
		}


		virtual public global::Domain.I12 I12I12Many2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeRole(C1Meta.I12I12Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I12Many2One ,value);
			}
		}

		virtual public bool ExistI12I12Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I12Many2One);
			}
		}

		virtual public void RemoveI12I12Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I12Many2One);
		}



		virtual public global::System.Boolean? I12AllorsBoolean 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(C1Meta.I12AllorsBoolean);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsBoolean, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsBoolean);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsBoolean);
		}


		virtual public global::Domain.I1 I12I1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeRole(C1Meta.I12I1One2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12I1One2One ,value);
			}
		}

		virtual public bool ExistI12I1One2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12I1One2One);
			}
		}

		virtual public void RemoveI12I1One2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12I1One2One);
		}


		virtual public Allors.Extent<global::Domain.C1> I12C1One2Manies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.I12C1One2Many);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.I12C1One2Many, value);
			}
		}

		virtual public void AddI12C1One2Many (global::Domain.C1 value)
		{
			Strategy.AddCompositeRole(C1Meta.I12C1One2Many, value);
		}

		virtual public void RemoveI12C1One2Many (global::Domain.C1 value)
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C1One2Many,value);
		}

		virtual public bool ExistI12C1One2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.I12C1One2Many);
			}
		}

		virtual public void RemoveI12C1One2Manies()
		{
			Strategy.RemoveCompositeRoles(C1Meta.I12C1One2Many);
		}


		virtual public global::Domain.C1 I12C1Many2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeRole(C1Meta.I12C1Many2One);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.I12C1Many2One ,value);
			}
		}

		virtual public bool ExistI12C1Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.I12C1Many2One);
			}
		}

		virtual public void RemoveI12C1Many2One()
		{
			Strategy.RemoveCompositeRole(C1Meta.I12C1Many2One);
		}



		virtual public global::System.DateTime? I12AllorsDateTime 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(C1Meta.I12AllorsDateTime);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.I12AllorsDateTime, value);
			}
		}

		virtual public bool ExistI12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.I12AllorsDateTime);
			}
		}

		virtual public void RemoveI12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(C1Meta.I12AllorsDateTime);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(C1Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(C1Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(C1Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(C1Meta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(C1Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(C1Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(C1Meta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(C1Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(C1Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(C1Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(C1Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(C1Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(C1Meta.SecurityToken);
		}


		virtual public global::Domain.SearchData SearchData
		{ 
			get
			{
				return (global::Domain.SearchData) Strategy.GetCompositeRole(C1Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(C1Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(C1Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(C1Meta.SearchData);
		}



		virtual public Allors.Extent<global::Domain.I2> I2sWhereC1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I2sWhereC1Many2One);
			}
		}

		virtual public bool ExistI2sWhereC1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I2sWhereC1Many2One);
			}
		}


		virtual public global::Domain.I2 I2WhereC1One2Many
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C1Meta.I2WhereC1One2Many);
			}
		} 

		virtual public bool ExistI2WhereC1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I2WhereC1One2Many);
			}
		}


		virtual public global::Domain.I2 I2WhereC1One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C1Meta.I2WhereC1One2One);
			}
		} 

		virtual public bool ExistI2WhereC1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I2WhereC1One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereC1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I2sWhereC1Many2Many);
			}
		}

		virtual public bool ExistI2sWhereC1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I2sWhereC1Many2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereC1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereC1One2One);
			}
		} 

		virtual public bool ExistC1WhereC1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereC1One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereC1Many2Many);
			}
		}

		virtual public bool ExistC1sWhereC1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereC1Many2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereC1One2Many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereC1One2Many);
			}
		} 

		virtual public bool ExistC1WhereC1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereC1One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereC1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereC1Many2One);
			}
		}

		virtual public bool ExistC1sWhereC1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereC1Many2One);
			}
		}


		virtual public global::Domain.C2 C2WhereC1One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereC1One2One);
			}
		} 

		virtual public bool ExistC2WhereC1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereC1One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereC1Many2Many);
			}
		}

		virtual public bool ExistC2sWhereC1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereC1Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereC1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereC1Many2One);
			}
		}

		virtual public bool ExistC2sWhereC1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereC1Many2One);
			}
		}


		virtual public global::Domain.C2 C2WhereC1One2Many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereC1One2Many);
			}
		} 

		virtual public bool ExistC2WhereC1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereC1One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I12sWhereC1Many2Many);
			}
		}

		virtual public bool ExistI12sWhereC1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I12sWhereC1Many2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereC1One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C1Meta.I12WhereC1One2One);
			}
		} 

		virtual public bool ExistI12WhereC1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I12WhereC1One2One);
			}
		}


		virtual public global::Domain.I12 I12WhereC1One2Many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C1Meta.I12WhereC1One2Many);
			}
		} 

		virtual public bool ExistI12WhereC1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I12WhereC1One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereC1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I12sWhereC1Many2One);
			}
		}

		virtual public bool ExistI12sWhereC1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I12sWhereC1Many2One);
			}
		}


		virtual public global::Domain.I1 I1WhereC1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereC1One2One);
			}
		} 

		virtual public bool ExistI1WhereC1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereC1One2One);
			}
		}


		virtual public global::Domain.I1 I1WhereC1One2Many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereC1One2Many);
			}
		} 

		virtual public bool ExistI1WhereC1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereC1One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereC1Many2Many);
			}
		}

		virtual public bool ExistI1sWhereC1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereC1Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereC1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereC1Many2One);
			}
		}

		virtual public bool ExistI1sWhereC1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereC1Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I2sWhereI1Many2One);
			}
		}

		virtual public bool ExistI2sWhereI1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I2sWhereI1Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I2sWhereI1Many2Many);
			}
		}

		virtual public bool ExistI2sWhereI1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I2sWhereI1Many2Many);
			}
		}


		virtual public global::Domain.I2 I2WhereI1One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C1Meta.I2WhereI1One2One);
			}
		} 

		virtual public bool ExistI2WhereI1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I2WhereI1One2One);
			}
		}


		virtual public global::Domain.I2 I2WhereI1One2Many
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C1Meta.I2WhereI1One2Many);
			}
		} 

		virtual public bool ExistI2WhereI1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I2WhereI1One2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereI1One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI1One2One);
			}
		} 

		virtual public bool ExistC1WhereI1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI1One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI1Many2One);
			}
		}

		virtual public bool ExistC1sWhereI1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI1Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI1Many2Many);
			}
		}

		virtual public bool ExistC1sWhereI1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI1Many2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereI1One2Many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI1One2Many);
			}
		} 

		virtual public bool ExistC1WhereI1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI1One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereI1Many2Many);
			}
		}

		virtual public bool ExistC2sWhereI1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereI1Many2Many);
			}
		}


		virtual public global::Domain.C2 C2WhereI1One2Many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereI1One2Many);
			}
		} 

		virtual public bool ExistC2WhereI1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereI1One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereI1Many2One);
			}
		}

		virtual public bool ExistC2sWhereI1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereI1Many2One);
			}
		}


		virtual public global::Domain.C2 C2WhereI1One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereI1One2One);
			}
		} 

		virtual public bool ExistC2WhereI1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereI1One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I12sWhereI1Many2One);
			}
		}

		virtual public bool ExistI12sWhereI1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I12sWhereI1Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I12sWhereI1Many2Many);
			}
		}

		virtual public bool ExistI12sWhereI1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I12sWhereI1Many2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereI1One2Many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C1Meta.I12WhereI1One2Many);
			}
		} 

		virtual public bool ExistI12WhereI1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I12WhereI1One2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereI1One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C1Meta.I12WhereI1One2One);
			}
		} 

		virtual public bool ExistI12WhereI1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I12WhereI1One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI1Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI1Many2One);
			}
		}

		virtual public bool ExistI1sWhereI1Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI1Many2One);
			}
		}


		virtual public global::Domain.I1 I1WhereI1One2Many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI1One2Many);
			}
		} 

		virtual public bool ExistI1WhereI1One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI1One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI1Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI1Many2Many);
			}
		}

		virtual public bool ExistI1sWhereI1Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI1Many2Many);
			}
		}


		virtual public global::Domain.I1 I1WhereI1One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI1One2One);
			}
		} 

		virtual public bool ExistI1WhereI1One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI1One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I2sWhereI12Many2One);
			}
		}

		virtual public bool ExistI2sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I2sWhereI12Many2One);
			}
		}


		virtual public global::Domain.I2 I2WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C1Meta.I2WhereI12One2Many);
			}
		} 

		virtual public bool ExistI2WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I2WhereI12One2Many);
			}
		}


		virtual public global::Domain.I2 I2WhereI12One2One
		{ 
			get
			{
				return (global::Domain.I2) Strategy.GetCompositeAssociation(C1Meta.I2WhereI12One2One);
			}
		} 

		virtual public bool ExistI2WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I2WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I2> I2sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I2sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI2sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I2sWhereI12Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI12Many2Many);
			}
		}

		virtual public bool ExistC1sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI12Many2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI12One2Many);
			}
		} 

		virtual public bool ExistC1WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI12One2Many);
			}
		}


		virtual public global::Domain.C1 C1WhereI12One2One
		{ 
			get
			{
				return (global::Domain.C1) Strategy.GetCompositeAssociation(C1Meta.C1WhereI12One2One);
			}
		} 

		virtual public bool ExistC1WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C1WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C1> C1sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C1sWhereI12Many2One);
			}
		}

		virtual public bool ExistC1sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C1sWhereI12Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereI12Many2One);
			}
		}

		virtual public bool ExistC2sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereI12Many2One);
			}
		}


		virtual public global::Domain.C2 C2WhereI12One2One
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereI12One2One);
			}
		} 

		virtual public bool ExistC2WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.C2> C2sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.C2sWhereI12Many2Many);
			}
		}

		virtual public bool ExistC2sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.C2sWhereI12Many2Many);
			}
		}


		virtual public global::Domain.C2 C2WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.C2) Strategy.GetCompositeAssociation(C1Meta.C2WhereI12One2Many);
			}
		} 

		virtual public bool ExistC2WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.C2WhereI12One2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I12sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI12sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I12sWhereI12Many2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C1Meta.I12WhereI12One2Many);
			}
		} 

		virtual public bool ExistI12WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I12WhereI12One2Many);
			}
		}


		virtual public global::Domain.I12 I12WhereI12One2One
		{ 
			get
			{
				return (global::Domain.I12) Strategy.GetCompositeAssociation(C1Meta.I12WhereI12One2One);
			}
		} 

		virtual public bool ExistI12WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I12WhereI12One2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereDependency
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I12sWhereDependency);
			}
		}

		virtual public bool ExistI12sWhereDependency
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I12sWhereDependency);
			}
		}


		virtual public Allors.Extent<global::Domain.I12> I12sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I12sWhereI12Many2One);
			}
		}

		virtual public bool ExistI12sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I12sWhereI12Many2One);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12Many2Many
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI12Many2Many);
			}
		}

		virtual public bool ExistI1sWhereI12Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI12Many2Many);
			}
		}


		virtual public Allors.Extent<global::Domain.I1> I1sWhereI12Many2One
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(C1Meta.I1sWhereI12Many2One);
			}
		}

		virtual public bool ExistI1sWhereI12Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(C1Meta.I1sWhereI12Many2One);
			}
		}


		virtual public global::Domain.I1 I1WhereI12One2One
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI12One2One);
			}
		} 

		virtual public bool ExistI1WhereI12One2One
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI12One2One);
			}
		}


		virtual public global::Domain.I1 I1WhereI12One2Many
		{ 
			get
			{
				return (global::Domain.I1) Strategy.GetCompositeAssociation(C1Meta.I1WhereI12One2Many);
			}
		} 

		virtual public bool ExistI1WhereI12One2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(C1Meta.I1WhereI12One2Many);
			}
		}

	}

	public static class C1Meta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7041c691-d896-4628-8f50-1c24f5d03414") );

		public static readonly global::Allors.Meta.RoleType C1I1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0e7f529b-bc91-4a40-a7e7-a17341c6bf5b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("20713860-8abd-4d71-8ccc-2b4d1b88bce3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5490dc63-a8f6-4a86-91ef-fef97a86f119"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6def7988-4bcf-4964-9de6-c6ede41d5e5a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("79c00218-bb4f-40e9-af7d-61af444a4a54"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7bb216f2-8e9c-4dcd-890b-579130ab0a8b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("815878f6-16f2-42f2-9b24-f394ddf789c2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("82f5fb26-c260-41bc-a784-a2d5e35243bd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("87eb0d19-73a7-4aae-aeed-66dc9163233c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8c198447-e943-4f5a-b749-9534b181c664"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("91e8b23b-48fb-4d20-8a71-89c5630f1c78"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("94a2b37d-9431-4496-b992-630cda5b9851"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("97f31053-0e7b-42a0-90c2-ce6f09c56e86"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("98c5f58b-1777-4d9a-8828-37dbf7051510"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9f6538c2-e6dd-4c27-80ed-2748f645cb95"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a0ac5a65-2cbd-4c51-9417-b10150bc5699"))).RoleType;
		public static readonly global::Allors.Meta.RoleType AllorsStringMax = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a64abd21-dadf-483d-9499-d19aa8e33791"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a8e18ea7-cbf2-4ea7-ae14-9f4bcfdb55de"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b4ee673f-bba0-4e24-9cda-3cf993c79a0a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b9f2c4c7-6979-40cf-82a2-fa99a5d9e9a4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bcf4df45-6616-4cdf-8ada-f944f9c7ff1a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cda97972-84c8-48e3-99d8-fd7c99c5dbc9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cef13620-b7d7-4bfe-8d3b-c0f826da5989"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d0341bed-2732-4bcb-b1bb-9f9589de5d03"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1I1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e0656d9a-75a6-4e59-aaa1-3ff03d440059"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e97fc754-c736-4359-9662-19dce9429f89"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef75cc4e-8787-4f1c-ae5c-73577d721467"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f268783d-42ed-41c1-b0b0-b8a60e30a601"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1C2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f29d4a52-9ba5-40f6-ba99-050cbd03e554"))).RoleType;
		public static readonly global::Allors.Meta.RoleType C1AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f4920d94-8cd0-45b6-be00-f18d377368fd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("06b72534-49a8-4f6d-a991-bc4aaf6f939f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0a2895ec-0102-493d-9b94-e12e94b4a403"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0acbea28-f8aa-477c-b296-b8976d9b10a5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("194580f4-e0e3-4b52-b9ba-6020171be4e9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("28ceffc2-c776-4a0a-9825-a6d1bcb265dc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2e85d74a-8d13-4bc0-ae4f-42b305e79373"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("39e28141-fd6b-4f49-8884-d5400f6c57ff"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4506a14b-22f1-41fe-972b-40fab7c6dd31"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("47f775ef-2fe1-475a-81d8-2267dfd01085"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("593914b1-af95-4992-9703-2b60f4ea0926"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5cb44331-fd8c-4f73-8994-161f702849b6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6199e5b4-133d-4d0e-9941-207316164ec8"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("670c753e-8ea0-40b1-bfc9-7388074191d3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6bb3ba6d-ffc7-4700-9723-c323b9b2d233"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6c3d04be-6f95-44b8-863a-245e150e3110"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("75fb2012-0b49-4442-a9b4-8239cffb1d37"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("818b4013-5ef1-4455-9f0d-9a39fa3425bb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a51d9d21-40ec-44b9-853d-8c18f54d659d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a5761a0e-5c10-407a-bd68-0c4f69d78968"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b6e0fce0-14fc-46e3-995d-1b6e3699ed96"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b89092f1-8775-4b6a-99ef-f8626bc770bd"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b9c67658-4abc-41f3-9434-c8512a482179"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bcc9eee6-fa07-4d37-be84-b691bfce24be"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cdb758bf-ecaf-4d99-88fb-58df9258c13c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e1b13216-7210-4c24-a668-83b40162a21b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e3126228-342a-4415-a2e8-d52eceaeaf89"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1I12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e386cca6-e738-4c37-8bfc-b23057d7a0be"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1C2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ef1a0a5e-1794-4478-9d0a-517182355206"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I1AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f9d7411e-7993-4e43-a7e2-726f1e44e29c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsBinary = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("042d1311-1c06-4d7c-b68e-eb734f9c7327"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("107c212d-cc1c-41b2-9c1d-b40c0102072c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDouble = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1611cb5d-4676-4e85-bfc5-5572e8ff1138"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("167b53c0-644c-467e-9f7c-fcb9415d02c6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsString = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("199a84c4-c7cb-4f23-8b6c-078b14525e18"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1bf2abe0-9273-4fb9-b491-020320f1f8db"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDecimal = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("41a74fec-cfbc-43ca-a6e7-890f0dd1eddb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4a2b2f43-037d-4149-8a1e-401e5df963ba"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("51ebb024-c847-4165-b216-b3b6e8883961"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("59ae05e3-573c-4ea4-9181-2c545236ed1e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5e473f63-b1d7-4530-b64f-26435fb5063c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Name = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6daafb16-1bc3-4f15-8e25-1a982c5bb3c5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7827af95-147f-4803-865a-b418d567da68"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7f6fdb73-3e19-40e7-8feb-6ddbdf2e745a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsUnique = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("93a59d0a-278d-435b-967e-551523f0cb85"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsInteger = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("95551e3a-bad2-4136-923f-c8e5f0f2aec7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("95c77a0f-7f4c-4142-a93f-f688cfd554af"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9aefdda0-e547-4c9b-bf28-431669f8ea2e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsLong = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9bcbb810-fe3e-4829-8b1c-40219d16b60b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a89b4c06-bba5-4b05-bd6f-c32bc195c32f"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ac920d1d-290b-484b-9283-3829337182bc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Dependency = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2e3ddda-0cc3-4cfd-a114-9040882ec58a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I2One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2f568a1-51ba-4b6b-a1f1-b82bdec382b5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C2Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c018face-b292-455c-a2c0-8f71377fb6cb"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c6ecc142-0fbd-48b7-98ae-994fa9b5b814"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsBoolean = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ccdd1ae2-263e-4221-9841-4cff1907ee8d"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12I1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ce0f7d58-b415-43f3-989b-9d8b34754e4b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f302dd07-1abc-409e-aa71-ec9f7ac439aa"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12C1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f6436bc9-e307-4001-8f1f-5b37553ab3c6"))).RoleType;
		public static readonly global::Allors.Meta.RoleType I12AllorsDateTime = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("fa6656dc-3a7a-4701-bc6b-3cd06aaa4483"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SearchData = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5f38c771-10db-456e-ac31-6833f7087b50"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType I2sWhereC1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1f763206-c575-4e34-9e6b-997d434d3f42"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereC1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("40b8edb3-e8c4-46c0-855b-4b18e0e8d7f3"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereC1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("49736daf-d0bd-4216-97fa-958cfa21a4f0"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereC1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f364c9fe-ad36-4305-80fd-4921451c70a5"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("79c00218-bb4f-40e9-af7d-61af444a4a54"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8c198447-e943-4f5a-b749-9534b181c664"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereC1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a0ac5a65-2cbd-4c51-9417-b10150bc5699"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereC1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a8e18ea7-cbf2-4ea7-ae14-9f4bcfdb55de"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0c8209e3-b2fc-4c7a-acd2-6b5b8ac89bf4"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereC1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("70600f67-7b18-4b5c-b11e-2ed180c5b2d6"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereC1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a5315151-aa0f-42a3-9d5b-2c7f2cb92560"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereC1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f748949e-de5a-4f2e-85e2-e15516d9bf24"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereC1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7827af95-147f-4803-865a-b418d567da68"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereC1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9aefdda0-e547-4c9b-bf28-431669f8ea2e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereC1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f302dd07-1abc-409e-aa71-ec9f7ac439aa"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereC1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f6436bc9-e307-4001-8f1f-5b37553ab3c6"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("593914b1-af95-4992-9703-2b60f4ea0926"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereC1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b89092f1-8775-4b6a-99ef-f8626bc770bd"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereC1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bcc9eee6-fa07-4d37-be84-b691bfce24be"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereC1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e3126228-342a-4415-a2e8-d52eceaeaf89"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6bb406bc-627b-444c-9c16-df9878e05e9c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9bed0518-1946-4e23-9d4b-e4cda439984c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b640bf16-0dc0-4203-aa76-f456371239ae"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bbb01166-2671-4ca1-8b1e-12e6ae8aeb03"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0e7f529b-bc91-4a40-a7e7-a17341c6bf5b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7bb216f2-8e9c-4dcd-890b-579130ab0a8b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("815878f6-16f2-42f2-9b24-f394ddf789c2"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e0656d9a-75a6-4e59-aaa1-3ff03d440059"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1d98eda7-6dba-43f1-a5ce-44f7ed104cf9"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2ac55066-c748-4f90-9d0f-1090fe02cc76"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("65a246a7-cd78-45eb-90db-39f542e7c6cf"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("67780894-fa62-48ba-8f47-7f54106090cd"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("167b53c0-644c-467e-9f7c-fcb9415d02c6"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("59ae05e3-573c-4ea4-9181-2c545236ed1e"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("95c77a0f-7f4c-4142-a93f-f688cfd554af"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ce0f7d58-b415-43f3-989b-9d8b34754e4b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI1Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("06b72534-49a8-4f6d-a991-bc4aaf6f939f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI1One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("670c753e-8ea0-40b1-bfc9-7388074191d3"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI1Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6bb3ba6d-ffc7-4700-9723-c323b9b2d233"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI1One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e1b13216-7210-4c24-a668-83b40162a21b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("23e9c15f-097f-4452-9bac-d7cf2a65134a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("83dc0581-e04a-4f51-a44e-4fef63d44356"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("87499e99-ed77-44c1-89d6-b4f570b6f217"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I2sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("cb9f21e0-a841-45de-8ba4-991b4ceca616"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("94a2b37d-9431-4496-b992-630cda5b9851"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("98c5f58b-1777-4d9a-8828-37dbf7051510"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b9f2c4c7-6979-40cf-82a2-fa99a5d9e9a4"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C1sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("bcf4df45-6616-4cdf-8ada-f944f9c7ff1a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("165cc83e-935d-4d0d-aec7-5da155300086"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1d0c57c9-a3d1-4134-bc7d-7bb587d8250f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("50300577-b5fb-4c16-9ac5-41151543f958"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType C2WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("770eb33c-c8ef-4629-a3a0-20decd92ff62"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("1bf2abe0-9273-4fb9-b491-020320f1f8db"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5e473f63-b1d7-4530-b64f-26435fb5063c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a89b4c06-bba5-4b05-bd6f-c32bc195c32f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereDependency = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b2e3ddda-0cc3-4cfd-a114-9040882ec58a"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I12sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c6ecc142-0fbd-48b7-98ae-994fa9b5b814"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12Many2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0a2895ec-0102-493d-9b94-e12e94b4a403"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1sWhereI12Many2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2e85d74a-8d13-4bc0-ae4f-42b305e79373"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12One2One = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a51d9d21-40ec-44b9-853d-8c18f54d659d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType I1WhereI12One2Many = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e386cca6-e738-4c37-8bfc-b23057d7a0be"))).AssociationType;

	}
}