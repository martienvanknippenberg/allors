// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Login : LoginAllors 
	{
		public Login(Allors.IStrategy allors) : base(allors) {}

		public static Login Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Login) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class LoginAllors : Allors.ObjectBase
	{
		protected LoginAllors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.String Key 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LoginMeta.Key);
			}
			set
			{
				Strategy.SetUnitRole(LoginMeta.Key, value);
			}
		}

		virtual public bool ExistKey{
			get
			{
				return Strategy.ExistUnitRole(LoginMeta.Key);
			}
		}

		virtual public void RemoveKey()
		{
			Strategy.RemoveUnitRole(LoginMeta.Key);
		}



		virtual public global::System.String Provider 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LoginMeta.Provider);
			}
			set
			{
				Strategy.SetUnitRole(LoginMeta.Provider, value);
			}
		}

		virtual public bool ExistProvider{
			get
			{
				return Strategy.ExistUnitRole(LoginMeta.Provider);
			}
		}

		virtual public void RemoveProvider()
		{
			Strategy.RemoveUnitRole(LoginMeta.Provider);
		}


		virtual public global::Domain.User User
		{ 
			get
			{
				return (global::Domain.User) Strategy.GetCompositeRole(LoginMeta.User);
			}
			set
			{
				Strategy.SetCompositeRole(LoginMeta.User ,value);
			}
		}

		virtual public bool ExistUser
		{
			get
			{
				return Strategy.ExistCompositeRole(LoginMeta.User);
			}
		}

		virtual public void RemoveUser()
		{
			Strategy.RemoveCompositeRole(LoginMeta.User);
		}

	}

	public static class LoginMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ad7277a8-eda4-4128-a990-b47fe43d120a") );

		public static readonly global::Allors.Meta.RoleType Key = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("18262218-a14f-48c3-87a5-87196d3b5974"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Provider = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7a82e721-d0b7-4567-aaef-bd3987ae6d01"))).RoleType;
		public static readonly global::Allors.Meta.RoleType User = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c2d950ad-39d3-40f1-8817-11a026e9890b"))).RoleType;

	}
}