// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial interface User :  global::Domain.SecurityTokenOwner,global::Domain.UserInterfaceable,global::Domain.Localised, Allors.IObject
	{
	}

	public static class UserMeta
	{
		public static readonly global::Allors.Meta.Interface ObjectType = (Allors.Meta.Interface)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("a0309c3b-6f80-4777-983e-6e69800df5be") );

		public static readonly global::Allors.Meta.RoleType UserEmailConfirmed = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0b3b650b-fcd4-4475-b5c4-e2ee4f39b0be"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UserName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5e8ab257-1a1c-4448-aacc-71dbaaba525b"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UserEmail = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c1ae3652-5854-4b68-9890-a954067767fc"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UserPasswordHash = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ea0c7596-c0b8-4984-bc25-cb4b4857954e"))).RoleType;
		public static readonly global::Allors.Meta.RoleType OwnerSecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5fb15e8b-011c-46f7-83dd-485d4cc4f9f2"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Locale = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8c005a4e-5ffe-45fd-b279-778e274f4d83"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType SingletonWhereGuest = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f16652b0-b712-43d7-8d4e-34a22487514d"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType UserGroupsWhereMember = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("585bb5cf-9ba4-4865-9027-3667185abc4f"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType LoginsWhereUser = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c2d950ad-39d3-40f1-8817-11a026e9890b"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType AccessControlsWhereSubject = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("37dd1e27-ba75-404c-9410-c6399d28317c"))).AssociationType;

	}
}