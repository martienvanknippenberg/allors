// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class LocalisedText : LocalisedTextAllors , global::Domain.Searchable, global::Domain.UserInterfaceable, global::Domain.Localised
	{
		public LocalisedText(Allors.IStrategy allors) : base(allors) {}

		public static LocalisedText Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (LocalisedText) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class LocalisedTextAllors : Allors.ObjectBase
	{
		protected LocalisedTextAllors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.String Text 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LocalisedTextMeta.Text);
			}
			set
			{
				Strategy.SetUnitRole(LocalisedTextMeta.Text, value);
			}
		}

		virtual public bool ExistText{
			get
			{
				return Strategy.ExistUnitRole(LocalisedTextMeta.Text);
			}
		}

		virtual public void RemoveText()
		{
			Strategy.RemoveUnitRole(LocalisedTextMeta.Text);
		}


		virtual public global::Domain.SearchData SearchData
		{ 
			get
			{
				return (global::Domain.SearchData) Strategy.GetCompositeRole(LocalisedTextMeta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(LocalisedTextMeta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(LocalisedTextMeta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(LocalisedTextMeta.SearchData);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LocalisedTextMeta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(LocalisedTextMeta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(LocalisedTextMeta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(LocalisedTextMeta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(LocalisedTextMeta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(LocalisedTextMeta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(LocalisedTextMeta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(LocalisedTextMeta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(LocalisedTextMeta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(LocalisedTextMeta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(LocalisedTextMeta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(LocalisedTextMeta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(LocalisedTextMeta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(LocalisedTextMeta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(LocalisedTextMeta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(LocalisedTextMeta.SecurityToken);
		}


		virtual public global::Domain.Locale Locale
		{ 
			get
			{
				return (global::Domain.Locale) Strategy.GetCompositeRole(LocalisedTextMeta.Locale);
			}
			set
			{
				Strategy.SetCompositeRole(LocalisedTextMeta.Locale ,value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return Strategy.ExistCompositeRole(LocalisedTextMeta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			Strategy.RemoveCompositeRole(LocalisedTextMeta.Locale);
		}



		virtual public global::Domain.Language LanguageWhereLocalisedName
		{ 
			get
			{
				return (global::Domain.Language) Strategy.GetCompositeAssociation(LocalisedTextMeta.LanguageWhereLocalisedName);
			}
		} 

		virtual public bool ExistLanguageWhereLocalisedName
		{
			get
			{
				return Strategy.ExistCompositeAssociation(LocalisedTextMeta.LanguageWhereLocalisedName);
			}
		}


		virtual public global::Domain.Enumeration EnumerationWhereLocalisedName
		{ 
			get
			{
				return (global::Domain.Enumeration) Strategy.GetCompositeAssociation(LocalisedTextMeta.EnumerationWhereLocalisedName);
			}
		} 

		virtual public bool ExistEnumerationWhereLocalisedName
		{
			get
			{
				return Strategy.ExistCompositeAssociation(LocalisedTextMeta.EnumerationWhereLocalisedName);
			}
		}


		virtual public global::Domain.Country CountryWhereLocalisedName
		{ 
			get
			{
				return (global::Domain.Country) Strategy.GetCompositeAssociation(LocalisedTextMeta.CountryWhereLocalisedName);
			}
		} 

		virtual public bool ExistCountryWhereLocalisedName
		{
			get
			{
				return Strategy.ExistCompositeAssociation(LocalisedTextMeta.CountryWhereLocalisedName);
			}
		}


		virtual public global::Domain.Currency CurrencyWhereLocalisedName
		{ 
			get
			{
				return (global::Domain.Currency) Strategy.GetCompositeAssociation(LocalisedTextMeta.CurrencyWhereLocalisedName);
			}
		} 

		virtual public bool ExistCurrencyWhereLocalisedName
		{
			get
			{
				return Strategy.ExistCompositeAssociation(LocalisedTextMeta.CurrencyWhereLocalisedName);
			}
		}

	}

	public static class LocalisedTextMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("020f5d4d-4a59-4d7b-865a-d72fc70e4d97") );

		public static readonly global::Allors.Meta.RoleType Text = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("50dc85f0-3d22-4bc1-95d9-153674b89f7a"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SearchData = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5f38c771-10db-456e-ac31-6833f7087b50"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Locale = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8c005a4e-5ffe-45fd-b279-778e274f4d83"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType LanguageWhereLocalisedName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f091b264-e6b1-4a57-bbfb-8225cbe8190c"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType EnumerationWhereLocalisedName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("450966da-263e-4666-adf2-b2851c064941"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CountryWhereLocalisedName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8236a702-a76d-4bb5-9afd-acacb1508261"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType CurrencyWhereLocalisedName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e9fc0472-cf7a-4e02-b061-cb42b6f5c273"))).AssociationType;

	}
}