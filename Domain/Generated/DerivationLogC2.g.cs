// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class DerivationLogC2 : DerivationLogC2Allors , global::Domain.DerivationLogI12
	{
		public DerivationLogC2(Allors.IStrategy allors) : base(allors) {}

		public static DerivationLogC2 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (DerivationLogC2) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class DerivationLogC2Allors : Allors.ObjectBase
	{
		protected DerivationLogC2Allors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.Guid? UniqueId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(DerivationLogC2Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(DerivationLogC2Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(DerivationLogC2Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(DerivationLogC2Meta.UniqueId);
		}

	}

	public static class DerivationLogC2Meta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("c7563dd3-77b2-43ff-92f9-a4f98db36acf") );

		public static readonly global::Allors.Meta.RoleType UniqueId = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("0b89b096-a69a-495c-acfe-b24a9b27e320"))).RoleType;

	}
}