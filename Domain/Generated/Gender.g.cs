// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Gender : GenderAllors , global::Domain.Enumeration
	{
		public Gender(Allors.IStrategy allors) : base(allors) {}

		public static Gender Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Gender) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class GenderAllors : Allors.ObjectBase
	{
		protected GenderAllors(Allors.IStrategy allors) : base(allors){}


		virtual public Allors.Extent<global::Domain.LocalisedText> LocalisedNames
		{ 
			get
			{
				return Strategy.GetCompositeRoles(GenderMeta.LocalisedName);
			}
			set
			{
				Strategy.SetCompositeRoles(GenderMeta.LocalisedName, value);
			}
		}

		virtual public void AddLocalisedName (global::Domain.LocalisedText value)
		{
			Strategy.AddCompositeRole(GenderMeta.LocalisedName, value);
		}

		virtual public void RemoveLocalisedName (global::Domain.LocalisedText value)
		{
			Strategy.RemoveCompositeRole(GenderMeta.LocalisedName,value);
		}

		virtual public bool ExistLocalisedNames
		{
			get
			{
				return Strategy.ExistCompositeRoles(GenderMeta.LocalisedName);
			}
		}

		virtual public void RemoveLocalisedNames()
		{
			Strategy.RemoveCompositeRoles(GenderMeta.LocalisedName);
		}



		virtual public global::System.Boolean? IsActive 
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(GenderMeta.IsActive);
			}
			set
			{
				Strategy.SetUnitRole(GenderMeta.IsActive, value);
			}
		}

		virtual public bool ExistIsActive{
			get
			{
				return Strategy.ExistUnitRole(GenderMeta.IsActive);
			}
		}

		virtual public void RemoveIsActive()
		{
			Strategy.RemoveUnitRole(GenderMeta.IsActive);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(GenderMeta.Name);
			}
			set
			{
				Strategy.SetUnitRole(GenderMeta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(GenderMeta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(GenderMeta.Name);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(GenderMeta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(GenderMeta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(GenderMeta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(GenderMeta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(GenderMeta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(GenderMeta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(GenderMeta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(GenderMeta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(GenderMeta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(GenderMeta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(GenderMeta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(GenderMeta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(GenderMeta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(GenderMeta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(GenderMeta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(GenderMeta.SecurityToken);
		}



		virtual public global::System.Guid? UniqueId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(GenderMeta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(GenderMeta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(GenderMeta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(GenderMeta.UniqueId);
		}



		virtual public Allors.Extent<global::Domain.Person> PersonsWhereGender
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(GenderMeta.PersonsWhereGender);
			}
		}

		virtual public bool ExistPersonsWhereGender
		{
			get
			{
				return Strategy.ExistCompositeAssociations(GenderMeta.PersonsWhereGender);
			}
		}

	}

	public static class GenderMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("270f0dc8-1bc2-4a42-9617-45e93d5403c8") );

		public static readonly global::Allors.Meta.RoleType LocalisedName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("450966da-263e-4666-adf2-b2851c064941"))).RoleType;
		public static readonly global::Allors.Meta.RoleType IsActive = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("459ea6f3-6143-410e-9646-fa4c450b2f67"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Name = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8b75617d-7309-4011-b512-8bee2bab9611"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UniqueId = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e1842d87-8157-40e7-b06e-4375f311f2c3"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType PersonsWhereGender = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("654f6c84-62f2-4c0a-9d68-532ed3f39447"))).AssociationType;

	}
}