// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Locale : LocaleAllors , global::Domain.UserInterfaceable
	{
		public Locale(Allors.IStrategy allors) : base(allors) {}

		public static Locale Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Locale) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class LocaleAllors : Allors.ObjectBase
	{
		protected LocaleAllors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LocaleMeta.Name);
			}
			set
			{
				Strategy.SetUnitRole(LocaleMeta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(LocaleMeta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(LocaleMeta.Name);
		}


		virtual public global::Domain.Language Language
		{ 
			get
			{
				return (global::Domain.Language) Strategy.GetCompositeRole(LocaleMeta.Language);
			}
			set
			{
				Strategy.SetCompositeRole(LocaleMeta.Language ,value);
			}
		}

		virtual public bool ExistLanguage
		{
			get
			{
				return Strategy.ExistCompositeRole(LocaleMeta.Language);
			}
		}

		virtual public void RemoveLanguage()
		{
			Strategy.RemoveCompositeRole(LocaleMeta.Language);
		}


		virtual public global::Domain.Country Country
		{ 
			get
			{
				return (global::Domain.Country) Strategy.GetCompositeRole(LocaleMeta.Country);
			}
			set
			{
				Strategy.SetCompositeRole(LocaleMeta.Country ,value);
			}
		}

		virtual public bool ExistCountry
		{
			get
			{
				return Strategy.ExistCompositeRole(LocaleMeta.Country);
			}
		}

		virtual public void RemoveCountry()
		{
			Strategy.RemoveCompositeRole(LocaleMeta.Country);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LocaleMeta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(LocaleMeta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(LocaleMeta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(LocaleMeta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(LocaleMeta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(LocaleMeta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(LocaleMeta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(LocaleMeta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(LocaleMeta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(LocaleMeta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(LocaleMeta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(LocaleMeta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(LocaleMeta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(LocaleMeta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(LocaleMeta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(LocaleMeta.SecurityToken);
		}



		virtual public Allors.Extent<global::Domain.Localised> LocalisedsWhereLocale
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(LocaleMeta.LocalisedsWhereLocale);
			}
		}

		virtual public bool ExistLocalisedsWhereLocale
		{
			get
			{
				return Strategy.ExistCompositeAssociations(LocaleMeta.LocalisedsWhereLocale);
			}
		}


		virtual public Allors.Extent<global::Domain.Singleton> SingletonsWhereDefaultLocale
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(LocaleMeta.SingletonsWhereDefaultLocale);
			}
		}

		virtual public bool ExistSingletonsWhereDefaultLocale
		{
			get
			{
				return Strategy.ExistCompositeAssociations(LocaleMeta.SingletonsWhereDefaultLocale);
			}
		}


		virtual public global::Domain.Singleton SingletonWhereLocale
		{ 
			get
			{
				return (global::Domain.Singleton) Strategy.GetCompositeAssociation(LocaleMeta.SingletonWhereLocale);
			}
		} 

		virtual public bool ExistSingletonWhereLocale
		{
			get
			{
				return Strategy.ExistCompositeAssociation(LocaleMeta.SingletonWhereLocale);
			}
		}

	}

	public static class LocaleMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("45033ae6-85b5-4ced-87ce-02518e6c27fd") );

		public static readonly global::Allors.Meta.RoleType Name = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("2a2c6f77-e6a2-4eab-bfe3-5d35a8abd7f7"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Language = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d8cac34a-9bb2-4190-bd2a-ec0b87e04cf5"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Country = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("ea778b77-2929-4ab4-ad99-bf2f970401a9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType LocalisedsWhereLocale = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("8c005a4e-5ffe-45fd-b279-778e274f4d83"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType SingletonsWhereDefaultLocale = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9c1634ab-be99-4504-8690-ed4b39fec5bc"))).AssociationType;
		public static readonly global::Allors.Meta.AssociationType SingletonWhereLocale = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("9e5a3413-ed33-474f-adf2-149ad5a80719"))).AssociationType;

	}
}