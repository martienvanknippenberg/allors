// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class Language : LanguageAllors , global::Domain.UserInterfaceable, global::Domain.Searchable
	{
		public Language(Allors.IStrategy allors) : base(allors) {}

		public static Language Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Language) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class LanguageAllors : Allors.ObjectBase
	{
		protected LanguageAllors(Allors.IStrategy allors) : base(allors){}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LanguageMeta.Name);
			}
			set
			{
				Strategy.SetUnitRole(LanguageMeta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(LanguageMeta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(LanguageMeta.Name);
		}



		virtual public global::System.String IsoCode 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LanguageMeta.IsoCode);
			}
			set
			{
				Strategy.SetUnitRole(LanguageMeta.IsoCode, value);
			}
		}

		virtual public bool ExistIsoCode{
			get
			{
				return Strategy.ExistUnitRole(LanguageMeta.IsoCode);
			}
		}

		virtual public void RemoveIsoCode()
		{
			Strategy.RemoveUnitRole(LanguageMeta.IsoCode);
		}


		virtual public Allors.Extent<global::Domain.LocalisedText> LocalisedNames
		{ 
			get
			{
				return Strategy.GetCompositeRoles(LanguageMeta.LocalisedName);
			}
			set
			{
				Strategy.SetCompositeRoles(LanguageMeta.LocalisedName, value);
			}
		}

		virtual public void AddLocalisedName (global::Domain.LocalisedText value)
		{
			Strategy.AddCompositeRole(LanguageMeta.LocalisedName, value);
		}

		virtual public void RemoveLocalisedName (global::Domain.LocalisedText value)
		{
			Strategy.RemoveCompositeRole(LanguageMeta.LocalisedName,value);
		}

		virtual public bool ExistLocalisedNames
		{
			get
			{
				return Strategy.ExistCompositeRoles(LanguageMeta.LocalisedName);
			}
		}

		virtual public void RemoveLocalisedNames()
		{
			Strategy.RemoveCompositeRoles(LanguageMeta.LocalisedName);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(LanguageMeta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(LanguageMeta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(LanguageMeta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(LanguageMeta.DisplayName);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(LanguageMeta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(LanguageMeta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(LanguageMeta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(LanguageMeta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(LanguageMeta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(LanguageMeta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(LanguageMeta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(LanguageMeta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(LanguageMeta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(LanguageMeta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(LanguageMeta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(LanguageMeta.SecurityToken);
		}


		virtual public global::Domain.SearchData SearchData
		{ 
			get
			{
				return (global::Domain.SearchData) Strategy.GetCompositeRole(LanguageMeta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(LanguageMeta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(LanguageMeta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(LanguageMeta.SearchData);
		}



		virtual public Allors.Extent<global::Domain.Locale> LocalesWhereLanguage
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(LanguageMeta.LocalesWhereLanguage);
			}
		}

		virtual public bool ExistLocalesWhereLanguage
		{
			get
			{
				return Strategy.ExistCompositeAssociations(LanguageMeta.LocalesWhereLanguage);
			}
		}

	}

	public static class LanguageMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("4a0eca4b-281f-488d-9c7e-497de882c044") );

		public static readonly global::Allors.Meta.RoleType Name = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("be482902-beb5-4a76-8ad0-c1b1c1c0e5c4"))).RoleType;
		public static readonly global::Allors.Meta.RoleType IsoCode = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d2a32d9f-21cc-4f9d-b0d3-a9b75da66907"))).RoleType;
		public static readonly global::Allors.Meta.RoleType LocalisedName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("f091b264-e6b1-4a57-bbfb-8225cbe8190c"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SearchData = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5f38c771-10db-456e-ac31-6833f7087b50"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType LocalesWhereLanguage = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("d8cac34a-9bb2-4190-bd2a-ec0b87e04cf5"))).AssociationType;

	}
}