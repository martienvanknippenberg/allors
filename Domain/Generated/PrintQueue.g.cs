// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Domain
{
	public partial class PrintQueue : PrintQueueAllors , global::Domain.AccessControlledObject, global::Domain.UserInterfaceable, global::Domain.UniquelyIdentifiable
	{
		public PrintQueue(Allors.IStrategy allors) : base(allors) {}

		public static PrintQueue Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (PrintQueue) allorsSession.Instantiate(allorsObjectId);		
		}
	}

	[System.Diagnostics.DebuggerNonUserCode]
	public abstract class PrintQueueAllors : Allors.ObjectBase
	{
		protected PrintQueueAllors(Allors.IStrategy allors) : base(allors){}


		virtual public Allors.Extent<global::Domain.Printable> Printables
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PrintQueueMeta.Printable);
			}
			set
			{
				Strategy.SetCompositeRoles(PrintQueueMeta.Printable, value);
			}
		}

		virtual public void AddPrintable (global::Domain.Printable value)
		{
			Strategy.AddCompositeRole(PrintQueueMeta.Printable, value);
		}

		virtual public void RemovePrintable (global::Domain.Printable value)
		{
			Strategy.RemoveCompositeRole(PrintQueueMeta.Printable,value);
		}

		virtual public bool ExistPrintables
		{
			get
			{
				return Strategy.ExistCompositeRoles(PrintQueueMeta.Printable);
			}
		}

		virtual public void RemovePrintables()
		{
			Strategy.RemoveCompositeRoles(PrintQueueMeta.Printable);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PrintQueueMeta.Name);
			}
			set
			{
				Strategy.SetUnitRole(PrintQueueMeta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(PrintQueueMeta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(PrintQueueMeta.Name);
		}


		virtual public Allors.Extent<global::Domain.Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PrintQueueMeta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(PrintQueueMeta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (global::Domain.Permission value)
		{
			Strategy.AddCompositeRole(PrintQueueMeta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (global::Domain.Permission value)
		{
			Strategy.RemoveCompositeRole(PrintQueueMeta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(PrintQueueMeta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(PrintQueueMeta.DeniedPermission);
		}


		virtual public Allors.Extent<global::Domain.SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(PrintQueueMeta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(PrintQueueMeta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.AddCompositeRole(PrintQueueMeta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (global::Domain.SecurityToken value)
		{
			Strategy.RemoveCompositeRole(PrintQueueMeta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(PrintQueueMeta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(PrintQueueMeta.SecurityToken);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(PrintQueueMeta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(PrintQueueMeta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(PrintQueueMeta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(PrintQueueMeta.DisplayName);
		}



		virtual public global::System.Guid? UniqueId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(PrintQueueMeta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(PrintQueueMeta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(PrintQueueMeta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(PrintQueueMeta.UniqueId);
		}



		virtual public global::Domain.Singleton SingletonWhereDefaultPrintQueue
		{ 
			get
			{
				return (global::Domain.Singleton) Strategy.GetCompositeAssociation(PrintQueueMeta.SingletonWhereDefaultPrintQueue);
			}
		} 

		virtual public bool ExistSingletonWhereDefaultPrintQueue
		{
			get
			{
				return Strategy.ExistCompositeAssociation(PrintQueueMeta.SingletonWhereDefaultPrintQueue);
			}
		}

	}

	public static class PrintQueueMeta
	{
		public static readonly global::Allors.Meta.Class ObjectType = (Allors.Meta.Class)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b45705e3-0dc6-4296-824a-76bb6af223d3") );

		public static readonly global::Allors.Meta.RoleType Printable = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("679156a1-f683-4772-b724-54b318eb3cb3"))).RoleType;
		public static readonly global::Allors.Meta.RoleType Name = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("7a85e090-55cf-47f5-912e-4bd87c66a060"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DeniedPermission = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("5c70ca14-4601-4c65-9b0d-cb189f90be27"))).RoleType;
		public static readonly global::Allors.Meta.RoleType SecurityToken = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("b816fccd-08e0-46e0-a49c-7213c3604416"))).RoleType;
		public static readonly global::Allors.Meta.RoleType DisplayName = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("6412301d-95ec-44c2-8c71-cc03de5327b9"))).RoleType;
		public static readonly global::Allors.Meta.RoleType UniqueId = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("e1842d87-8157-40e7-b06e-4375f311f2c3"))).RoleType;

		public static readonly global::Allors.Meta.AssociationType SingletonWhereDefaultPrintQueue = ((Allors.Meta.RelationType)global::Allors.Meta.Repository.MetaPopulation.Find( new System.Guid("64aed238-7009-4157-8395-7eb58ebf7889"))).AssociationType;

	}
}