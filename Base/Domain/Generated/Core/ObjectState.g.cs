// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface ObjectState :  UniquelyIdentifiable, Allors.IObject
	{


		global::Allors.Extent<Permission> ObjectStateDeniedPermissions
		{ 
			get;
			set;
		}

		void AddObjectStateDeniedPermission (Permission value);

		void RemoveObjectStateDeniedPermission (Permission value);

		bool ExistObjectStateDeniedPermissions
		{
			get;
		}

		void RemoveObjectStateDeniedPermissions();



		global::Allors.Extent<Transition> TransitionsWhereFromState
		{ 
			get;
		}

		bool ExistTransitionsWhereFromState
		{
			get;
		}


		global::Allors.Extent<Transition> TransitionsWhereToState
		{ 
			get;
		}

		bool ExistTransitionsWhereToState
		{
			get;
		}

	}

	public class ObjectStateMeta
	{
		public static readonly ObjectStateMeta Instance = new ObjectStateMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.ObjectState;

		public global::Allors.Meta.RoleType ObjectStateDeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ObjectStateDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 

		public global::Allors.Meta.AssociationType TransitionsWhereFromState 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.TransitionFromState;
			}
		} 
		public global::Allors.Meta.AssociationType TransitionsWhereToState 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.TransitionToState;
			}
		} 

	}
}