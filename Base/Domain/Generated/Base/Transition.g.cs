// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class Transition
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (TransitionBuilder)objectBuilder;
			if(builder.FromStates!=null)
			{
				this.FromStates = builder.FromStates.ToArray();
			}


			this.ToState = builder.ToState;


		}
	}

	public partial class TransitionBuilder : Allors.ObjectBuilder<Transition> , global::System.IDisposable
	{		
		public TransitionBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Collections.Generic.List<ObjectState> FromStates {get; set;}	

				/// <exclude/>
				public TransitionBuilder WithFromState(ObjectState value)
		        {
					if(this.FromStates == null)
					{
						this.FromStates = new global::System.Collections.Generic.List<ObjectState>(); 
					}
		            this.FromStates.Add(value);
		            return this;
		        }		

				
				public ObjectState ToState {get; set;}

				/// <exclude/>
				public TransitionBuilder WithToState(ObjectState value)
		        {
		            if(this.ToState!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ToState = value;
		            return this;
		        }		

				

	}

	public partial class Transitions : global::Allors.ObjectsBase<Transition>
	{
		public static readonly TransitionMeta Meta = TransitionMeta.Instance;

		public Transitions(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}