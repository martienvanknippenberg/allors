// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C1Builder : Allors.ObjectBuilder<C1> , I1Builder, global::System.IDisposable
	{		
		public C1Builder(Allors.ISession session) : base(session)
	    {
	    }

				public I1 C1I1One2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1I1One2One(I1 value)
		        {
		            if(this.C1I1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I1One2One = value;
		            return this;
		        }		

				
				public global::System.String C1AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsString(global::System.String value)
		        {
				    if(this.C1AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsString = value;
		            return this;
		        }	

				public global::System.DateTime? C1AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.C1AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsDateTime = value;
		            return this;
		        }	

				public C2 C1C2Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1C2Many2One(C2 value)
		        {
		            if(this.C1C2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C2Many2One = value;
		            return this;
		        }		

				
				public I2 C1I2One2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1I2One2One(I2 value)
		        {
		            if(this.C1I2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I2One2One = value;
		            return this;
		        }		

				
				public C1 C1C1One2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1C1One2One(C1 value)
		        {
		            if(this.C1C1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C1One2One = value;
		            return this;
		        }		

				
				public I1 C1I1Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1I1Many2One(I1 value)
		        {
		            if(this.C1I1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I1Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> C1I1Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I1Many2Many(I1 value)
		        {
					if(this.C1I1Many2Many == null)
					{
						this.C1I1Many2Many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.C1I1Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> C1I2One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I2One2Many(I2 value)
		        {
					if(this.C1I2One2Many == null)
					{
						this.C1I2One2Many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.C1I2One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? C1AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.C1AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> C1C1Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C1Many2Many(C1 value)
		        {
					if(this.C1C1Many2Many == null)
					{
						this.C1C1Many2Many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.C1C1Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Int64? C1AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsLong(global::System.Int64? value)
		        {
				    if(this.C1AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsLong = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I12> C1I12Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I12Many2Many(I12 value)
		        {
					if(this.C1I12Many2Many == null)
					{
						this.C1I12Many2Many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.C1I12Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Byte[] C1AllorsBinary {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.C1AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsBinary = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I12> C1I12One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I12One2Many(I12 value)
		        {
					if(this.C1I12One2Many == null)
					{
						this.C1I12One2Many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.C1I12One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> C1C2One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C2One2Many(C2 value)
		        {
					if(this.C1C2One2Many == null)
					{
						this.C1C2One2Many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.C1C2One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> C1C1One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C1One2Many(C1 value)
		        {
					if(this.C1C1One2Many == null)
					{
						this.C1C1One2Many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.C1C1One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.String AllorsStringMax {get; set;}

				/// <exclude/>
				public C1Builder WithAllorsStringMax(global::System.String value)
		        {
				    if(this.AllorsStringMax!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsStringMax = value;
		            return this;
		        }	

				public C1 C1C1Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1C1Many2One(C1 value)
		        {
		            if(this.C1C1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C1Many2One = value;
		            return this;
		        }		

				
				public global::System.Boolean? C1AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.C1AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsBoolean = value;
		            return this;
		        }	

				public I12 C1I12One2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1I12One2One(I12 value)
		        {
		            if(this.C1I12One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I12One2One = value;
		            return this;
		        }		

				
				public I12 C1I12Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1I12Many2One(I12 value)
		        {
		            if(this.C1I12Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I12Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> C1I2Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I2Many2Many(I2 value)
		        {
					if(this.C1I2Many2Many == null)
					{
						this.C1I2Many2Many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.C1I2Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Guid? C1AllorsUnique {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsUnique(global::System.Guid? value)
		        {
				    if(this.C1AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsUnique = value;
		            return this;
		        }	

				public I2 C1I2Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1I2Many2One(I2 value)
		        {
		            if(this.C1I2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I2Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> C1I1One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I1One2Many(I1 value)
		        {
					if(this.C1I1One2Many == null)
					{
						this.C1I1One2Many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.C1I1One2Many.Add(value);
		            return this;
		        }		

				
				public C2 C1C2One2One {get; set;}

				/// <exclude/>
				public C1Builder WithC1C2One2One(C2 value)
		        {
		            if(this.C1C2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C2One2One = value;
		            return this;
		        }		

				
				public global::System.Double? C1AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsDouble(global::System.Double? value)
		        {
				    if(this.C1AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsDouble = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C2> C1C2Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C2Many2Many(C2 value)
		        {
					if(this.C1C2Many2Many == null)
					{
						this.C1C2Many2Many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.C1C2Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Int32? C1AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsInteger(global::System.Int32? value)
		        {
				    if(this.C1AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsInteger = value;
		            return this;
		        }	

				public I1 I1I1Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1I1Many2One(I1 value)
		        {
		            if(this.I1I1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I1Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> I1I12Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I12Many2Many(I12 value)
		        {
					if(this.I1I12Many2Many == null)
					{
						this.I1I12Many2Many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I1I12Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> I1I2Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I2Many2Many(I2 value)
		        {
					if(this.I1I2Many2Many == null)
					{
						this.I1I2Many2Many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I1I2Many2Many.Add(value);
		            return this;
		        }		

				
				public I2 I1I2Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1I2Many2One(I2 value)
		        {
		            if(this.I1I2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I2Many2One = value;
		            return this;
		        }		

				
				public global::System.String I1AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsString(global::System.String value)
		        {
				    if(this.I1AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsString = value;
		            return this;
		        }	

				public I12 I1I12Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1I12Many2One(I12 value)
		        {
		            if(this.I1I12Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I12Many2One = value;
		            return this;
		        }		

				
				public global::System.DateTime? I1AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.I1AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsDateTime = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> I1I2One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I2One2Many(I2 value)
		        {
					if(this.I1I2One2Many == null)
					{
						this.I1I2One2Many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I1I2One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> I1C2One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C2One2Many(C2 value)
		        {
					if(this.I1C2One2Many == null)
					{
						this.I1C2One2Many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I1C2One2Many.Add(value);
		            return this;
		        }		

				
				public C1 I1C1One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1C1One2One(C1 value)
		        {
		            if(this.I1C1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C1One2One = value;
		            return this;
		        }		

				
				public global::System.Int32? I1AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsInteger(global::System.Int32? value)
		        {
				    if(this.I1AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsInteger = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C2> I1C2Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C2Many2Many(C2 value)
		        {
					if(this.I1C2Many2Many == null)
					{
						this.I1C2Many2Many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I1C2Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I1I1One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I1One2Many(I1 value)
		        {
					if(this.I1I1One2Many == null)
					{
						this.I1I1One2Many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I1I1One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I1I1Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I1Many2Many(I1 value)
		        {
					if(this.I1I1Many2Many == null)
					{
						this.I1I1Many2Many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I1I1Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Boolean? I1AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.I1AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Int64? I1AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsLong(global::System.Int64? value)
		        {
				    if(this.I1AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsLong = value;
		            return this;
		        }	

				public global::System.Decimal? I1AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.I1AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsDecimal = value;
		            return this;
		        }	

				public I12 I1I12One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1I12One2One(I12 value)
		        {
		            if(this.I1I12One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I12One2One = value;
		            return this;
		        }		

				
				public I2 I1I2One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1I2One2One(I2 value)
		        {
		            if(this.I1I2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I2One2One = value;
		            return this;
		        }		

				
				public C2 I1C2One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1C2One2One(C2 value)
		        {
		            if(this.I1C2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C2One2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> I1C1One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C1One2Many(C1 value)
		        {
					if(this.I1C1One2Many == null)
					{
						this.I1C1One2Many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I1C1One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Byte[] I1AllorsBinary {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.I1AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsBinary = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> I1C1Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C1Many2Many(C1 value)
		        {
					if(this.I1C1Many2Many == null)
					{
						this.I1C1Many2Many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I1C1Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Double? I1AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsDouble(global::System.Double? value)
		        {
				    if(this.I1AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsDouble = value;
		            return this;
		        }	

				public I1 I1I1One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1I1One2One(I1 value)
		        {
		            if(this.I1I1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I1One2One = value;
		            return this;
		        }		

				
				public C1 I1C1Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1C1Many2One(C1 value)
		        {
		            if(this.I1C1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C1Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> I1I12One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I12One2Many(I12 value)
		        {
					if(this.I1I12One2Many == null)
					{
						this.I1I12One2Many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I1I12One2Many.Add(value);
		            return this;
		        }		

				
				public C2 I1C2Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI1C2Many2One(C2 value)
		        {
		            if(this.I1C2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C2Many2One = value;
		            return this;
		        }		

				
				public global::System.Guid? I1AllorsUnique {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsUnique(global::System.Guid? value)
		        {
				    if(this.I1AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsUnique = value;
		            return this;
		        }	

				public global::System.Byte[] I12AllorsBinary {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.I12AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsBinary = value;
		            return this;
		        }	

				public C2 I12C2One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12C2One2One(C2 value)
		        {
		            if(this.I12C2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C2One2One = value;
		            return this;
		        }		

				
				public global::System.Double? I12AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsDouble(global::System.Double? value)
		        {
				    if(this.I12AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDouble = value;
		            return this;
		        }	

				public I1 I12I1Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12I1Many2One(I1 value)
		        {
		            if(this.I12I1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I1Many2One = value;
		            return this;
		        }		

				
				public global::System.String I12AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsString(global::System.String value)
		        {
				    if(this.I12AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsString = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I12> I12I12Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I12Many2Many(I12 value)
		        {
					if(this.I12I12Many2Many == null)
					{
						this.I12I12Many2Many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I12I12Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? I12AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.I12AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> I12I2Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I2Many2Many(I2 value)
		        {
					if(this.I12I2Many2Many == null)
					{
						this.I12I2Many2Many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I12I2Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> I12C2Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12C2Many2Many(C2 value)
		        {
					if(this.I12C2Many2Many == null)
					{
						this.I12C2Many2Many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I12C2Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I12I1Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I1Many2Many(I1 value)
		        {
					if(this.I12I1Many2Many == null)
					{
						this.I12I1Many2Many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I12I1Many2Many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> I12I12One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I12One2Many(I12 value)
		        {
					if(this.I12I12One2Many == null)
					{
						this.I12I12One2Many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I12I12One2Many.Add(value);
		            return this;
		        }		

				
				public global::System.String Name {get; set;}

				/// <exclude/>
				public C1Builder WithName(global::System.String value)
		        {
				    if(this.Name!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Name = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> I12C1Many2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12C1Many2Many(C1 value)
		        {
					if(this.I12C1Many2Many == null)
					{
						this.I12C1Many2Many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I12C1Many2Many.Add(value);
		            return this;
		        }		

				
				public I2 I12I2Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12I2Many2One(I2 value)
		        {
		            if(this.I12I2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I2Many2One = value;
		            return this;
		        }		

				
				public global::System.Guid? I12AllorsUnique {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsUnique(global::System.Guid? value)
		        {
				    if(this.I12AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsUnique = value;
		            return this;
		        }	

				public global::System.Int32? I12AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsInteger(global::System.Int32? value)
		        {
				    if(this.I12AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsInteger = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I1> I12I1One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I1One2Many(I1 value)
		        {
					if(this.I12I1One2Many == null)
					{
						this.I12I1One2Many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I12I1One2Many.Add(value);
		            return this;
		        }		

				
				public C1 I12C1One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12C1One2One(C1 value)
		        {
		            if(this.I12C1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C1One2One = value;
		            return this;
		        }		

				
				public global::System.Int64? I12AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsLong(global::System.Int64? value)
		        {
				    if(this.I12AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsLong = value;
		            return this;
		        }	

				public I12 I12I12One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12I12One2One(I12 value)
		        {
		            if(this.I12I12One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I12One2One = value;
		            return this;
		        }		

				
				public I2 I12I2One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12I2One2One(I2 value)
		        {
		            if(this.I12I2One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I2One2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> Dependency {get; set;}	

				/// <exclude/>
				public C1Builder WithDependency(I12 value)
		        {
					if(this.Dependency == null)
					{
						this.Dependency = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.Dependency.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> I12I2One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I2One2Many(I2 value)
		        {
					if(this.I12I2One2Many == null)
					{
						this.I12I2One2Many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I12I2One2Many.Add(value);
		            return this;
		        }		

				
				public C2 I12C2Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12C2Many2One(C2 value)
		        {
		            if(this.I12C2Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C2Many2One = value;
		            return this;
		        }		

				
				public I12 I12I12Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12I12Many2One(I12 value)
		        {
		            if(this.I12I12Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I12Many2One = value;
		            return this;
		        }		

				
				public global::System.Boolean? I12AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.I12AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsBoolean = value;
		            return this;
		        }	

				public I1 I12I1One2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12I1One2One(I1 value)
		        {
		            if(this.I12I1One2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I1One2One = value;
		            return this;
		        }		

				
				public global::System.DateTime? I12AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.I12AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDateTime = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> I12C1One2Many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12C1One2Many(C1 value)
		        {
					if(this.I12C1One2Many == null)
					{
						this.I12C1One2Many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I12C1One2Many.Add(value);
		            return this;
		        }		

				
				public C1 I12C1Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithI12C1Many2One(C1 value)
		        {
		            if(this.I12C1Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C1Many2One = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public C1Builder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermission {get; set;}	

				/// <exclude/>
				public C1Builder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermission == null)
					{
						this.DeniedPermission = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermission.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityToken {get; set;}	

				/// <exclude/>
				public C1Builder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityToken == null)
					{
						this.SecurityToken = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityToken.Add(value);
		            return this;
		        }		

				
				public SearchData SearchData {get; set;}

				/// <exclude/>
				public C1Builder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				

	}

	public partial class C1s : global::Allors.ObjectsBase<C1>
	{
		public static readonly C1Meta Meta = C1Meta.Instance;

		public C1s(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}