// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class UnitBuilder : Allors.ObjectBuilder<Unit> , AccessControlledObjectBuilder, UserInterfaceableBuilder, global::System.IDisposable
	{		
		public UnitBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Int64? AllorsLong {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsLong(global::System.Int64? value)
		        {
				    if(this.AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsLong = value;
		            return this;
		        }	

				public global::System.DateTime? AllorsDateTime {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsDateTime = value;
		            return this;
		        }	

				public global::System.Byte[] AllorsBinary {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsBinary(global::System.Byte[] value)
		        {
				    if(this.AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsBinary = value;
		            return this;
		        }	

				public global::System.Boolean? AllorsBoolean {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Double? AllorsDouble {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsDouble(global::System.Double? value)
		        {
				    if(this.AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsDouble = value;
		            return this;
		        }	

				public global::System.Int32? AllorsInteger {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsInteger(global::System.Int32? value)
		        {
				    if(this.AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsInteger = value;
		            return this;
		        }	

				public global::System.String AllorsString {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsString(global::System.String value)
		        {
				    if(this.AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsString = value;
		            return this;
		        }	

				public global::System.Guid? AllorsUnique {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsUnique(global::System.Guid? value)
		        {
				    if(this.AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsUnique = value;
		            return this;
		        }	

				public global::System.Decimal? AllorsDecimal {get; set;}

				/// <exclude/>
				public UnitBuilder WithAllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermission {get; set;}	

				/// <exclude/>
				public UnitBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermission == null)
					{
						this.DeniedPermission = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermission.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityToken {get; set;}	

				/// <exclude/>
				public UnitBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityToken == null)
					{
						this.SecurityToken = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityToken.Add(value);
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public UnitBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	


	}

	public partial class Units : global::Allors.ObjectsBase<Unit>
	{
		public static readonly UnitMeta Meta = UnitMeta.Instance;

		public Units(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}