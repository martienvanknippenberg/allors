// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class MailboxAddressBuilder : Allors.ObjectBuilder<MailboxAddress> , SearchableBuilder, AddressBuilder, global::System.IDisposable
	{		
		public MailboxAddressBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.String PoBox {get; set;}

				/// <exclude/>
				public MailboxAddressBuilder WithPoBox(global::System.String value)
		        {
				    if(this.PoBox!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PoBox = value;
		            return this;
		        }	

				public SearchData SearchData {get; set;}

				/// <exclude/>
				public MailboxAddressBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				
				public Place Place {get; set;}

				/// <exclude/>
				public MailboxAddressBuilder WithPlace(Place value)
		        {
		            if(this.Place!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Place = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public MailboxAddressBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermission {get; set;}	

				/// <exclude/>
				public MailboxAddressBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermission == null)
					{
						this.DeniedPermission = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermission.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityToken {get; set;}	

				/// <exclude/>
				public MailboxAddressBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityToken == null)
					{
						this.SecurityToken = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityToken.Add(value);
		            return this;
		        }		

				

	}

	public partial class MailboxAddresses : global::Allors.ObjectsBase<MailboxAddress>
	{
		public static readonly MailboxAddressMeta Meta = MailboxAddressMeta.Instance;

		public MailboxAddresses(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}