// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C1Builder : Allors.ObjectBuilder<C1> , I1Builder, I12Builder, global::System.IDisposable
	{		
		public C1Builder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Decimal? C1DecimalBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithC1DecimalBetweenA(global::System.Decimal? value)
		        {
				    if(this.C1DecimalBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DecimalBetweenA = value;
		            return this;
		        }	

				public global::System.Int64? C1LongLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1LongLessThan(global::System.Int64? value)
		        {
				    if(this.C1LongLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1LongLessThan = value;
		            return this;
		        }	

				public I2 C1I2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1I2one2one(I2 value)
		        {
		            if(this.C1I2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I2one2one = value;
		            return this;
		        }		

				
				public global::System.Decimal? C1DecimalBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithC1DecimalBetweenB(global::System.Decimal? value)
		        {
				    if(this.C1DecimalBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DecimalBetweenB = value;
		            return this;
		        }	

				public global::System.String Argument {get; set;}

				/// <exclude/>
				public C1Builder WithArgument(global::System.String value)
		        {
				    if(this.Argument!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Argument = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<S1> C1S1one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1S1one2many(S1 value)
		        {
					if(this.C1S1one2many == null)
					{
						this.C1S1one2many = new global::System.Collections.Generic.List<S1>(); 
					}
		            this.C1S1one2many.Add(value);
		            return this;
		        }		

				
				public I12 C1I12one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1I12one2one(I12 value)
		        {
		            if(this.C1I12one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I12one2one = value;
		            return this;
		        }		

				
				public global::System.String C1AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsString(global::System.String value)
		        {
				    if(this.C1AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsString = value;
		            return this;
		        }	

				public C1 C1C1many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1C1many2one(C1 value)
		        {
		            if(this.C1C1many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C1many2one = value;
		            return this;
		        }		

				
				public S2 C1S2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1S2many2one(S2 value)
		        {
		            if(this.C1S2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1S2many2one = value;
		            return this;
		        }		

				
				public global::System.Double? C1DoubleBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithC1DoubleBetweenA(global::System.Double? value)
		        {
				    if(this.C1DoubleBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DoubleBetweenA = value;
		            return this;
		        }	

				public C1 Many2One {get; set;}

				/// <exclude/>
				public C1Builder WithMany2One(C1 value)
		        {
		            if(this.Many2One!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Many2One = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> C1C1many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C1many2many(C1 value)
		        {
					if(this.C1C1many2many == null)
					{
						this.C1C1many2many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.C1C1many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S1> C1S1many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1S1many2many(S1 value)
		        {
					if(this.C1S1many2many == null)
					{
						this.C1S1many2many = new global::System.Collections.Generic.List<S1>(); 
					}
		            this.C1S1many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Double? C1DoubleBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithC1DoubleBetweenB(global::System.Double? value)
		        {
				    if(this.C1DoubleBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DoubleBetweenB = value;
		            return this;
		        }	

				public I1 C1I1one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1I1one2one(I1 value)
		        {
		            if(this.C1I1one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I1one2one = value;
		            return this;
		        }		

				
				public global::System.Int32? C1IntegerLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1IntegerLessThan(global::System.Int32? value)
		        {
				    if(this.C1IntegerLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1IntegerLessThan = value;
		            return this;
		        }	

				public global::System.String C1StringLarge {get; set;}

				/// <exclude/>
				public C1Builder WithC1StringLarge(global::System.String value)
		        {
				    if(this.C1StringLarge!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1StringLarge = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> C1I2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I2one2many(I2 value)
		        {
					if(this.C1I2one2many == null)
					{
						this.C1I2one2many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.C1I2one2many.Add(value);
		            return this;
		        }		

				
				public C1 C1C1one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1C1one2one(C1 value)
		        {
		            if(this.C1C1one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C1one2one = value;
		            return this;
		        }		

				
				public global::System.Double? C1DoubleGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1DoubleGreaterThan(global::System.Double? value)
		        {
				    if(this.C1DoubleGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DoubleGreaterThan = value;
		            return this;
		        }	

				public I2 C1I2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1I2many2one(I2 value)
		        {
		            if(this.C1I2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I2many2one = value;
		            return this;
		        }		

				
				public I12 C1I12many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1I12many2one(I12 value)
		        {
		            if(this.C1I12many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I12many2one = value;
		            return this;
		        }		

				
				public global::System.DateTime? C1DateTimeLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1DateTimeLessThan(global::System.DateTime? value)
		        {
				    if(this.C1DateTimeLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DateTimeLessThan = value;
		            return this;
		        }	

				public global::System.DateTime? C1DateTimeBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithC1DateTimeBetweenA(global::System.DateTime? value)
		        {
				    if(this.C1DateTimeBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DateTimeBetweenA = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C2> C1C2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C2many2many(C2 value)
		        {
					if(this.C1C2many2many == null)
					{
						this.C1C2many2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.C1C2many2many.Add(value);
		            return this;
		        }		

				
				public S1 C1S1many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1S1many2one(S1 value)
		        {
		            if(this.C1S1many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1S1many2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> C1I1many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I1many2many(I1 value)
		        {
					if(this.C1I1many2many == null)
					{
						this.C1I1many2many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.C1I1many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Double? C1DoubleLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1DoubleLessThan(global::System.Double? value)
		        {
				    if(this.C1DoubleLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DoubleLessThan = value;
		            return this;
		        }	

				public I1 C1I1many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1I1many2one(I1 value)
		        {
		            if(this.C1I1many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1I1many2one = value;
		            return this;
		        }		

				
				public global::System.Int64? C1LongGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1LongGreaterThan(global::System.Int64? value)
		        {
				    if(this.C1LongGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1LongGreaterThan = value;
		            return this;
		        }	

				public global::System.Decimal? C1DecimalGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1DecimalGreaterThan(global::System.Decimal? value)
		        {
				    if(this.C1DecimalGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DecimalGreaterThan = value;
		            return this;
		        }	

				public global::System.Decimal? C1AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.C1AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Int64? C1AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsLong(global::System.Int64? value)
		        {
				    if(this.C1AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsLong = value;
		            return this;
		        }	

				public S2 C1S2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1S2one2one(S2 value)
		        {
		            if(this.C1S2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1S2one2one = value;
		            return this;
		        }		

				
				public global::System.DateTime? C1DateTimeBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithC1DateTimeBetweenB(global::System.DateTime? value)
		        {
				    if(this.C1DateTimeBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DateTimeBetweenB = value;
		            return this;
		        }	

				public global::System.Byte[] C1AllorsBinary {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.C1AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsBinary = value;
		            return this;
		        }	

				public global::System.DateTime? C1DateTimeGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1DateTimeGreaterThan(global::System.DateTime? value)
		        {
				    if(this.C1DateTimeGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DateTimeGreaterThan = value;
		            return this;
		        }	

				public S1 C1S1one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1S1one2one(S1 value)
		        {
		            if(this.C1S1one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1S1one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> C1C1one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C1one2many(C1 value)
		        {
					if(this.C1C1one2many == null)
					{
						this.C1C1one2many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.C1C1one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> C1I1one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I1one2many(I1 value)
		        {
					if(this.C1I1one2many == null)
					{
						this.C1I1one2many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.C1I1one2many.Add(value);
		            return this;
		        }		

				
				public C2 C1C2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1C2many2one(C2 value)
		        {
		            if(this.C1C2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C2many2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> C1I12one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I12one2many(I12 value)
		        {
					if(this.C1I12one2many == null)
					{
						this.C1I12one2many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.C1I12one2many.Add(value);
		            return this;
		        }		

				
				public S2 C1S2many2many {get; set;}

				/// <exclude/>
				public C1Builder WithC1S2many2many(S2 value)
		        {
		            if(this.C1S2many2many!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1S2many2many = value;
		            return this;
		        }		

				
				public C2 C1C2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1C2one2one(C2 value)
		        {
		            if(this.C1C2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C2one2one = value;
		            return this;
		        }		

				
				public global::System.Boolean? C1AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.C1AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I12> C1I12many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I12many2many(I12 value)
		        {
					if(this.C1I12many2many == null)
					{
						this.C1I12many2many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.C1I12many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> C1I2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1I2many2many(I2 value)
		        {
					if(this.C1I2many2many == null)
					{
						this.C1I2many2many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.C1I2many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Guid? C1AllorsUnique {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsUnique(global::System.Guid? value)
		        {
				    if(this.C1AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsUnique = value;
		            return this;
		        }	

				public C3 C1C3one2one {get; set;}

				/// <exclude/>
				public C1Builder WithC1C3one2one(C3 value)
		        {
		            if(this.C1C3one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C1C3one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C3> C1C3many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C3many2many(C3 value)
		        {
					if(this.C1C3many2many == null)
					{
						this.C1C3many2many = new global::System.Collections.Generic.List<C3>(); 
					}
		            this.C1C3many2many.Add(value);
		            return this;
		        }		

				
				public global::System.String C1StringEquals {get; set;}

				/// <exclude/>
				public C1Builder WithC1StringEquals(global::System.String value)
		        {
				    if(this.C1StringEquals!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1StringEquals = value;
		            return this;
		        }	

				public global::System.Int64? C1LongBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithC1LongBetweenA(global::System.Int64? value)
		        {
				    if(this.C1LongBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1LongBetweenA = value;
		            return this;
		        }	

				public global::System.Int32? C1IntegerGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1IntegerGreaterThan(global::System.Int32? value)
		        {
				    if(this.C1IntegerGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1IntegerGreaterThan = value;
		            return this;
		        }	

				public C3 C3may2one {get; set;}

				/// <exclude/>
				public C1Builder WithC3may2one(C3 value)
		        {
		            if(this.C3may2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C3may2one = value;
		            return this;
		        }		

				
				public global::System.Int32? C1IntegerBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithC1IntegerBetweenB(global::System.Int32? value)
		        {
				    if(this.C1IntegerBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1IntegerBetweenB = value;
		            return this;
		        }	

				public global::System.DateTime? C1AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.C1AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsDateTime = value;
		            return this;
		        }	

				public global::System.Int32? C1IntegerBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithC1IntegerBetweenA(global::System.Int32? value)
		        {
				    if(this.C1IntegerBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1IntegerBetweenA = value;
		            return this;
		        }	

				public global::System.Double? C1AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsDouble(global::System.Double? value)
		        {
				    if(this.C1AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsDouble = value;
		            return this;
		        }	

				public global::System.Int64? C1LongBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithC1LongBetweenB(global::System.Int64? value)
		        {
				    if(this.C1LongBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1LongBetweenB = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C2> C1C2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C2one2many(C2 value)
		        {
					if(this.C1C2one2many == null)
					{
						this.C1C2one2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.C1C2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S2> C1S2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1S2one2many(S2 value)
		        {
					if(this.C1S2one2many == null)
					{
						this.C1S2one2many = new global::System.Collections.Generic.List<S2>(); 
					}
		            this.C1S2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Int32? C1AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithC1AllorsInteger(global::System.Int32? value)
		        {
				    if(this.C1AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1AllorsInteger = value;
		            return this;
		        }	

				public global::System.Decimal? C1DecimalLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithC1DecimalLessThan(global::System.Decimal? value)
		        {
				    if(this.C1DecimalLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.C1DecimalLessThan = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C3> C1C3one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithC1C3one2many(C3 value)
		        {
					if(this.C1C3one2many == null)
					{
						this.C1C3one2many = new global::System.Collections.Generic.List<C3>(); 
					}
		            this.C1C3one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I34> I1I34one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I34one2many(I34 value)
		        {
					if(this.I1I34one2many == null)
					{
						this.I1I34one2many = new global::System.Collections.Generic.List<I34>(); 
					}
		            this.I1I34one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I2> I1I2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I2one2many(I2 value)
		        {
					if(this.I1I2one2many == null)
					{
						this.I1I2one2many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I1I2one2many.Add(value);
		            return this;
		        }		

				
				public I2 I1I2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I2many2one(I2 value)
		        {
		            if(this.I1I2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I2many2one = value;
		            return this;
		        }		

				
				public C2 I1C2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1C2many2one(C2 value)
		        {
		            if(this.I1C2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C2many2one = value;
		            return this;
		        }		

				
				public C2 I1C2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1C2one2one(C2 value)
		        {
		            if(this.I1C2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C2one2one = value;
		            return this;
		        }		

				
				public global::System.Decimal? I1DecimalBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithI1DecimalBetweenA(global::System.Decimal? value)
		        {
				    if(this.I1DecimalBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DecimalBetweenA = value;
		            return this;
		        }	

				public S1 I1S1one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1S1one2one(S1 value)
		        {
		            if(this.I1S1one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1S1one2one = value;
		            return this;
		        }		

				
				public I12 I1I12many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I12many2one(I12 value)
		        {
		            if(this.I1I12many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I12many2one = value;
		            return this;
		        }		

				
				public global::System.String I1AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsString(global::System.String value)
		        {
				    if(this.I1AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsString = value;
		            return this;
		        }	

				public global::System.DateTime? I1DateTimeLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1DateTimeLessThan(global::System.DateTime? value)
		        {
				    if(this.I1DateTimeLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DateTimeLessThan = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C2> I1C2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C2one2many(C2 value)
		        {
					if(this.I1C2one2many == null)
					{
						this.I1C2one2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I1C2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.String I1StringLarge {get; set;}

				/// <exclude/>
				public C1Builder WithI1StringLarge(global::System.String value)
		        {
				    if(this.I1StringLarge!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1StringLarge = value;
		            return this;
		        }	

				public global::System.Double? I1DoubleLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1DoubleLessThan(global::System.Double? value)
		        {
				    if(this.I1DoubleLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DoubleLessThan = value;
		            return this;
		        }	

				public global::System.DateTime? I1AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.I1AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsDateTime = value;
		            return this;
		        }	

				public C1 I1C1many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1C1many2one(C1 value)
		        {
		            if(this.I1C1many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C1many2one = value;
		            return this;
		        }		

				
				public global::System.Int64? I1LongBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithI1LongBetweenB(global::System.Int64? value)
		        {
				    if(this.I1LongBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1LongBetweenB = value;
		            return this;
		        }	

				public I12 I1I12one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I12one2one(I12 value)
		        {
		            if(this.I1I12one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I12one2one = value;
		            return this;
		        }		

				
				public global::System.Decimal? I1DecimalGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1DecimalGreaterThan(global::System.Decimal? value)
		        {
				    if(this.I1DecimalGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DecimalGreaterThan = value;
		            return this;
		        }	

				public C1 I1C1one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1C1one2one(C1 value)
		        {
		            if(this.I1C1one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1C1one2one = value;
		            return this;
		        }		

				
				public global::System.Int64? I1LongLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1LongLessThan(global::System.Int64? value)
		        {
				    if(this.I1LongLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1LongLessThan = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I2> I1I2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I2many2many(I2 value)
		        {
					if(this.I1I2many2many == null)
					{
						this.I1I2many2many = new global::System.Collections.Generic.List<I2>(); 
					}
		            this.I1I2many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Int32? I1IntegerBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithI1IntegerBetweenA(global::System.Int32? value)
		        {
				    if(this.I1IntegerBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1IntegerBetweenA = value;
		            return this;
		        }	

				public I34 I1I34many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I34many2one(I34 value)
		        {
		            if(this.I1I34many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I34many2one = value;
		            return this;
		        }		

				
				public global::System.Double? I1DoubleBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithI1DoubleBetweenA(global::System.Double? value)
		        {
				    if(this.I1DoubleBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DoubleBetweenA = value;
		            return this;
		        }	

				public global::System.Int32? I1IntegerLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1IntegerLessThan(global::System.Int32? value)
		        {
				    if(this.I1IntegerLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1IntegerLessThan = value;
		            return this;
		        }	

				public global::System.Int32? I1AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsInteger(global::System.Int32? value)
		        {
				    if(this.I1AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsInteger = value;
		            return this;
		        }	

				public S2 I1S2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1S2one2one(S2 value)
		        {
		            if(this.I1S2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1S2one2one = value;
		            return this;
		        }		

				
				public global::System.Boolean? I1AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.I1AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsBoolean = value;
		            return this;
		        }	

				public I1 I1I1many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I1many2one(I1 value)
		        {
		            if(this.I1I1many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I1many2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C1> I1C1many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C1many2many(C1 value)
		        {
					if(this.I1C1many2many == null)
					{
						this.I1C1many2many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I1C1many2many.Add(value);
		            return this;
		        }		

				
				public I2 I1I2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I2one2one(I2 value)
		        {
		            if(this.I1I2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I2one2one = value;
		            return this;
		        }		

				
				public global::System.Int64? I1AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsLong(global::System.Int64? value)
		        {
				    if(this.I1AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsLong = value;
		            return this;
		        }	

				public global::System.Decimal? I1AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.I1AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<S1> I1S1many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1S1many2many(S1 value)
		        {
					if(this.I1S1many2many == null)
					{
						this.I1S1many2many = new global::System.Collections.Generic.List<S1>(); 
					}
		            this.I1S1many2many.Add(value);
		            return this;
		        }		

				
				public global::System.DateTime? I1DateTimeGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1DateTimeGreaterThan(global::System.DateTime? value)
		        {
				    if(this.I1DateTimeGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DateTimeGreaterThan = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I34> I1I34many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I34many2many(I34 value)
		        {
					if(this.I1I34many2many == null)
					{
						this.I1I34many2many = new global::System.Collections.Generic.List<I34>(); 
					}
		            this.I1I34many2many.Add(value);
		            return this;
		        }		

				
				public I34 I1I34one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I34one2one(I34 value)
		        {
		            if(this.I1I34one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I34one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I1I1one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I1one2many(I1 value)
		        {
					if(this.I1I1one2many == null)
					{
						this.I1I1one2many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I1I1one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I1> I1I1many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I1many2many(I1 value)
		        {
					if(this.I1I1many2many == null)
					{
						this.I1I1many2many = new global::System.Collections.Generic.List<I1>(); 
					}
		            this.I1I1many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S2> I1S2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1S2many2many(S2 value)
		        {
					if(this.I1S2many2many == null)
					{
						this.I1S2many2many = new global::System.Collections.Generic.List<S2>(); 
					}
		            this.I1S2many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I12> I1I12many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I12many2many(I12 value)
		        {
					if(this.I1I12many2many == null)
					{
						this.I1I12many2many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I1I12many2many.Add(value);
		            return this;
		        }		

				
				public global::System.String I1StringEquals {get; set;}

				/// <exclude/>
				public C1Builder WithI1StringEquals(global::System.String value)
		        {
				    if(this.I1StringEquals!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1StringEquals = value;
		            return this;
		        }	

				public global::System.Int64? I1LongGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1LongGreaterThan(global::System.Int64? value)
		        {
				    if(this.I1LongGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1LongGreaterThan = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I12> I1I12one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1I12one2many(I12 value)
		        {
					if(this.I1I12one2many == null)
					{
						this.I1I12one2many = new global::System.Collections.Generic.List<I12>(); 
					}
		            this.I1I12one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S2> I1S2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1S2one2many(S2 value)
		        {
					if(this.I1S2one2many == null)
					{
						this.I1S2one2many = new global::System.Collections.Generic.List<S2>(); 
					}
		            this.I1S2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> I1C2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C2many2many(C2 value)
		        {
					if(this.I1C2many2many == null)
					{
						this.I1C2many2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I1C2many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Byte[] I1AllorsBinary {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.I1AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsBinary = value;
		            return this;
		        }	

				public global::System.Decimal? I1DecimalBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithI1DecimalBetweenB(global::System.Decimal? value)
		        {
				    if(this.I1DecimalBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DecimalBetweenB = value;
		            return this;
		        }	

				public global::System.Int64? I1LongBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithI1LongBetweenA(global::System.Int64? value)
		        {
				    if(this.I1LongBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1LongBetweenA = value;
		            return this;
		        }	

				public global::System.Double? I1DoubleGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1DoubleGreaterThan(global::System.Double? value)
		        {
				    if(this.I1DoubleGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DoubleGreaterThan = value;
		            return this;
		        }	

				public global::System.Int32? I1IntegerBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithI1IntegerBetweenB(global::System.Int32? value)
		        {
				    if(this.I1IntegerBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1IntegerBetweenB = value;
		            return this;
		        }	

				public global::System.DateTime? I1DateTimeBetweenA {get; set;}

				/// <exclude/>
				public C1Builder WithI1DateTimeBetweenA(global::System.DateTime? value)
		        {
				    if(this.I1DateTimeBetweenA!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DateTimeBetweenA = value;
		            return this;
		        }	

				public global::System.Double? I1AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsDouble(global::System.Double? value)
		        {
				    if(this.I1AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsDouble = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<S1> I1S1one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1S1one2many(S1 value)
		        {
					if(this.I1S1one2many == null)
					{
						this.I1S1one2many = new global::System.Collections.Generic.List<S1>(); 
					}
		            this.I1S1one2many.Add(value);
		            return this;
		        }		

				
				public I1 I1I1one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1I1one2one(I1 value)
		        {
		            if(this.I1I1one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1I1one2one = value;
		            return this;
		        }		

				
				public global::System.Int32? I1IntegerGreaterThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1IntegerGreaterThan(global::System.Int32? value)
		        {
				    if(this.I1IntegerGreaterThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1IntegerGreaterThan = value;
		            return this;
		        }	

				public S1 I1S1many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1S1many2one(S1 value)
		        {
		            if(this.I1S1many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1S1many2one = value;
		            return this;
		        }		

				
				public global::System.Double? I1DoubleBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithI1DoubleBetweenB(global::System.Double? value)
		        {
				    if(this.I1DoubleBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DoubleBetweenB = value;
		            return this;
		        }	

				public global::System.Decimal? I1DecimalLessThan {get; set;}

				/// <exclude/>
				public C1Builder WithI1DecimalLessThan(global::System.Decimal? value)
		        {
				    if(this.I1DecimalLessThan!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DecimalLessThan = value;
		            return this;
		        }	

				public global::System.DateTime? I1DateTimeBetweenB {get; set;}

				/// <exclude/>
				public C1Builder WithI1DateTimeBetweenB(global::System.DateTime? value)
		        {
				    if(this.I1DateTimeBetweenB!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1DateTimeBetweenB = value;
		            return this;
		        }	

				public global::System.Guid? I1AllorsUnique {get; set;}

				/// <exclude/>
				public C1Builder WithI1AllorsUnique(global::System.Guid? value)
		        {
				    if(this.I1AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I1AllorsUnique = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> I1C1one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI1C1one2many(C1 value)
		        {
					if(this.I1C1one2many == null)
					{
						this.I1C1one2many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.I1C1one2many.Add(value);
		            return this;
		        }		

				
				public S2 I1S2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI1S2many2one(S2 value)
		        {
		            if(this.I1S2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I1S2many2one = value;
		            return this;
		        }		

				
				public global::System.Decimal? S1AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.S1AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Int32? S1AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsInteger(global::System.Int32? value)
		        {
				    if(this.S1AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsInteger = value;
		            return this;
		        }	

				public global::System.Byte[] S1AllorsBinary {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsBinary(global::System.Byte[] value)
		        {
				    if(this.S1AllorsBinary!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsBinary = value;
		            return this;
		        }	

				public global::System.Guid? S1AllorsUnique {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsUnique(global::System.Guid? value)
		        {
				    if(this.S1AllorsUnique!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsUnique = value;
		            return this;
		        }	

				public global::System.String S1StringLarge {get; set;}

				/// <exclude/>
				public C1Builder WithS1StringLarge(global::System.String value)
		        {
				    if(this.S1StringLarge!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1StringLarge = value;
		            return this;
		        }	

				public S2 S1S2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1S2many2one(S2 value)
		        {
		            if(this.S1S2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1S2many2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S2> S1S2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1S2one2many(S2 value)
		        {
					if(this.S1S2one2many == null)
					{
						this.S1S2one2many = new global::System.Collections.Generic.List<S2>(); 
					}
		            this.S1S2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Double? S1AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsDouble(global::System.Double? value)
		        {
				    if(this.S1AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsDouble = value;
		            return this;
		        }	

				public global::System.String S1AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsString(global::System.String value)
		        {
				    if(this.S1AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsString = value;
		            return this;
		        }	

				public C1 S1C1many2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1C1many2one(C1 value)
		        {
		            if(this.S1C1many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1C1many2one = value;
		            return this;
		        }		

				
				public C1 S1C1one2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1C1one2one(C1 value)
		        {
		            if(this.S1C1one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1C1one2one = value;
		            return this;
		        }		

				
				public global::System.Boolean? S1AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.S1AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> S1C1many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1C1many2many(C1 value)
		        {
					if(this.S1C1many2many == null)
					{
						this.S1C1many2many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.S1C1many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S2> S1S2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1S2many2many(S2 value)
		        {
					if(this.S1S2many2many == null)
					{
						this.S1S2many2many = new global::System.Collections.Generic.List<S2>(); 
					}
		            this.S1S2many2many.Add(value);
		            return this;
		        }		

				
				public S2 S1S2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1S2one2one(S2 value)
		        {
		            if(this.S1S2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1S2one2one = value;
		            return this;
		        }		

				
				public global::System.Int64? S1AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsLong(global::System.Int64? value)
		        {
				    if(this.S1AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsLong = value;
		            return this;
		        }	

				public global::System.DateTime? S1AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithS1AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.S1AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1AllorsDateTime = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C1> S1C1one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1C1one2many(C1 value)
		        {
					if(this.S1C1one2many == null)
					{
						this.S1C1one2many = new global::System.Collections.Generic.List<C1>(); 
					}
		            this.S1C1one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Double? S1234AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithS1234AllorsDouble(global::System.Double? value)
		        {
				    if(this.S1234AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1234AllorsDouble = value;
		            return this;
		        }	

				public global::System.Decimal? S1234AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithS1234AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.S1234AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1234AllorsDecimal = value;
		            return this;
		        }	

				public global::System.Int32? S1234AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithS1234AllorsInteger(global::System.Int32? value)
		        {
				    if(this.S1234AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1234AllorsInteger = value;
		            return this;
		        }	

				public S1234 S1234many2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1234many2one(S1234 value)
		        {
		            if(this.S1234many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1234many2one = value;
		            return this;
		        }		

				
				public C2 S1234C2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1234C2one2one(C2 value)
		        {
		            if(this.S1234C2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1234C2one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> S1234C2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1234C2many2many(C2 value)
		        {
					if(this.S1234C2many2many == null)
					{
						this.S1234C2many2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.S1234C2many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S1234> S1234one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1234one2many(S1234 value)
		        {
					if(this.S1234one2many == null)
					{
						this.S1234one2many = new global::System.Collections.Generic.List<S1234>(); 
					}
		            this.S1234one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> S1234C2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1234C2one2many(C2 value)
		        {
					if(this.S1234C2one2many == null)
					{
						this.S1234C2one2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.S1234C2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<S1234> S1234many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS1234many2many(S1234 value)
		        {
					if(this.S1234many2many == null)
					{
						this.S1234many2many = new global::System.Collections.Generic.List<S1234>(); 
					}
		            this.S1234many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Int64? S1234AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithS1234AllorsLong(global::System.Int64? value)
		        {
				    if(this.S1234AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1234AllorsLong = value;
		            return this;
		        }	

				public global::System.String ClassName {get; set;}

				/// <exclude/>
				public C1Builder WithClassName(global::System.String value)
		        {
				    if(this.ClassName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ClassName = value;
		            return this;
		        }	

				public global::System.DateTime? S1234AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithS1234AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.S1234AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1234AllorsDateTime = value;
		            return this;
		        }	

				public S1234 S1234one2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1234one2one(S1234 value)
		        {
		            if(this.S1234one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1234one2one = value;
		            return this;
		        }		

				
				public C2 S1234C2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithS1234C2many2one(C2 value)
		        {
		            if(this.S1234C2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S1234C2many2one = value;
		            return this;
		        }		

				
				public global::System.String S1234AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithS1234AllorsString(global::System.String value)
		        {
				    if(this.S1234AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1234AllorsString = value;
		            return this;
		        }	

				public global::System.Boolean? S1234AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithS1234AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.S1234AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S1234AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Boolean? I12AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.I12AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Int32? I12AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsInteger(global::System.Int32? value)
		        {
				    if(this.I12AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsInteger = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<I34> I12I34one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I34one2many(I34 value)
		        {
					if(this.I12I34one2many == null)
					{
						this.I12I34one2many = new global::System.Collections.Generic.List<I34>(); 
					}
		            this.I12I34one2many.Add(value);
		            return this;
		        }		

				
				public C3 C3many2one {get; set;}

				/// <exclude/>
				public C1Builder WithC3many2one(C3 value)
		        {
		            if(this.C3many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.C3many2one = value;
		            return this;
		        }		

				
				public C2 I12C2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI12C2many2one(C2 value)
		        {
		            if(this.I12C2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C2many2one = value;
		            return this;
		        }		

				
				public global::System.Double? I12AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsDouble(global::System.Double? value)
		        {
				    if(this.I12AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDouble = value;
		            return this;
		        }	

				public I34 I12I34many2one {get; set;}

				/// <exclude/>
				public C1Builder WithI12I34many2one(I34 value)
		        {
		            if(this.I12I34many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I34many2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<I34> I12I34many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12I34many2many(I34 value)
		        {
					if(this.I12I34many2many == null)
					{
						this.I12I34many2many = new global::System.Collections.Generic.List<I34>(); 
					}
		            this.I12I34many2many.Add(value);
		            return this;
		        }		

				
				public C3 I12C3one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI12C3one2one(C3 value)
		        {
		            if(this.I12C3one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C3one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> I12C2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12C2many2many(C2 value)
		        {
					if(this.I12C2many2many == null)
					{
						this.I12C2many2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I12C2many2many.Add(value);
		            return this;
		        }		

				
				public global::System.Int64? I12AllorsLong {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsLong(global::System.Int64? value)
		        {
				    if(this.I12AllorsLong!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsLong = value;
		            return this;
		        }	

				public global::System.Decimal? I12AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.I12AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDecimal = value;
		            return this;
		        }	

				public C2 I12C2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI12C2one2one(C2 value)
		        {
		            if(this.I12C2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12C2one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C3> I12C3one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12C3one2many(C3 value)
		        {
					if(this.I12C3one2many == null)
					{
						this.I12C3one2many = new global::System.Collections.Generic.List<C3>(); 
					}
		            this.I12C3one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C3> I12C3many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12C3many2many(C3 value)
		        {
					if(this.I12C3many2many == null)
					{
						this.I12C3many2many = new global::System.Collections.Generic.List<C3>(); 
					}
		            this.I12C3many2many.Add(value);
		            return this;
		        }		

				
				public global::System.String PrefetchTest {get; set;}

				/// <exclude/>
				public C1Builder WithPrefetchTest(global::System.String value)
		        {
				    if(this.PrefetchTest!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PrefetchTest = value;
		            return this;
		        }	

				public global::System.DateTime? I12AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.I12AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsDateTime = value;
		            return this;
		        }	

				public global::System.String I12AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithI12AllorsString(global::System.String value)
		        {
				    if(this.I12AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.I12AllorsString = value;
		            return this;
		        }	

				public I34 I12I34one2one {get; set;}

				/// <exclude/>
				public C1Builder WithI12I34one2one(I34 value)
		        {
		            if(this.I12I34one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.I12I34one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> I12C2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithI12C2one2many(C2 value)
		        {
					if(this.I12C2one2many == null)
					{
						this.I12C2one2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.I12C2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.String S12AllorsString {get; set;}

				/// <exclude/>
				public C1Builder WithS12AllorsString(global::System.String value)
		        {
				    if(this.S12AllorsString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S12AllorsString = value;
		            return this;
		        }	

				public global::System.DateTime? S12AllorsDateTime {get; set;}

				/// <exclude/>
				public C1Builder WithS12AllorsDateTime(global::System.DateTime? value)
		        {
				    if(this.S12AllorsDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S12AllorsDateTime = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<C2> S12C2many2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS12C2many2many(C2 value)
		        {
					if(this.S12C2many2many == null)
					{
						this.S12C2many2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.S12C2many2many.Add(value);
		            return this;
		        }		

				
				public C2 S12C2many2one {get; set;}

				/// <exclude/>
				public C1Builder WithS12C2many2one(C2 value)
		        {
		            if(this.S12C2many2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S12C2many2one = value;
		            return this;
		        }		

				
				public C2 S12C2one2one {get; set;}

				/// <exclude/>
				public C1Builder WithS12C2one2one(C2 value)
		        {
		            if(this.S12C2one2one!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.S12C2one2one = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<C2> S12C2one2many {get; set;}	

				/// <exclude/>
				public C1Builder WithS12C2one2many(C2 value)
		        {
					if(this.S12C2one2many == null)
					{
						this.S12C2one2many = new global::System.Collections.Generic.List<C2>(); 
					}
		            this.S12C2one2many.Add(value);
		            return this;
		        }		

				
				public global::System.Boolean? S12AllorsBoolean {get; set;}

				/// <exclude/>
				public C1Builder WithS12AllorsBoolean(global::System.Boolean? value)
		        {
				    if(this.S12AllorsBoolean!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S12AllorsBoolean = value;
		            return this;
		        }	

				public global::System.Double? S12AllorsDouble {get; set;}

				/// <exclude/>
				public C1Builder WithS12AllorsDouble(global::System.Double? value)
		        {
				    if(this.S12AllorsDouble!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S12AllorsDouble = value;
		            return this;
		        }	

				public global::System.Int32? S12AllorsInteger {get; set;}

				/// <exclude/>
				public C1Builder WithS12AllorsInteger(global::System.Int32? value)
		        {
				    if(this.S12AllorsInteger!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S12AllorsInteger = value;
		            return this;
		        }	

				public global::System.Decimal? S12AllorsDecimal {get; set;}

				/// <exclude/>
				public C1Builder WithS12AllorsDecimal(global::System.Decimal? value)
		        {
				    if(this.S12AllorsDecimal!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.S12AllorsDecimal = value;
		            return this;
		        }	


	}

	public partial class C1s : global::Allors.ObjectsBase<C1>
	{
		public static readonly C1Meta Meta = C1Meta.Instance;

		public C1s(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}