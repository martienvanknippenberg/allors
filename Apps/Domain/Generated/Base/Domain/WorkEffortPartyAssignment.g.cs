// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class WorkEffortPartyAssignment
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (WorkEffortPartyAssignmentBuilder)objectBuilder;
			

			if(builder.FromDate.HasValue)
			{
				this.FromDate = builder.FromDate.Value;
			}			
					

			if(builder.ThroughDate.HasValue)
			{
				this.ThroughDate = builder.ThroughDate.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.Comment = builder.Comment;
		

			this.Assignment = builder.Assignment;



			this.Party = builder.Party;



			this.Facility = builder.Facility;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class WorkEffortPartyAssignmentBuilder : Allors.ObjectBuilder<WorkEffortPartyAssignment> , PeriodBuilder, UserInterfaceableBuilder, CommentableBuilder, global::System.IDisposable
	{		
		public WorkEffortPartyAssignmentBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public WorkEffort Assignment {get; set;}

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithAssignment(WorkEffort value)
		        {
		            if(this.Assignment!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Assignment = value;
		            return this;
		        }		

				
				public Party Party {get; set;}

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithParty(Party value)
		        {
		            if(this.Party!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Party = value;
		            return this;
		        }		

				
				public Facility Facility {get; set;}

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithFacility(Facility value)
		        {
		            if(this.Facility!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Facility = value;
		            return this;
		        }		

				
				public global::System.DateTime? FromDate {get; set;}

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithFromDate(global::System.DateTime? value)
		        {
				    if(this.FromDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.FromDate = value;
		            return this;
		        }	

				public global::System.DateTime? ThroughDate {get; set;}

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithThroughDate(global::System.DateTime? value)
		        {
				    if(this.ThroughDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ThroughDate = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public global::System.String Comment {get; set;}

				/// <exclude/>
				public WorkEffortPartyAssignmentBuilder WithComment(global::System.String value)
		        {
				    if(this.Comment!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Comment = value;
		            return this;
		        }	


	}

	public partial class WorkEffortPartyAssignments : global::Allors.ObjectsBase<WorkEffortPartyAssignment>
	{
		public static readonly WorkEffortPartyAssignmentMeta Meta = WorkEffortPartyAssignmentMeta.Instance;

		public WorkEffortPartyAssignments(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}