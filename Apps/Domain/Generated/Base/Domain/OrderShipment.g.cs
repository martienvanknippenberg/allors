// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class OrderShipment
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (OrderShipmentBuilder)objectBuilder;
			

			if(builder.Picked.HasValue)
			{
				this.Picked = builder.Picked.Value;
			}			
					

			if(builder.Quantity.HasValue)
			{
				this.Quantity = builder.Quantity.Value;
			}			
		

			this.SalesOrderItem = builder.SalesOrderItem;



			this.ShipmentItem = builder.ShipmentItem;



			this.PurchaseOrderItem = builder.PurchaseOrderItem;


		}
	}

	public partial class OrderShipmentBuilder : Allors.ObjectBuilder<OrderShipment> , global::System.IDisposable
	{		
		public OrderShipmentBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public SalesOrderItem SalesOrderItem {get; set;}

				/// <exclude/>
				public OrderShipmentBuilder WithSalesOrderItem(SalesOrderItem value)
		        {
		            if(this.SalesOrderItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesOrderItem = value;
		            return this;
		        }		

				
				public global::System.Boolean? Picked {get; set;}

				/// <exclude/>
				public OrderShipmentBuilder WithPicked(global::System.Boolean? value)
		        {
				    if(this.Picked!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Picked = value;
		            return this;
		        }	

				public ShipmentItem ShipmentItem {get; set;}

				/// <exclude/>
				public OrderShipmentBuilder WithShipmentItem(ShipmentItem value)
		        {
		            if(this.ShipmentItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShipmentItem = value;
		            return this;
		        }		

				
				public global::System.Decimal? Quantity {get; set;}

				/// <exclude/>
				public OrderShipmentBuilder WithQuantity(global::System.Decimal? value)
		        {
				    if(this.Quantity!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Quantity = value;
		            return this;
		        }	

				public PurchaseOrderItem PurchaseOrderItem {get; set;}

				/// <exclude/>
				public OrderShipmentBuilder WithPurchaseOrderItem(PurchaseOrderItem value)
		        {
		            if(this.PurchaseOrderItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PurchaseOrderItem = value;
		            return this;
		        }		

				

	}

	public partial class OrderShipments : global::Allors.ObjectsBase<OrderShipment>
	{
		public static readonly OrderShipmentMeta Meta = OrderShipmentMeta.Instance;

		public OrderShipments(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}