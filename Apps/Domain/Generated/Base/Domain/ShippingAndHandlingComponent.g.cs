// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class ShippingAndHandlingComponent
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (ShippingAndHandlingComponentBuilder)objectBuilder;
			

			if(builder.Cost.HasValue)
			{
				this.Cost = builder.Cost.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
					

			if(builder.FromDate.HasValue)
			{
				this.FromDate = builder.FromDate.Value;
			}			
					

			if(builder.ThroughDate.HasValue)
			{
				this.ThroughDate = builder.ThroughDate.Value;
			}			
		

			this.ShipmentMethod = builder.ShipmentMethod;



			this.Carrier = builder.Carrier;



			this.ShipmentValue = builder.ShipmentValue;



			this.Currency = builder.Currency;



			this.SpecifiedFor = builder.SpecifiedFor;



			this.GeographicBoundary = builder.GeographicBoundary;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.SearchData = builder.SearchData;


		}
	}

	public partial class ShippingAndHandlingComponentBuilder : Allors.ObjectBuilder<ShippingAndHandlingComponent> , SearchResultBuilder, UserInterfaceableBuilder, PeriodBuilder, SearchableBuilder, global::System.IDisposable
	{		
		public ShippingAndHandlingComponentBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Decimal? Cost {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithCost(global::System.Decimal? value)
		        {
				    if(this.Cost!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Cost = value;
		            return this;
		        }	

				public ShipmentMethod ShipmentMethod {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithShipmentMethod(ShipmentMethod value)
		        {
		            if(this.ShipmentMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShipmentMethod = value;
		            return this;
		        }		

				
				public Carrier Carrier {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithCarrier(Carrier value)
		        {
		            if(this.Carrier!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Carrier = value;
		            return this;
		        }		

				
				public ShipmentValue ShipmentValue {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithShipmentValue(ShipmentValue value)
		        {
		            if(this.ShipmentValue!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShipmentValue = value;
		            return this;
		        }		

				
				public Currency Currency {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithCurrency(Currency value)
		        {
		            if(this.Currency!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Currency = value;
		            return this;
		        }		

				
				public InternalOrganisation SpecifiedFor {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithSpecifiedFor(InternalOrganisation value)
		        {
		            if(this.SpecifiedFor!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SpecifiedFor = value;
		            return this;
		        }		

				
				public GeographicBoundary GeographicBoundary {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithGeographicBoundary(GeographicBoundary value)
		        {
		            if(this.GeographicBoundary!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.GeographicBoundary = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public global::System.DateTime? FromDate {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithFromDate(global::System.DateTime? value)
		        {
				    if(this.FromDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.FromDate = value;
		            return this;
		        }	

				public global::System.DateTime? ThroughDate {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithThroughDate(global::System.DateTime? value)
		        {
				    if(this.ThroughDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ThroughDate = value;
		            return this;
		        }	

				public SearchData SearchData {get; set;}

				/// <exclude/>
				public ShippingAndHandlingComponentBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				

	}

	public partial class ShippingAndHandlingComponents : global::Allors.ObjectsBase<ShippingAndHandlingComponent>
	{
		public static readonly ShippingAndHandlingComponentMeta Meta = ShippingAndHandlingComponentMeta.Instance;

		public ShippingAndHandlingComponents(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}