// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class EmploymentApplication
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (EmploymentApplicationBuilder)objectBuilder;
			

			if(builder.ApplicationDate.HasValue)
			{
				this.ApplicationDate = builder.ApplicationDate.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.Position = builder.Position;



			this.EmploymentApplicationStatus = builder.EmploymentApplicationStatus;



			this.Person = builder.Person;



			this.EmploymentApplicationSource = builder.EmploymentApplicationSource;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.SearchData = builder.SearchData;


		}
	}

	public partial class EmploymentApplicationBuilder : Allors.ObjectBuilder<EmploymentApplication> , SearchResultBuilder, UserInterfaceableBuilder, SearchableBuilder, global::System.IDisposable
	{		
		public EmploymentApplicationBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.DateTime? ApplicationDate {get; set;}

				/// <exclude/>
				public EmploymentApplicationBuilder WithApplicationDate(global::System.DateTime? value)
		        {
				    if(this.ApplicationDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ApplicationDate = value;
		            return this;
		        }	

				public Position Position {get; set;}

				/// <exclude/>
				public EmploymentApplicationBuilder WithPosition(Position value)
		        {
		            if(this.Position!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Position = value;
		            return this;
		        }		

				
				public EmploymentApplicationStatus EmploymentApplicationStatus {get; set;}

				/// <exclude/>
				public EmploymentApplicationBuilder WithEmploymentApplicationStatus(EmploymentApplicationStatus value)
		        {
		            if(this.EmploymentApplicationStatus!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.EmploymentApplicationStatus = value;
		            return this;
		        }		

				
				public Person Person {get; set;}

				/// <exclude/>
				public EmploymentApplicationBuilder WithPerson(Person value)
		        {
		            if(this.Person!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Person = value;
		            return this;
		        }		

				
				public EmploymentApplicationSource EmploymentApplicationSource {get; set;}

				/// <exclude/>
				public EmploymentApplicationBuilder WithEmploymentApplicationSource(EmploymentApplicationSource value)
		        {
		            if(this.EmploymentApplicationSource!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.EmploymentApplicationSource = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public EmploymentApplicationBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public EmploymentApplicationBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public EmploymentApplicationBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public SearchData SearchData {get; set;}

				/// <exclude/>
				public EmploymentApplicationBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				

	}

	public partial class EmploymentApplications : global::Allors.ObjectsBase<EmploymentApplication>
	{
		public static readonly EmploymentApplicationMeta Meta = EmploymentApplicationMeta.Instance;

		public EmploymentApplications(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}