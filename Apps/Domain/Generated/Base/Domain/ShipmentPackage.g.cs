// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class ShipmentPackage
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (ShipmentPackageBuilder)objectBuilder;
			

			if(builder.CreationDate.HasValue)
			{
				this.CreationDate = builder.CreationDate.Value;
			}			
					

			if(builder.SequenceNumber.HasValue)
			{
				this.SequenceNumber = builder.SequenceNumber.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
					

			if(builder.UniqueId.HasValue)
			{
				this.UniqueId = builder.UniqueId.Value;
			}			
		

			this.PrintContent = builder.PrintContent;
		
			if(builder.PackagingContents!=null)
			{
				this.PackagingContents = builder.PackagingContents.ToArray();
			}

			if(builder.Documents!=null)
			{
				this.Documents = builder.Documents.ToArray();
			}

			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class ShipmentPackageBuilder : Allors.ObjectBuilder<ShipmentPackage> , UserInterfaceableBuilder, UniquelyIdentifiableBuilder, PrintableBuilder, global::System.IDisposable
	{		
		public ShipmentPackageBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Collections.Generic.List<PackagingContent> PackagingContents {get; set;}	

				/// <exclude/>
				public ShipmentPackageBuilder WithPackagingContent(PackagingContent value)
		        {
					if(this.PackagingContents == null)
					{
						this.PackagingContents = new global::System.Collections.Generic.List<PackagingContent>(); 
					}
		            this.PackagingContents.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Document> Documents {get; set;}	

				/// <exclude/>
				public ShipmentPackageBuilder WithDocument(Document value)
		        {
					if(this.Documents == null)
					{
						this.Documents = new global::System.Collections.Generic.List<Document>(); 
					}
		            this.Documents.Add(value);
		            return this;
		        }		

				
				public global::System.DateTime? CreationDate {get; set;}

				/// <exclude/>
				public ShipmentPackageBuilder WithCreationDate(global::System.DateTime? value)
		        {
				    if(this.CreationDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.CreationDate = value;
		            return this;
		        }	

				public global::System.Int32? SequenceNumber {get; set;}

				/// <exclude/>
				public ShipmentPackageBuilder WithSequenceNumber(global::System.Int32? value)
		        {
				    if(this.SequenceNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.SequenceNumber = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public ShipmentPackageBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public ShipmentPackageBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public ShipmentPackageBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public global::System.Guid? UniqueId {get; set;}

				/// <exclude/>
				public ShipmentPackageBuilder WithUniqueId(global::System.Guid? value)
		        {
				    if(this.UniqueId!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UniqueId = value;
		            return this;
		        }	

				public global::System.String PrintContent {get; set;}

				/// <exclude/>
				public ShipmentPackageBuilder WithPrintContent(global::System.String value)
		        {
				    if(this.PrintContent!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PrintContent = value;
		            return this;
		        }	


	}

	public partial class ShipmentPackages : global::Allors.ObjectsBase<ShipmentPackage>
	{
		public static readonly ShipmentPackageMeta Meta = ShipmentPackageMeta.Instance;

		public ShipmentPackages(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}