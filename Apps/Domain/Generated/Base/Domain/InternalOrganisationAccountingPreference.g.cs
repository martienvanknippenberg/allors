// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class InternalOrganisationAccountingPreference
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (InternalOrganisationAccountingPreferenceBuilder)objectBuilder;

			this.DisplayName = builder.DisplayName;
		

			this.GeneralLedgerAccount = builder.GeneralLedgerAccount;



			this.InventoryItemKind = builder.InventoryItemKind;



			this.PaymentMethod = builder.PaymentMethod;



			this.Receipt = builder.Receipt;



			this.InternalOrganisation = builder.InternalOrganisation;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.SearchData = builder.SearchData;


		}
	}

	public partial class InternalOrganisationAccountingPreferenceBuilder : Allors.ObjectBuilder<InternalOrganisationAccountingPreference> , AccessControlledObjectBuilder, UserInterfaceableBuilder, SearchableBuilder, global::System.IDisposable
	{		
		public InternalOrganisationAccountingPreferenceBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public GeneralLedgerAccount GeneralLedgerAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithGeneralLedgerAccount(GeneralLedgerAccount value)
		        {
		            if(this.GeneralLedgerAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.GeneralLedgerAccount = value;
		            return this;
		        }		

				
				public InventoryItemKind InventoryItemKind {get; set;}

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithInventoryItemKind(InventoryItemKind value)
		        {
		            if(this.InventoryItemKind!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.InventoryItemKind = value;
		            return this;
		        }		

				
				public PaymentMethod PaymentMethod {get; set;}

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithPaymentMethod(PaymentMethod value)
		        {
		            if(this.PaymentMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PaymentMethod = value;
		            return this;
		        }		

				
				public Receipt Receipt {get; set;}

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithReceipt(Receipt value)
		        {
		            if(this.Receipt!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Receipt = value;
		            return this;
		        }		

				
				public InternalOrganisation InternalOrganisation {get; set;}

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithInternalOrganisation(InternalOrganisation value)
		        {
		            if(this.InternalOrganisation!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.InternalOrganisation = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public SearchData SearchData {get; set;}

				/// <exclude/>
				public InternalOrganisationAccountingPreferenceBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				

	}

	public partial class InternalOrganisationAccountingPreferences : global::Allors.ObjectsBase<InternalOrganisationAccountingPreference>
	{
		public static readonly InternalOrganisationAccountingPreferenceMeta Meta = InternalOrganisationAccountingPreferenceMeta.Instance;

		public InternalOrganisationAccountingPreferences(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}