// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class OrderItemBilling
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (OrderItemBillingBuilder)objectBuilder;
			

			if(builder.Amount.HasValue)
			{
				this.Amount = builder.Amount.Value;
			}			
					

			if(builder.Quantity.HasValue)
			{
				this.Quantity = builder.Quantity.Value;
			}			
		

			this.OrderItem = builder.OrderItem;



			this.SalesInvoiceItem = builder.SalesInvoiceItem;


		}
	}

	public partial class OrderItemBillingBuilder : Allors.ObjectBuilder<OrderItemBilling> , global::System.IDisposable
	{		
		public OrderItemBillingBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public OrderItem OrderItem {get; set;}

				/// <exclude/>
				public OrderItemBillingBuilder WithOrderItem(OrderItem value)
		        {
		            if(this.OrderItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.OrderItem = value;
		            return this;
		        }		

				
				public SalesInvoiceItem SalesInvoiceItem {get; set;}

				/// <exclude/>
				public OrderItemBillingBuilder WithSalesInvoiceItem(SalesInvoiceItem value)
		        {
		            if(this.SalesInvoiceItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesInvoiceItem = value;
		            return this;
		        }		

				
				public global::System.Decimal? Amount {get; set;}

				/// <exclude/>
				public OrderItemBillingBuilder WithAmount(global::System.Decimal? value)
		        {
				    if(this.Amount!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Amount = value;
		            return this;
		        }	

				public global::System.Decimal? Quantity {get; set;}

				/// <exclude/>
				public OrderItemBillingBuilder WithQuantity(global::System.Decimal? value)
		        {
				    if(this.Quantity!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Quantity = value;
		            return this;
		        }	


	}

	public partial class OrderItemsBilling : global::Allors.ObjectsBase<OrderItemBilling>
	{
		public static readonly OrderItemBillingMeta Meta = OrderItemBillingMeta.Instance;

		public OrderItemsBilling(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}