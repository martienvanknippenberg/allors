// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class PurchaseOrderItem
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (PurchaseOrderItemBuilder)objectBuilder;
			

			if(builder.QuantityReceived.HasValue)
			{
				this.QuantityReceived = builder.QuantityReceived.Value;
			}			
					

			if(builder.TotalDiscountAsPercentage.HasValue)
			{
				this.TotalDiscountAsPercentage = builder.TotalDiscountAsPercentage.Value;
			}			
					

			if(builder.UnitVat.HasValue)
			{
				this.UnitVat = builder.UnitVat.Value;
			}			
					

			if(builder.TotalVatCustomerCurrency.HasValue)
			{
				this.TotalVatCustomerCurrency = builder.TotalVatCustomerCurrency.Value;
			}			
					

			if(builder.TotalVat.HasValue)
			{
				this.TotalVat = builder.TotalVat.Value;
			}			
					

			if(builder.UnitSurcharge.HasValue)
			{
				this.UnitSurcharge = builder.UnitSurcharge.Value;
			}			
					

			if(builder.UnitDiscount.HasValue)
			{
				this.UnitDiscount = builder.UnitDiscount.Value;
			}			
					

			if(builder.PreviousQuantity.HasValue)
			{
				this.PreviousQuantity = builder.PreviousQuantity.Value;
			}			
					

			if(builder.QuantityOrdered.HasValue)
			{
				this.QuantityOrdered = builder.QuantityOrdered.Value;
			}			
					

			if(builder.TotalExVatCustomerCurrency.HasValue)
			{
				this.TotalExVatCustomerCurrency = builder.TotalExVatCustomerCurrency.Value;
			}			
					

			if(builder.ActualUnitPrice.HasValue)
			{
				this.ActualUnitPrice = builder.ActualUnitPrice.Value;
			}			
					

			if(builder.TotalIncVatCustomerCurrency.HasValue)
			{
				this.TotalIncVatCustomerCurrency = builder.TotalIncVatCustomerCurrency.Value;
			}			
		

			this.Description = builder.Description;
					

			if(builder.UnitBasePrice.HasValue)
			{
				this.UnitBasePrice = builder.UnitBasePrice.Value;
			}			
					

			if(builder.CalculatedUnitPrice.HasValue)
			{
				this.CalculatedUnitPrice = builder.CalculatedUnitPrice.Value;
			}			
					

			if(builder.TotalOrderAdjustmentCustomerCurrency.HasValue)
			{
				this.TotalOrderAdjustmentCustomerCurrency = builder.TotalOrderAdjustmentCustomerCurrency.Value;
			}			
					

			if(builder.TotalOrderAdjustment.HasValue)
			{
				this.TotalOrderAdjustment = builder.TotalOrderAdjustment.Value;
			}			
					

			if(builder.TotalSurchargeCustomerCurrency.HasValue)
			{
				this.TotalSurchargeCustomerCurrency = builder.TotalSurchargeCustomerCurrency.Value;
			}			
					

			if(builder.AssignedDeliveryDate.HasValue)
			{
				this.AssignedDeliveryDate = builder.AssignedDeliveryDate.Value;
			}			
					

			if(builder.DeliveryDate.HasValue)
			{
				this.DeliveryDate = builder.DeliveryDate.Value;
			}			
					

			if(builder.TotalIncVat.HasValue)
			{
				this.TotalIncVat = builder.TotalIncVat.Value;
			}			
					

			if(builder.TotalSurchargeAsPercentage.HasValue)
			{
				this.TotalSurchargeAsPercentage = builder.TotalSurchargeAsPercentage.Value;
			}			
					

			if(builder.TotalDiscountCustomerCurrency.HasValue)
			{
				this.TotalDiscountCustomerCurrency = builder.TotalDiscountCustomerCurrency.Value;
			}			
					

			if(builder.TotalDiscount.HasValue)
			{
				this.TotalDiscount = builder.TotalDiscount.Value;
			}			
					

			if(builder.TotalSurcharge.HasValue)
			{
				this.TotalSurcharge = builder.TotalSurcharge.Value;
			}			
		

			this.ShippingInstruction = builder.ShippingInstruction;
					

			if(builder.TotalBasePrice.HasValue)
			{
				this.TotalBasePrice = builder.TotalBasePrice.Value;
			}			
					

			if(builder.TotalExVat.HasValue)
			{
				this.TotalExVat = builder.TotalExVat.Value;
			}			
					

			if(builder.TotalBasePriceCustomerCurrency.HasValue)
			{
				this.TotalBasePriceCustomerCurrency = builder.TotalBasePriceCustomerCurrency.Value;
			}			
		

			this.Message = builder.Message;
		

			this.DisplayName = builder.DisplayName;
		

			this.Comment = builder.Comment;
		
			if(builder.OrderItemStatuses!=null)
			{
				this.OrderItemStatuses = builder.OrderItemStatuses.ToArray();
			}


			this.CurrentObjectState = builder.CurrentObjectState;


			if(builder.ShipmentStatuses!=null)
			{
				this.ShipmentStatuses = builder.ShipmentStatuses.ToArray();
			}

			if(builder.PaymentStatuses!=null)
			{
				this.PaymentStatuses = builder.PaymentStatuses.ToArray();
			}


			this.CurrentShipmentStatus = builder.CurrentShipmentStatus;



			this.Product = builder.Product;



			this.CurrentOrderItemStatus = builder.CurrentOrderItemStatus;



			this.CurrentPaymentStatus = builder.CurrentPaymentStatus;



			this.PreviousObjectState = builder.PreviousObjectState;



			this.Part = builder.Part;



			this.DiscountAdjustment = builder.DiscountAdjustment;



			this.VatRegime = builder.VatRegime;



			this.BudgetItem = builder.BudgetItem;



			this.DerivedVatRate = builder.DerivedVatRate;



			this.CorrespondingPurchaseOrder = builder.CorrespondingPurchaseOrder;



			this.QuoteItem = builder.QuoteItem;


			if(builder.OrderTerms!=null)
			{
				this.OrderTerms = builder.OrderTerms.ToArray();
			}


			this.AssignedVatRegime = builder.AssignedVatRegime;


			if(builder.Associations!=null)
			{
				this.Associations = builder.Associations.ToArray();
			}

			if(builder.CurrentPriceComponents!=null)
			{
				this.CurrentPriceComponents = builder.CurrentPriceComponents.ToArray();
			}


			this.SurchargeAdjustment = builder.SurchargeAdjustment;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class PurchaseOrderItemBuilder : Allors.ObjectBuilder<PurchaseOrderItem> , OrderItemBuilder, global::System.IDisposable
	{		
		public PurchaseOrderItemBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Collections.Generic.List<PurchaseOrderItemStatus> OrderItemStatuses {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithOrderItemStatus(PurchaseOrderItemStatus value)
		        {
					if(this.OrderItemStatuses == null)
					{
						this.OrderItemStatuses = new global::System.Collections.Generic.List<PurchaseOrderItemStatus>(); 
					}
		            this.OrderItemStatuses.Add(value);
		            return this;
		        }		

				
				public PurchaseOrderItemObjectState CurrentObjectState {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithCurrentObjectState(PurchaseOrderItemObjectState value)
		        {
		            if(this.CurrentObjectState!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CurrentObjectState = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PurchaseOrderItemStatus> ShipmentStatuses {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithShipmentStatus(PurchaseOrderItemStatus value)
		        {
					if(this.ShipmentStatuses == null)
					{
						this.ShipmentStatuses = new global::System.Collections.Generic.List<PurchaseOrderItemStatus>(); 
					}
		            this.ShipmentStatuses.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PurchaseOrderItemStatus> PaymentStatuses {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithPaymentStatus(PurchaseOrderItemStatus value)
		        {
					if(this.PaymentStatuses == null)
					{
						this.PaymentStatuses = new global::System.Collections.Generic.List<PurchaseOrderItemStatus>(); 
					}
		            this.PaymentStatuses.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? QuantityReceived {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithQuantityReceived(global::System.Decimal? value)
		        {
				    if(this.QuantityReceived!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.QuantityReceived = value;
		            return this;
		        }	

				public PurchaseOrderItemStatus CurrentShipmentStatus {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithCurrentShipmentStatus(PurchaseOrderItemStatus value)
		        {
		            if(this.CurrentShipmentStatus!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CurrentShipmentStatus = value;
		            return this;
		        }		

				
				public Product Product {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithProduct(Product value)
		        {
		            if(this.Product!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Product = value;
		            return this;
		        }		

				
				public PurchaseOrderItemStatus CurrentOrderItemStatus {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithCurrentOrderItemStatus(PurchaseOrderItemStatus value)
		        {
		            if(this.CurrentOrderItemStatus!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CurrentOrderItemStatus = value;
		            return this;
		        }		

				
				public PurchaseOrderItemStatus CurrentPaymentStatus {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithCurrentPaymentStatus(PurchaseOrderItemStatus value)
		        {
		            if(this.CurrentPaymentStatus!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CurrentPaymentStatus = value;
		            return this;
		        }		

				
				public PurchaseOrderItemObjectState PreviousObjectState {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithPreviousObjectState(PurchaseOrderItemObjectState value)
		        {
		            if(this.PreviousObjectState!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PreviousObjectState = value;
		            return this;
		        }		

				
				public Part Part {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithPart(Part value)
		        {
		            if(this.Part!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Part = value;
		            return this;
		        }		

				
				public global::System.Decimal? TotalDiscountAsPercentage {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalDiscountAsPercentage(global::System.Decimal? value)
		        {
				    if(this.TotalDiscountAsPercentage!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalDiscountAsPercentage = value;
		            return this;
		        }	

				public DiscountAdjustment DiscountAdjustment {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithDiscountAdjustment(DiscountAdjustment value)
		        {
		            if(this.DiscountAdjustment!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DiscountAdjustment = value;
		            return this;
		        }		

				
				public global::System.Decimal? UnitVat {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithUnitVat(global::System.Decimal? value)
		        {
				    if(this.UnitVat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UnitVat = value;
		            return this;
		        }	

				public global::System.Decimal? TotalVatCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalVatCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalVatCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalVatCustomerCurrency = value;
		            return this;
		        }	

				public VatRegime VatRegime {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithVatRegime(VatRegime value)
		        {
		            if(this.VatRegime!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.VatRegime = value;
		            return this;
		        }		

				
				public BudgetItem BudgetItem {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithBudgetItem(BudgetItem value)
		        {
		            if(this.BudgetItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BudgetItem = value;
		            return this;
		        }		

				
				public global::System.Decimal? TotalVat {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalVat(global::System.Decimal? value)
		        {
				    if(this.TotalVat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalVat = value;
		            return this;
		        }	

				public global::System.Decimal? UnitSurcharge {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithUnitSurcharge(global::System.Decimal? value)
		        {
				    if(this.UnitSurcharge!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UnitSurcharge = value;
		            return this;
		        }	

				public global::System.Decimal? UnitDiscount {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithUnitDiscount(global::System.Decimal? value)
		        {
				    if(this.UnitDiscount!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UnitDiscount = value;
		            return this;
		        }	

				public global::System.Decimal? PreviousQuantity {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithPreviousQuantity(global::System.Decimal? value)
		        {
				    if(this.PreviousQuantity!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PreviousQuantity = value;
		            return this;
		        }	

				public global::System.Decimal? QuantityOrdered {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithQuantityOrdered(global::System.Decimal? value)
		        {
				    if(this.QuantityOrdered!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.QuantityOrdered = value;
		            return this;
		        }	

				public global::System.Decimal? TotalExVatCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalExVatCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalExVatCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalExVatCustomerCurrency = value;
		            return this;
		        }	

				public VatRate DerivedVatRate {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithDerivedVatRate(VatRate value)
		        {
		            if(this.DerivedVatRate!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DerivedVatRate = value;
		            return this;
		        }		

				
				public global::System.Decimal? ActualUnitPrice {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithActualUnitPrice(global::System.Decimal? value)
		        {
				    if(this.ActualUnitPrice!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ActualUnitPrice = value;
		            return this;
		        }	

				public global::System.Decimal? TotalIncVatCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalIncVatCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalIncVatCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalIncVatCustomerCurrency = value;
		            return this;
		        }	

				public global::System.String Description {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public global::System.Decimal? UnitBasePrice {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithUnitBasePrice(global::System.Decimal? value)
		        {
				    if(this.UnitBasePrice!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UnitBasePrice = value;
		            return this;
		        }	

				public PurchaseOrder CorrespondingPurchaseOrder {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithCorrespondingPurchaseOrder(PurchaseOrder value)
		        {
		            if(this.CorrespondingPurchaseOrder!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CorrespondingPurchaseOrder = value;
		            return this;
		        }		

				
				public global::System.Decimal? CalculatedUnitPrice {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithCalculatedUnitPrice(global::System.Decimal? value)
		        {
				    if(this.CalculatedUnitPrice!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.CalculatedUnitPrice = value;
		            return this;
		        }	

				public global::System.Decimal? TotalOrderAdjustmentCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalOrderAdjustmentCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalOrderAdjustmentCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalOrderAdjustmentCustomerCurrency = value;
		            return this;
		        }	

				public global::System.Decimal? TotalOrderAdjustment {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalOrderAdjustment(global::System.Decimal? value)
		        {
				    if(this.TotalOrderAdjustment!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalOrderAdjustment = value;
		            return this;
		        }	

				public global::System.Decimal? TotalSurchargeCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalSurchargeCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalSurchargeCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalSurchargeCustomerCurrency = value;
		            return this;
		        }	

				public QuoteItem QuoteItem {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithQuoteItem(QuoteItem value)
		        {
		            if(this.QuoteItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.QuoteItem = value;
		            return this;
		        }		

				
				public global::System.DateTime? AssignedDeliveryDate {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithAssignedDeliveryDate(global::System.DateTime? value)
		        {
				    if(this.AssignedDeliveryDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AssignedDeliveryDate = value;
		            return this;
		        }	

				public global::System.DateTime? DeliveryDate {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithDeliveryDate(global::System.DateTime? value)
		        {
				    if(this.DeliveryDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DeliveryDate = value;
		            return this;
		        }	

				public global::System.Decimal? TotalIncVat {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalIncVat(global::System.Decimal? value)
		        {
				    if(this.TotalIncVat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalIncVat = value;
		            return this;
		        }	

				public global::System.Decimal? TotalSurchargeAsPercentage {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalSurchargeAsPercentage(global::System.Decimal? value)
		        {
				    if(this.TotalSurchargeAsPercentage!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalSurchargeAsPercentage = value;
		            return this;
		        }	

				public global::System.Decimal? TotalDiscountCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalDiscountCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalDiscountCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalDiscountCustomerCurrency = value;
		            return this;
		        }	

				public global::System.Decimal? TotalDiscount {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalDiscount(global::System.Decimal? value)
		        {
				    if(this.TotalDiscount!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalDiscount = value;
		            return this;
		        }	

				public global::System.Decimal? TotalSurcharge {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalSurcharge(global::System.Decimal? value)
		        {
				    if(this.TotalSurcharge!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalSurcharge = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<OrderTerm> OrderTerms {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithOrderTerm(OrderTerm value)
		        {
					if(this.OrderTerms == null)
					{
						this.OrderTerms = new global::System.Collections.Generic.List<OrderTerm>(); 
					}
		            this.OrderTerms.Add(value);
		            return this;
		        }		

				
				public VatRegime AssignedVatRegime {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithAssignedVatRegime(VatRegime value)
		        {
		            if(this.AssignedVatRegime!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.AssignedVatRegime = value;
		            return this;
		        }		

				
				public global::System.String ShippingInstruction {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithShippingInstruction(global::System.String value)
		        {
				    if(this.ShippingInstruction!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ShippingInstruction = value;
		            return this;
		        }	

				public global::System.Decimal? TotalBasePrice {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalBasePrice(global::System.Decimal? value)
		        {
				    if(this.TotalBasePrice!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalBasePrice = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<OrderItem> Associations {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithAssociation(OrderItem value)
		        {
					if(this.Associations == null)
					{
						this.Associations = new global::System.Collections.Generic.List<OrderItem>(); 
					}
		            this.Associations.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? TotalExVat {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalExVat(global::System.Decimal? value)
		        {
				    if(this.TotalExVat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalExVat = value;
		            return this;
		        }	

				public global::System.Decimal? TotalBasePriceCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithTotalBasePriceCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalBasePriceCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalBasePriceCustomerCurrency = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<PriceComponent> CurrentPriceComponents {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithCurrentPriceComponent(PriceComponent value)
		        {
					if(this.CurrentPriceComponents == null)
					{
						this.CurrentPriceComponents = new global::System.Collections.Generic.List<PriceComponent>(); 
					}
		            this.CurrentPriceComponents.Add(value);
		            return this;
		        }		

				
				public SurchargeAdjustment SurchargeAdjustment {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithSurchargeAdjustment(SurchargeAdjustment value)
		        {
		            if(this.SurchargeAdjustment!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SurchargeAdjustment = value;
		            return this;
		        }		

				
				public global::System.String Message {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithMessage(global::System.String value)
		        {
				    if(this.Message!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Message = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public PurchaseOrderItemBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public global::System.String Comment {get; set;}

				/// <exclude/>
				public PurchaseOrderItemBuilder WithComment(global::System.String value)
		        {
				    if(this.Comment!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Comment = value;
		            return this;
		        }	


	}

	public partial class PurchaseOrderItems : global::Allors.ObjectsBase<PurchaseOrderItem>
	{
		public static readonly PurchaseOrderItemMeta Meta = PurchaseOrderItemMeta.Instance;

		public PurchaseOrderItems(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}