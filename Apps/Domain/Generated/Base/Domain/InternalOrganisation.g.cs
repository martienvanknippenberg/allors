// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class InternalOrganisation
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (InternalOrganisationBuilder)objectBuilder;

			this.PurchaseOrderNumberPrefix = builder.PurchaseOrderNumberPrefix;
		

			this.TransactionReferenceNumber = builder.TransactionReferenceNumber;
					

			if(builder.NextPurchaseInvoiceNumber.HasValue)
			{
				this.NextPurchaseInvoiceNumber = builder.NextPurchaseInvoiceNumber.Value;
			}			
					

			if(builder.NextQuoteNumber.HasValue)
			{
				this.NextQuoteNumber = builder.NextQuoteNumber.Value;
			}			
					

			if(builder.MaximumAllowedPaymentDifference.HasValue)
			{
				this.MaximumAllowedPaymentDifference = builder.MaximumAllowedPaymentDifference.Value;
			}			
		

			this.Name = builder.Name;
					

			if(builder.NextPurchaseOrderNumber.HasValue)
			{
				this.NextPurchaseOrderNumber = builder.NextPurchaseOrderNumber.Value;
			}			
		

			this.PurchaseTransactionReferenceNumber = builder.PurchaseTransactionReferenceNumber;
					

			if(builder.FiscalYearStartMonth.HasValue)
			{
				this.FiscalYearStartMonth = builder.FiscalYearStartMonth.Value;
			}			
					

			if(builder.NextIncomingShipmentNumber.HasValue)
			{
				this.NextIncomingShipmentNumber = builder.NextIncomingShipmentNumber.Value;
			}			
					

			if(builder.NextSubAccountNumber.HasValue)
			{
				this.NextSubAccountNumber = builder.NextSubAccountNumber.Value;
			}			
					

			if(builder.VatDeactivated.HasValue)
			{
				this.VatDeactivated = builder.VatDeactivated.Value;
			}			
					

			if(builder.FiscalYearStartDay.HasValue)
			{
				this.FiscalYearStartDay = builder.FiscalYearStartDay.Value;
			}			
		

			this.PurchaseInvoiceNumberPrefix = builder.PurchaseInvoiceNumberPrefix;
		

			this.TransactionReferenceNumberPrefix = builder.TransactionReferenceNumberPrefix;
					

			if(builder.DoAccounting.HasValue)
			{
				this.DoAccounting = builder.DoAccounting.Value;
			}			
					

			if(builder.NextAccountingTransactionNumber.HasValue)
			{
				this.NextAccountingTransactionNumber = builder.NextAccountingTransactionNumber.Value;
			}			
		

			this.QuoteNumberPrefix = builder.QuoteNumberPrefix;
		

			this.PurchaseTransactionReferenceNumberPrefix = builder.PurchaseTransactionReferenceNumberPrefix;
		

			this.TaxNumber = builder.TaxNumber;
		

			this.IncomingShipmentNumberPrefix = builder.IncomingShipmentNumberPrefix;
					

			if(builder.YTDRevenue.HasValue)
			{
				this.YTDRevenue = builder.YTDRevenue.Value;
			}			
					

			if(builder.LastYearsRevenue.HasValue)
			{
				this.LastYearsRevenue = builder.LastYearsRevenue.Value;
			}			
					

			if(builder.ExcludeFromDunning.HasValue)
			{
				this.ExcludeFromDunning = builder.ExcludeFromDunning.Value;
			}			
		

			this.PartyName = builder.PartyName;
					

			if(builder.OpenOrderAmount.HasValue)
			{
				this.OpenOrderAmount = builder.OpenOrderAmount.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
					

			if(builder.UniqueId.HasValue)
			{
				this.UniqueId = builder.UniqueId.Value;
			}			
		
			if(builder.JournalEntryNumbers!=null)
			{
				this.JournalEntryNumbers = builder.JournalEntryNumbers.ToArray();
			}


			this.EuListingState = builder.EuListingState;



			this.ActualAccountingPeriod = builder.ActualAccountingPeriod;



			this.InvoiceSequence = builder.InvoiceSequence;


			if(builder.ActivePaymentMethods!=null)
			{
				this.ActivePaymentMethods = builder.ActivePaymentMethods.ToArray();
			}

			if(builder.PurchaseShipmentTemplates!=null)
			{
				this.PurchaseShipmentTemplates = builder.PurchaseShipmentTemplates.ToArray();
			}


			this.LogoImage = builder.LogoImage;



			this.CostCenterSplitMethod = builder.CostCenterSplitMethod;



			this.LegalForm = builder.LegalForm;


			if(builder.AccountingPeriods!=null)
			{
				this.AccountingPeriods = builder.AccountingPeriods.ToArray();
			}


			this.SalesPaymentDifferencesAccount = builder.SalesPaymentDifferencesAccount;


			if(builder.PurchaseOrderTemplates!=null)
			{
				this.PurchaseOrderTemplates = builder.PurchaseOrderTemplates.ToArray();
			}


			this.CostOfGoodsSoldMethod = builder.CostOfGoodsSoldMethod;


			if(builder.EmployeeRoles!=null)
			{
				this.EmployeeRoles = builder.EmployeeRoles.ToArray();
			}

			if(builder.GeneralLedgerAccounts!=null)
			{
				this.GeneralLedgerAccounts = builder.GeneralLedgerAccounts.ToArray();
			}


			this.RetainedEarningsAccount = builder.RetainedEarningsAccount;


			if(builder.PackagingSlipTemplates!=null)
			{
				this.PackagingSlipTemplates = builder.PackagingSlipTemplates.ToArray();
			}

			if(builder.Customers!=null)
			{
				this.Customers = builder.Customers.ToArray();
			}

			if(builder.PickListTemplates!=null)
			{
				this.PickListTemplates = builder.PickListTemplates.ToArray();
			}


			this.SalesPaymentDiscountDifferencesAccount = builder.SalesPaymentDiscountDifferencesAccount;


			if(builder.AccountingTransactionNumbers!=null)
			{
				this.AccountingTransactionNumbers = builder.AccountingTransactionNumbers.ToArray();
			}

			if(builder.QuoteTemplates!=null)
			{
				this.QuoteTemplates = builder.QuoteTemplates.ToArray();
			}


			this.PreviousCurrency = builder.PreviousCurrency;



			this.PurchasePaymentDifferencesAccount = builder.PurchasePaymentDifferencesAccount;



			this.SuspenceAccount = builder.SuspenceAccount;



			this.NetIncomeAccount = builder.NetIncomeAccount;



			this.DefaultFacility = builder.DefaultFacility;



			this.PurchasePaymentDiscountDifferencesAccount = builder.PurchasePaymentDiscountDifferencesAccount;


			if(builder.Suppliers!=null)
			{
				this.Suppliers = builder.Suppliers.ToArray();
			}


			this.CalculationDifferencesAccount = builder.CalculationDifferencesAccount;


			if(builder.PaymentMethods!=null)
			{
				this.PaymentMethods = builder.PaymentMethods.ToArray();
			}


			this.BillingInquiriesFax = builder.BillingInquiriesFax;


			if(builder.Qualifications!=null)
			{
				this.Qualifications = builder.Qualifications.ToArray();
			}


			this.HomeAddress = builder.HomeAddress;



			this.SalesOffice = builder.SalesOffice;



			this.OrderInquiriesFax = builder.OrderInquiriesFax;


			if(builder.CurrentSalesReps!=null)
			{
				this.CurrentSalesReps = builder.CurrentSalesReps.ToArray();
			}

			if(builder.PartyContactMechanisms!=null)
			{
				this.PartyContactMechanisms = builder.PartyContactMechanisms.ToArray();
			}


			this.ShippingInquiriesFax = builder.ShippingInquiriesFax;



			this.ShippingInquiriesPhone = builder.ShippingInquiriesPhone;


			if(builder.BillingAccounts!=null)
			{
				this.BillingAccounts = builder.BillingAccounts.ToArray();
			}


			this.OrderInquiriesPhone = builder.OrderInquiriesPhone;


			if(builder.PartySkills!=null)
			{
				this.PartySkills = builder.PartySkills.ToArray();
			}

			if(builder.PartyClassifications!=null)
			{
				this.PartyClassifications = builder.PartyClassifications.ToArray();
			}

			if(builder.BankAccounts!=null)
			{
				this.BankAccounts = builder.BankAccounts.ToArray();
			}


			this.BillingAddress = builder.BillingAddress;



			this.DefaultShipmentMethod = builder.DefaultShipmentMethod;


			if(builder.Resumes!=null)
			{
				this.Resumes = builder.Resumes.ToArray();
			}


			this.HeadQuarter = builder.HeadQuarter;



			this.PersonalEmailAddress = builder.PersonalEmailAddress;



			this.CellPhoneNumber = builder.CellPhoneNumber;



			this.BillingInquiriesPhone = builder.BillingInquiriesPhone;



			this.OrderAddress = builder.OrderAddress;



			this.InternetAddress = builder.InternetAddress;


			if(builder.Contents!=null)
			{
				this.Contents = builder.Contents.ToArray();
			}

			if(builder.CreditCards!=null)
			{
				this.CreditCards = builder.CreditCards.ToArray();
			}


			this.ShippingAddress = builder.ShippingAddress;



			this.GeneralFaxNumber = builder.GeneralFaxNumber;



			this.DefaultPaymentMethod = builder.DefaultPaymentMethod;



			this.GeneralPhoneNumber = builder.GeneralPhoneNumber;



			this.PreferredCurrency = builder.PreferredCurrency;



			this.VatRegime = builder.VatRegime;



			this.Locale = builder.Locale;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.OwnerSecurityToken = builder.OwnerSecurityToken;



			this.SearchData = builder.SearchData;


		}
	}

	public partial class InternalOrganisationBuilder : Allors.ObjectBuilder<InternalOrganisation> , PartyBuilder, global::System.IDisposable
	{		
		public InternalOrganisationBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.String PurchaseOrderNumberPrefix {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchaseOrderNumberPrefix(global::System.String value)
		        {
				    if(this.PurchaseOrderNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PurchaseOrderNumberPrefix = value;
		            return this;
		        }	

				public global::System.String TransactionReferenceNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithTransactionReferenceNumber(global::System.String value)
		        {
				    if(this.TransactionReferenceNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TransactionReferenceNumber = value;
		            return this;
		        }	

				public global::System.Int32? NextPurchaseInvoiceNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithNextPurchaseInvoiceNumber(global::System.Int32? value)
		        {
				    if(this.NextPurchaseInvoiceNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextPurchaseInvoiceNumber = value;
		            return this;
		        }	

				public global::System.Int32? NextQuoteNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithNextQuoteNumber(global::System.Int32? value)
		        {
				    if(this.NextQuoteNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextQuoteNumber = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<JournalEntryNumber> JournalEntryNumbers {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithJournalEntryNumber(JournalEntryNumber value)
		        {
					if(this.JournalEntryNumbers == null)
					{
						this.JournalEntryNumbers = new global::System.Collections.Generic.List<JournalEntryNumber>(); 
					}
		            this.JournalEntryNumbers.Add(value);
		            return this;
		        }		

				
				public Country EuListingState {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithEuListingState(Country value)
		        {
		            if(this.EuListingState!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.EuListingState = value;
		            return this;
		        }		

				
				public AccountingPeriod ActualAccountingPeriod {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithActualAccountingPeriod(AccountingPeriod value)
		        {
		            if(this.ActualAccountingPeriod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ActualAccountingPeriod = value;
		            return this;
		        }		

				
				public InvoiceSequence InvoiceSequence {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithInvoiceSequence(InvoiceSequence value)
		        {
		            if(this.InvoiceSequence!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.InvoiceSequence = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PaymentMethod> ActivePaymentMethods {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithActivePaymentMethod(PaymentMethod value)
		        {
					if(this.ActivePaymentMethods == null)
					{
						this.ActivePaymentMethods = new global::System.Collections.Generic.List<PaymentMethod>(); 
					}
		            this.ActivePaymentMethods.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<StringTemplate> PurchaseShipmentTemplates {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchaseShipmentTemplate(StringTemplate value)
		        {
					if(this.PurchaseShipmentTemplates == null)
					{
						this.PurchaseShipmentTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.PurchaseShipmentTemplates.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? MaximumAllowedPaymentDifference {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithMaximumAllowedPaymentDifference(global::System.Decimal? value)
		        {
				    if(this.MaximumAllowedPaymentDifference!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.MaximumAllowedPaymentDifference = value;
		            return this;
		        }	

				public Media LogoImage {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithLogoImage(Media value)
		        {
		            if(this.LogoImage!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.LogoImage = value;
		            return this;
		        }		

				
				public CostCenterSplitMethod CostCenterSplitMethod {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithCostCenterSplitMethod(CostCenterSplitMethod value)
		        {
		            if(this.CostCenterSplitMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CostCenterSplitMethod = value;
		            return this;
		        }		

				
				public LegalForm LegalForm {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithLegalForm(LegalForm value)
		        {
		            if(this.LegalForm!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.LegalForm = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<AccountingPeriod> AccountingPeriods {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithAccountingPeriod(AccountingPeriod value)
		        {
					if(this.AccountingPeriods == null)
					{
						this.AccountingPeriods = new global::System.Collections.Generic.List<AccountingPeriod>(); 
					}
		            this.AccountingPeriods.Add(value);
		            return this;
		        }		

				
				public GeneralLedgerAccount SalesPaymentDifferencesAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithSalesPaymentDifferencesAccount(GeneralLedgerAccount value)
		        {
		            if(this.SalesPaymentDifferencesAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesPaymentDifferencesAccount = value;
		            return this;
		        }		

				
				public global::System.String Name {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithName(global::System.String value)
		        {
				    if(this.Name!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Name = value;
		            return this;
		        }	

				public global::System.Int32? NextPurchaseOrderNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithNextPurchaseOrderNumber(global::System.Int32? value)
		        {
				    if(this.NextPurchaseOrderNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextPurchaseOrderNumber = value;
		            return this;
		        }	

				public global::System.String PurchaseTransactionReferenceNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchaseTransactionReferenceNumber(global::System.String value)
		        {
				    if(this.PurchaseTransactionReferenceNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PurchaseTransactionReferenceNumber = value;
		            return this;
		        }	

				public global::System.Int32? FiscalYearStartMonth {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithFiscalYearStartMonth(global::System.Int32? value)
		        {
				    if(this.FiscalYearStartMonth!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.FiscalYearStartMonth = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<StringTemplate> PurchaseOrderTemplates {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchaseOrderTemplate(StringTemplate value)
		        {
					if(this.PurchaseOrderTemplates == null)
					{
						this.PurchaseOrderTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.PurchaseOrderTemplates.Add(value);
		            return this;
		        }		

				
				public global::System.Int32? NextIncomingShipmentNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithNextIncomingShipmentNumber(global::System.Int32? value)
		        {
				    if(this.NextIncomingShipmentNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextIncomingShipmentNumber = value;
		            return this;
		        }	

				public CostOfGoodsSoldMethod CostOfGoodsSoldMethod {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithCostOfGoodsSoldMethod(CostOfGoodsSoldMethod value)
		        {
		            if(this.CostOfGoodsSoldMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CostOfGoodsSoldMethod = value;
		            return this;
		        }		

				
				public global::System.Int32? NextSubAccountNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithNextSubAccountNumber(global::System.Int32? value)
		        {
				    if(this.NextSubAccountNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextSubAccountNumber = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Role> EmployeeRoles {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithEmployeeRole(Role value)
		        {
					if(this.EmployeeRoles == null)
					{
						this.EmployeeRoles = new global::System.Collections.Generic.List<Role>(); 
					}
		            this.EmployeeRoles.Add(value);
		            return this;
		        }		

				
				public global::System.Boolean? VatDeactivated {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithVatDeactivated(global::System.Boolean? value)
		        {
				    if(this.VatDeactivated!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.VatDeactivated = value;
		            return this;
		        }	

				public global::System.Int32? FiscalYearStartDay {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithFiscalYearStartDay(global::System.Int32? value)
		        {
				    if(this.FiscalYearStartDay!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.FiscalYearStartDay = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<GeneralLedgerAccount> GeneralLedgerAccounts {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithGeneralLedgerAccount(GeneralLedgerAccount value)
		        {
					if(this.GeneralLedgerAccounts == null)
					{
						this.GeneralLedgerAccounts = new global::System.Collections.Generic.List<GeneralLedgerAccount>(); 
					}
		            this.GeneralLedgerAccounts.Add(value);
		            return this;
		        }		

				
				public GeneralLedgerAccount RetainedEarningsAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithRetainedEarningsAccount(GeneralLedgerAccount value)
		        {
		            if(this.RetainedEarningsAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.RetainedEarningsAccount = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<StringTemplate> PackagingSlipTemplates {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPackagingSlipTemplate(StringTemplate value)
		        {
					if(this.PackagingSlipTemplates == null)
					{
						this.PackagingSlipTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.PackagingSlipTemplates.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Party> Customers {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithCustomer(Party value)
		        {
					if(this.Customers == null)
					{
						this.Customers = new global::System.Collections.Generic.List<Party>(); 
					}
		            this.Customers.Add(value);
		            return this;
		        }		

				
				public global::System.String PurchaseInvoiceNumberPrefix {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchaseInvoiceNumberPrefix(global::System.String value)
		        {
				    if(this.PurchaseInvoiceNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PurchaseInvoiceNumberPrefix = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<StringTemplate> PickListTemplates {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPickListTemplate(StringTemplate value)
		        {
					if(this.PickListTemplates == null)
					{
						this.PickListTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.PickListTemplates.Add(value);
		            return this;
		        }		

				
				public GeneralLedgerAccount SalesPaymentDiscountDifferencesAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithSalesPaymentDiscountDifferencesAccount(GeneralLedgerAccount value)
		        {
		            if(this.SalesPaymentDiscountDifferencesAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesPaymentDiscountDifferencesAccount = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<AccountingTransactionNumber> AccountingTransactionNumbers {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithAccountingTransactionNumber(AccountingTransactionNumber value)
		        {
					if(this.AccountingTransactionNumbers == null)
					{
						this.AccountingTransactionNumbers = new global::System.Collections.Generic.List<AccountingTransactionNumber>(); 
					}
		            this.AccountingTransactionNumbers.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<StringTemplate> QuoteTemplates {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithQuoteTemplate(StringTemplate value)
		        {
					if(this.QuoteTemplates == null)
					{
						this.QuoteTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.QuoteTemplates.Add(value);
		            return this;
		        }		

				
				public global::System.String TransactionReferenceNumberPrefix {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithTransactionReferenceNumberPrefix(global::System.String value)
		        {
				    if(this.TransactionReferenceNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TransactionReferenceNumberPrefix = value;
		            return this;
		        }	

				public Currency PreviousCurrency {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPreviousCurrency(Currency value)
		        {
		            if(this.PreviousCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PreviousCurrency = value;
		            return this;
		        }		

				
				public GeneralLedgerAccount PurchasePaymentDifferencesAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchasePaymentDifferencesAccount(GeneralLedgerAccount value)
		        {
		            if(this.PurchasePaymentDifferencesAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PurchasePaymentDifferencesAccount = value;
		            return this;
		        }		

				
				public GeneralLedgerAccount SuspenceAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithSuspenceAccount(GeneralLedgerAccount value)
		        {
		            if(this.SuspenceAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SuspenceAccount = value;
		            return this;
		        }		

				
				public GeneralLedgerAccount NetIncomeAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithNetIncomeAccount(GeneralLedgerAccount value)
		        {
		            if(this.NetIncomeAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.NetIncomeAccount = value;
		            return this;
		        }		

				
				public global::System.Boolean? DoAccounting {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithDoAccounting(global::System.Boolean? value)
		        {
				    if(this.DoAccounting!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DoAccounting = value;
		            return this;
		        }	

				public Facility DefaultFacility {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithDefaultFacility(Facility value)
		        {
		            if(this.DefaultFacility!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DefaultFacility = value;
		            return this;
		        }		

				
				public GeneralLedgerAccount PurchasePaymentDiscountDifferencesAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchasePaymentDiscountDifferencesAccount(GeneralLedgerAccount value)
		        {
		            if(this.PurchasePaymentDiscountDifferencesAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PurchasePaymentDiscountDifferencesAccount = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Party> Suppliers {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithSupplier(Party value)
		        {
					if(this.Suppliers == null)
					{
						this.Suppliers = new global::System.Collections.Generic.List<Party>(); 
					}
		            this.Suppliers.Add(value);
		            return this;
		        }		

				
				public global::System.Int64? NextAccountingTransactionNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithNextAccountingTransactionNumber(global::System.Int64? value)
		        {
				    if(this.NextAccountingTransactionNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextAccountingTransactionNumber = value;
		            return this;
		        }	

				public global::System.String QuoteNumberPrefix {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithQuoteNumberPrefix(global::System.String value)
		        {
				    if(this.QuoteNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.QuoteNumberPrefix = value;
		            return this;
		        }	

				public global::System.String PurchaseTransactionReferenceNumberPrefix {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPurchaseTransactionReferenceNumberPrefix(global::System.String value)
		        {
				    if(this.PurchaseTransactionReferenceNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PurchaseTransactionReferenceNumberPrefix = value;
		            return this;
		        }	

				public global::System.String TaxNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithTaxNumber(global::System.String value)
		        {
				    if(this.TaxNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TaxNumber = value;
		            return this;
		        }	

				public GeneralLedgerAccount CalculationDifferencesAccount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithCalculationDifferencesAccount(GeneralLedgerAccount value)
		        {
		            if(this.CalculationDifferencesAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CalculationDifferencesAccount = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PaymentMethod> PaymentMethods {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPaymentMethod(PaymentMethod value)
		        {
					if(this.PaymentMethods == null)
					{
						this.PaymentMethods = new global::System.Collections.Generic.List<PaymentMethod>(); 
					}
		            this.PaymentMethods.Add(value);
		            return this;
		        }		

				
				public global::System.String IncomingShipmentNumberPrefix {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithIncomingShipmentNumberPrefix(global::System.String value)
		        {
				    if(this.IncomingShipmentNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.IncomingShipmentNumberPrefix = value;
		            return this;
		        }	

				public global::System.Decimal? YTDRevenue {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithYTDRevenue(global::System.Decimal? value)
		        {
				    if(this.YTDRevenue!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.YTDRevenue = value;
		            return this;
		        }	

				public global::System.Decimal? LastYearsRevenue {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithLastYearsRevenue(global::System.Decimal? value)
		        {
				    if(this.LastYearsRevenue!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.LastYearsRevenue = value;
		            return this;
		        }	

				public TelecommunicationsNumber BillingInquiriesFax {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithBillingInquiriesFax(TelecommunicationsNumber value)
		        {
		            if(this.BillingInquiriesFax!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BillingInquiriesFax = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Qualification> Qualifications {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithQualification(Qualification value)
		        {
					if(this.Qualifications == null)
					{
						this.Qualifications = new global::System.Collections.Generic.List<Qualification>(); 
					}
		            this.Qualifications.Add(value);
		            return this;
		        }		

				
				public ContactMechanism HomeAddress {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithHomeAddress(ContactMechanism value)
		        {
		            if(this.HomeAddress!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.HomeAddress = value;
		            return this;
		        }		

				
				public ContactMechanism SalesOffice {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithSalesOffice(ContactMechanism value)
		        {
		            if(this.SalesOffice!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SalesOffice = value;
		            return this;
		        }		

				
				public TelecommunicationsNumber OrderInquiriesFax {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithOrderInquiriesFax(TelecommunicationsNumber value)
		        {
		            if(this.OrderInquiriesFax!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.OrderInquiriesFax = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Person> CurrentSalesReps {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithCurrentSalesRep(Person value)
		        {
					if(this.CurrentSalesReps == null)
					{
						this.CurrentSalesReps = new global::System.Collections.Generic.List<Person>(); 
					}
		            this.CurrentSalesReps.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PartyContactMechanism> PartyContactMechanisms {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPartyContactMechanism(PartyContactMechanism value)
		        {
					if(this.PartyContactMechanisms == null)
					{
						this.PartyContactMechanisms = new global::System.Collections.Generic.List<PartyContactMechanism>(); 
					}
		            this.PartyContactMechanisms.Add(value);
		            return this;
		        }		

				
				public TelecommunicationsNumber ShippingInquiriesFax {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithShippingInquiriesFax(TelecommunicationsNumber value)
		        {
		            if(this.ShippingInquiriesFax!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShippingInquiriesFax = value;
		            return this;
		        }		

				
				public TelecommunicationsNumber ShippingInquiriesPhone {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithShippingInquiriesPhone(TelecommunicationsNumber value)
		        {
		            if(this.ShippingInquiriesPhone!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShippingInquiriesPhone = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<BillingAccount> BillingAccounts {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithBillingAccount(BillingAccount value)
		        {
					if(this.BillingAccounts == null)
					{
						this.BillingAccounts = new global::System.Collections.Generic.List<BillingAccount>(); 
					}
		            this.BillingAccounts.Add(value);
		            return this;
		        }		

				
				public TelecommunicationsNumber OrderInquiriesPhone {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithOrderInquiriesPhone(TelecommunicationsNumber value)
		        {
		            if(this.OrderInquiriesPhone!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.OrderInquiriesPhone = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PartySkill> PartySkills {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPartySkill(PartySkill value)
		        {
					if(this.PartySkills == null)
					{
						this.PartySkills = new global::System.Collections.Generic.List<PartySkill>(); 
					}
		            this.PartySkills.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PartyClassification> PartyClassifications {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithPartyClassification(PartyClassification value)
		        {
					if(this.PartyClassifications == null)
					{
						this.PartyClassifications = new global::System.Collections.Generic.List<PartyClassification>(); 
					}
		            this.PartyClassifications.Add(value);
		            return this;
		        }		

				
				public global::System.Boolean? ExcludeFromDunning {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithExcludeFromDunning(global::System.Boolean? value)
		        {
				    if(this.ExcludeFromDunning!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ExcludeFromDunning = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<BankAccount> BankAccounts {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithBankAccount(BankAccount value)
		        {
					if(this.BankAccounts == null)
					{
						this.BankAccounts = new global::System.Collections.Generic.List<BankAccount>(); 
					}
		            this.BankAccounts.Add(value);
		            return this;
		        }		

				
				public ContactMechanism BillingAddress {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithBillingAddress(ContactMechanism value)
		        {
		            if(this.BillingAddress!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BillingAddress = value;
		            return this;
		        }		

				
				public ShipmentMethod DefaultShipmentMethod {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithDefaultShipmentMethod(ShipmentMethod value)
		        {
		            if(this.DefaultShipmentMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DefaultShipmentMethod = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Resume> Resumes {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithResume(Resume value)
		        {
					if(this.Resumes == null)
					{
						this.Resumes = new global::System.Collections.Generic.List<Resume>(); 
					}
		            this.Resumes.Add(value);
		            return this;
		        }		

				
				public ContactMechanism HeadQuarter {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithHeadQuarter(ContactMechanism value)
		        {
		            if(this.HeadQuarter!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.HeadQuarter = value;
		            return this;
		        }		

				
				public ElectronicAddress PersonalEmailAddress {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPersonalEmailAddress(ElectronicAddress value)
		        {
		            if(this.PersonalEmailAddress!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PersonalEmailAddress = value;
		            return this;
		        }		

				
				public TelecommunicationsNumber CellPhoneNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithCellPhoneNumber(TelecommunicationsNumber value)
		        {
		            if(this.CellPhoneNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CellPhoneNumber = value;
		            return this;
		        }		

				
				public TelecommunicationsNumber BillingInquiriesPhone {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithBillingInquiriesPhone(TelecommunicationsNumber value)
		        {
		            if(this.BillingInquiriesPhone!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BillingInquiriesPhone = value;
		            return this;
		        }		

				
				public global::System.String PartyName {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPartyName(global::System.String value)
		        {
				    if(this.PartyName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PartyName = value;
		            return this;
		        }	

				public ContactMechanism OrderAddress {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithOrderAddress(ContactMechanism value)
		        {
		            if(this.OrderAddress!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.OrderAddress = value;
		            return this;
		        }		

				
				public ElectronicAddress InternetAddress {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithInternetAddress(ElectronicAddress value)
		        {
		            if(this.InternetAddress!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.InternetAddress = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<Media> Contents {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithContent(Media value)
		        {
					if(this.Contents == null)
					{
						this.Contents = new global::System.Collections.Generic.List<Media>(); 
					}
		            this.Contents.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<CreditCard> CreditCards {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithCreditCard(CreditCard value)
		        {
					if(this.CreditCards == null)
					{
						this.CreditCards = new global::System.Collections.Generic.List<CreditCard>(); 
					}
		            this.CreditCards.Add(value);
		            return this;
		        }		

				
				public PostalAddress ShippingAddress {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithShippingAddress(PostalAddress value)
		        {
		            if(this.ShippingAddress!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShippingAddress = value;
		            return this;
		        }		

				
				public global::System.Decimal? OpenOrderAmount {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithOpenOrderAmount(global::System.Decimal? value)
		        {
				    if(this.OpenOrderAmount!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.OpenOrderAmount = value;
		            return this;
		        }	

				public TelecommunicationsNumber GeneralFaxNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithGeneralFaxNumber(TelecommunicationsNumber value)
		        {
		            if(this.GeneralFaxNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.GeneralFaxNumber = value;
		            return this;
		        }		

				
				public PaymentMethod DefaultPaymentMethod {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithDefaultPaymentMethod(PaymentMethod value)
		        {
		            if(this.DefaultPaymentMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DefaultPaymentMethod = value;
		            return this;
		        }		

				
				public TelecommunicationsNumber GeneralPhoneNumber {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithGeneralPhoneNumber(TelecommunicationsNumber value)
		        {
		            if(this.GeneralPhoneNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.GeneralPhoneNumber = value;
		            return this;
		        }		

				
				public Currency PreferredCurrency {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithPreferredCurrency(Currency value)
		        {
		            if(this.PreferredCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PreferredCurrency = value;
		            return this;
		        }		

				
				public VatRegime VatRegime {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithVatRegime(VatRegime value)
		        {
		            if(this.VatRegime!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.VatRegime = value;
		            return this;
		        }		

				
				public Locale Locale {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithLocale(Locale value)
		        {
		            if(this.Locale!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Locale = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public InternalOrganisationBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public SecurityToken OwnerSecurityToken {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithOwnerSecurityToken(SecurityToken value)
		        {
		            if(this.OwnerSecurityToken!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.OwnerSecurityToken = value;
		            return this;
		        }		

				
				public global::System.Guid? UniqueId {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithUniqueId(global::System.Guid? value)
		        {
				    if(this.UniqueId!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UniqueId = value;
		            return this;
		        }	

				public SearchData SearchData {get; set;}

				/// <exclude/>
				public InternalOrganisationBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				

	}

	public partial class InternalOrganisations : global::Allors.ObjectsBase<InternalOrganisation>
	{
		public static readonly InternalOrganisationMeta Meta = InternalOrganisationMeta.Instance;

		public InternalOrganisations(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}