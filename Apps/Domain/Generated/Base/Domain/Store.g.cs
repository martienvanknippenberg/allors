// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class Store
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (StoreBuilder)objectBuilder;
			

			if(builder.ShipmentThreshold.HasValue)
			{
				this.ShipmentThreshold = builder.ShipmentThreshold.Value;
			}			
		

			this.OutgoingShipmentNumberPrefix = builder.OutgoingShipmentNumberPrefix;
		

			this.SalesInvoiceNumberPrefix = builder.SalesInvoiceNumberPrefix;
					

			if(builder.PaymentGracePeriod.HasValue)
			{
				this.PaymentGracePeriod = builder.PaymentGracePeriod.Value;
			}			
					

			if(builder.PaymentNetDays.HasValue)
			{
				this.PaymentNetDays = builder.PaymentNetDays.Value;
			}			
		

			this.Name = builder.Name;
					

			if(builder.CreditLimit.HasValue)
			{
				this.CreditLimit = builder.CreditLimit.Value;
			}			
					

			if(builder.OrderThreshold.HasValue)
			{
				this.OrderThreshold = builder.OrderThreshold.Value;
			}			
					

			if(builder.NextSalesOrderNumber.HasValue)
			{
				this.NextSalesOrderNumber = builder.NextSalesOrderNumber.Value;
			}			
		

			this.SalesOrderNumberPrefix = builder.SalesOrderNumberPrefix;
					

			if(builder.NextOutgoingShipmentNumber.HasValue)
			{
				this.NextOutgoingShipmentNumber = builder.NextOutgoingShipmentNumber.Value;
			}			
					

			if(builder.NextSalesInvoiceNumber.HasValue)
			{
				this.NextSalesInvoiceNumber = builder.NextSalesInvoiceNumber.Value;
			}			
					

			if(builder.UniqueId.HasValue)
			{
				this.UniqueId = builder.UniqueId.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		
			if(builder.SalesInvoiceTemplates!=null)
			{
				this.SalesInvoiceTemplates = builder.SalesInvoiceTemplates.ToArray();
			}


			this.LogoImage = builder.LogoImage;



			this.DefaultFacility = builder.DefaultFacility;


			if(builder.SalesOrderTemplates!=null)
			{
				this.SalesOrderTemplates = builder.SalesOrderTemplates.ToArray();
			}


			this.DefaultShipmentMethod = builder.DefaultShipmentMethod;



			this.DefaultCarrier = builder.DefaultCarrier;



			this.DefaultPaymentMethod = builder.DefaultPaymentMethod;



			this.Owner = builder.Owner;


			if(builder.FiscalYearInvoiceNumbers!=null)
			{
				this.FiscalYearInvoiceNumbers = builder.FiscalYearInvoiceNumbers.ToArray();
			}

			if(builder.PaymentMethods!=null)
			{
				this.PaymentMethods = builder.PaymentMethods.ToArray();
			}

			if(builder.CustomerShipmentTemplates!=null)
			{
				this.CustomerShipmentTemplates = builder.CustomerShipmentTemplates.ToArray();
			}

			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class StoreBuilder : Allors.ObjectBuilder<Store> , UniquelyIdentifiableBuilder, UserInterfaceableBuilder, global::System.IDisposable
	{		
		public StoreBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Decimal? ShipmentThreshold {get; set;}

				/// <exclude/>
				public StoreBuilder WithShipmentThreshold(global::System.Decimal? value)
		        {
				    if(this.ShipmentThreshold!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ShipmentThreshold = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<StringTemplate> SalesInvoiceTemplates {get; set;}	

				/// <exclude/>
				public StoreBuilder WithSalesInvoiceTemplate(StringTemplate value)
		        {
					if(this.SalesInvoiceTemplates == null)
					{
						this.SalesInvoiceTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.SalesInvoiceTemplates.Add(value);
		            return this;
		        }		

				
				public global::System.String OutgoingShipmentNumberPrefix {get; set;}

				/// <exclude/>
				public StoreBuilder WithOutgoingShipmentNumberPrefix(global::System.String value)
		        {
				    if(this.OutgoingShipmentNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.OutgoingShipmentNumberPrefix = value;
		            return this;
		        }	

				public global::System.String SalesInvoiceNumberPrefix {get; set;}

				/// <exclude/>
				public StoreBuilder WithSalesInvoiceNumberPrefix(global::System.String value)
		        {
				    if(this.SalesInvoiceNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.SalesInvoiceNumberPrefix = value;
		            return this;
		        }	

				public global::System.Int32? PaymentGracePeriod {get; set;}

				/// <exclude/>
				public StoreBuilder WithPaymentGracePeriod(global::System.Int32? value)
		        {
				    if(this.PaymentGracePeriod!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PaymentGracePeriod = value;
		            return this;
		        }	

				public Media LogoImage {get; set;}

				/// <exclude/>
				public StoreBuilder WithLogoImage(Media value)
		        {
		            if(this.LogoImage!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.LogoImage = value;
		            return this;
		        }		

				
				public global::System.Int32? PaymentNetDays {get; set;}

				/// <exclude/>
				public StoreBuilder WithPaymentNetDays(global::System.Int32? value)
		        {
				    if(this.PaymentNetDays!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PaymentNetDays = value;
		            return this;
		        }	

				public Facility DefaultFacility {get; set;}

				/// <exclude/>
				public StoreBuilder WithDefaultFacility(Facility value)
		        {
		            if(this.DefaultFacility!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DefaultFacility = value;
		            return this;
		        }		

				
				public global::System.String Name {get; set;}

				/// <exclude/>
				public StoreBuilder WithName(global::System.String value)
		        {
				    if(this.Name!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Name = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<StringTemplate> SalesOrderTemplates {get; set;}	

				/// <exclude/>
				public StoreBuilder WithSalesOrderTemplate(StringTemplate value)
		        {
					if(this.SalesOrderTemplates == null)
					{
						this.SalesOrderTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.SalesOrderTemplates.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? CreditLimit {get; set;}

				/// <exclude/>
				public StoreBuilder WithCreditLimit(global::System.Decimal? value)
		        {
				    if(this.CreditLimit!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.CreditLimit = value;
		            return this;
		        }	

				public ShipmentMethod DefaultShipmentMethod {get; set;}

				/// <exclude/>
				public StoreBuilder WithDefaultShipmentMethod(ShipmentMethod value)
		        {
		            if(this.DefaultShipmentMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DefaultShipmentMethod = value;
		            return this;
		        }		

				
				public Carrier DefaultCarrier {get; set;}

				/// <exclude/>
				public StoreBuilder WithDefaultCarrier(Carrier value)
		        {
		            if(this.DefaultCarrier!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DefaultCarrier = value;
		            return this;
		        }		

				
				public global::System.Decimal? OrderThreshold {get; set;}

				/// <exclude/>
				public StoreBuilder WithOrderThreshold(global::System.Decimal? value)
		        {
				    if(this.OrderThreshold!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.OrderThreshold = value;
		            return this;
		        }	

				public PaymentMethod DefaultPaymentMethod {get; set;}

				/// <exclude/>
				public StoreBuilder WithDefaultPaymentMethod(PaymentMethod value)
		        {
		            if(this.DefaultPaymentMethod!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DefaultPaymentMethod = value;
		            return this;
		        }		

				
				public global::System.Int32? NextSalesOrderNumber {get; set;}

				/// <exclude/>
				public StoreBuilder WithNextSalesOrderNumber(global::System.Int32? value)
		        {
				    if(this.NextSalesOrderNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextSalesOrderNumber = value;
		            return this;
		        }	

				public InternalOrganisation Owner {get; set;}

				/// <exclude/>
				public StoreBuilder WithOwner(InternalOrganisation value)
		        {
		            if(this.Owner!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Owner = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<FiscalYearInvoiceNumber> FiscalYearInvoiceNumbers {get; set;}	

				/// <exclude/>
				public StoreBuilder WithFiscalYearInvoiceNumber(FiscalYearInvoiceNumber value)
		        {
					if(this.FiscalYearInvoiceNumbers == null)
					{
						this.FiscalYearInvoiceNumbers = new global::System.Collections.Generic.List<FiscalYearInvoiceNumber>(); 
					}
		            this.FiscalYearInvoiceNumbers.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PaymentMethod> PaymentMethods {get; set;}	

				/// <exclude/>
				public StoreBuilder WithPaymentMethod(PaymentMethod value)
		        {
					if(this.PaymentMethods == null)
					{
						this.PaymentMethods = new global::System.Collections.Generic.List<PaymentMethod>(); 
					}
		            this.PaymentMethods.Add(value);
		            return this;
		        }		

				
				public global::System.String SalesOrderNumberPrefix {get; set;}

				/// <exclude/>
				public StoreBuilder WithSalesOrderNumberPrefix(global::System.String value)
		        {
				    if(this.SalesOrderNumberPrefix!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.SalesOrderNumberPrefix = value;
		            return this;
		        }	

				public global::System.Int32? NextOutgoingShipmentNumber {get; set;}

				/// <exclude/>
				public StoreBuilder WithNextOutgoingShipmentNumber(global::System.Int32? value)
		        {
				    if(this.NextOutgoingShipmentNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextOutgoingShipmentNumber = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<StringTemplate> CustomerShipmentTemplates {get; set;}	

				/// <exclude/>
				public StoreBuilder WithCustomerShipmentTemplate(StringTemplate value)
		        {
					if(this.CustomerShipmentTemplates == null)
					{
						this.CustomerShipmentTemplates = new global::System.Collections.Generic.List<StringTemplate>(); 
					}
		            this.CustomerShipmentTemplates.Add(value);
		            return this;
		        }		

				
				public global::System.Int32? NextSalesInvoiceNumber {get; set;}

				/// <exclude/>
				public StoreBuilder WithNextSalesInvoiceNumber(global::System.Int32? value)
		        {
				    if(this.NextSalesInvoiceNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.NextSalesInvoiceNumber = value;
		            return this;
		        }	

				public global::System.Guid? UniqueId {get; set;}

				/// <exclude/>
				public StoreBuilder WithUniqueId(global::System.Guid? value)
		        {
				    if(this.UniqueId!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UniqueId = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public StoreBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public StoreBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public StoreBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class Stores : global::Allors.ObjectsBase<Store>
	{
		public static readonly StoreMeta Meta = StoreMeta.Instance;

		public Stores(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}