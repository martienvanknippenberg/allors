// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class Addendum
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (AddendumBuilder)objectBuilder;

			this.Text = builder.Text;
					

			if(builder.EffictiveDate.HasValue)
			{
				this.EffictiveDate = builder.EffictiveDate.Value;
			}			
		

			this.Description = builder.Description;
					

			if(builder.CreationDate.HasValue)
			{
				this.CreationDate = builder.CreationDate.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		
			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class AddendumBuilder : Allors.ObjectBuilder<Addendum> , UserInterfaceableBuilder, global::System.IDisposable
	{		
		public AddendumBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.String Text {get; set;}

				/// <exclude/>
				public AddendumBuilder WithText(global::System.String value)
		        {
				    if(this.Text!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Text = value;
		            return this;
		        }	

				public global::System.DateTime? EffictiveDate {get; set;}

				/// <exclude/>
				public AddendumBuilder WithEffictiveDate(global::System.DateTime? value)
		        {
				    if(this.EffictiveDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.EffictiveDate = value;
		            return this;
		        }	

				public global::System.String Description {get; set;}

				/// <exclude/>
				public AddendumBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public global::System.DateTime? CreationDate {get; set;}

				/// <exclude/>
				public AddendumBuilder WithCreationDate(global::System.DateTime? value)
		        {
				    if(this.CreationDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.CreationDate = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public AddendumBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public AddendumBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public AddendumBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class Addenda : global::Allors.ObjectsBase<Addendum>
	{
		public static readonly AddendumMeta Meta = AddendumMeta.Instance;

		public Addenda(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}