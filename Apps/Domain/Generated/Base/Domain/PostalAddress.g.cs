// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class PostalAddress
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (PostalAddressBuilder)objectBuilder;

			this.Address3 = builder.Address3;
		

			this.Address2 = builder.Address2;
		

			this.Address1 = builder.Address1;
		

			this.Directions = builder.Directions;
		

			this.FormattedFullAddress = builder.FormattedFullAddress;
		

			this.Description = builder.Description;
		

			this.DisplayName = builder.DisplayName;
					

			if(builder.Latitude.HasValue)
			{
				this.Latitude = builder.Latitude.Value;
			}			
					

			if(builder.Longitude.HasValue)
			{
				this.Longitude = builder.Longitude.Value;
			}			
					

			if(builder.UniqueId.HasValue)
			{
				this.UniqueId = builder.UniqueId.Value;
			}			
		
			if(builder.GeographicBoundaries!=null)
			{
				this.GeographicBoundaries = builder.GeographicBoundaries.ToArray();
			}


			this.Country = builder.Country;



			this.City = builder.City;



			this.PostalBoundary = builder.PostalBoundary;



			this.PostalCode = builder.PostalCode;


			if(builder.FollowTo!=null)
			{
				this.FollowTo = builder.FollowTo.ToArray();
			}

			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.SearchData = builder.SearchData;


		}
	}

	public partial class PostalAddressBuilder : Allors.ObjectBuilder<PostalAddress> , ContactMechanismBuilder, AccessControlledObjectBuilder, GeoLocatableBuilder, global::System.IDisposable
	{		
		public PostalAddressBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Collections.Generic.List<GeographicBoundary> GeographicBoundaries {get; set;}	

				/// <exclude/>
				public PostalAddressBuilder WithGeographicBoundary(GeographicBoundary value)
		        {
					if(this.GeographicBoundaries == null)
					{
						this.GeographicBoundaries = new global::System.Collections.Generic.List<GeographicBoundary>(); 
					}
		            this.GeographicBoundaries.Add(value);
		            return this;
		        }		

				
				public global::System.String Address3 {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithAddress3(global::System.String value)
		        {
				    if(this.Address3!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Address3 = value;
		            return this;
		        }	

				public Country Country {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithCountry(Country value)
		        {
		            if(this.Country!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Country = value;
		            return this;
		        }		

				
				public global::System.String Address2 {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithAddress2(global::System.String value)
		        {
				    if(this.Address2!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Address2 = value;
		            return this;
		        }	

				public City City {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithCity(City value)
		        {
		            if(this.City!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.City = value;
		            return this;
		        }		

				
				public global::System.String Address1 {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithAddress1(global::System.String value)
		        {
				    if(this.Address1!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Address1 = value;
		            return this;
		        }	

				public PostalBoundary PostalBoundary {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithPostalBoundary(PostalBoundary value)
		        {
		            if(this.PostalBoundary!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PostalBoundary = value;
		            return this;
		        }		

				
				public PostalCode PostalCode {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithPostalCode(PostalCode value)
		        {
		            if(this.PostalCode!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PostalCode = value;
		            return this;
		        }		

				
				public global::System.String Directions {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithDirections(global::System.String value)
		        {
				    if(this.Directions!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Directions = value;
		            return this;
		        }	

				public global::System.String FormattedFullAddress {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithFormattedFullAddress(global::System.String value)
		        {
				    if(this.FormattedFullAddress!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.FormattedFullAddress = value;
		            return this;
		        }	

				public global::System.String Description {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<ContactMechanism> FollowTo {get; set;}	

				/// <exclude/>
				public PostalAddressBuilder WithFollowTo(ContactMechanism value)
		        {
					if(this.FollowTo == null)
					{
						this.FollowTo = new global::System.Collections.Generic.List<ContactMechanism>(); 
					}
		            this.FollowTo.Add(value);
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public PostalAddressBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public PostalAddressBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public SearchData SearchData {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				
				public global::System.Decimal? Latitude {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithLatitude(global::System.Decimal? value)
		        {
				    if(this.Latitude!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Latitude = value;
		            return this;
		        }	

				public global::System.Decimal? Longitude {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithLongitude(global::System.Decimal? value)
		        {
				    if(this.Longitude!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Longitude = value;
		            return this;
		        }	

				public global::System.Guid? UniqueId {get; set;}

				/// <exclude/>
				public PostalAddressBuilder WithUniqueId(global::System.Guid? value)
		        {
				    if(this.UniqueId!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UniqueId = value;
		            return this;
		        }	


	}

	public partial class PostalAddresses : global::Allors.ObjectsBase<PostalAddress>
	{
		public static readonly PostalAddressMeta Meta = PostalAddressMeta.Instance;

		public PostalAddresses(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}