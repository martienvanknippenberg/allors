// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class PaymentApplication
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (PaymentApplicationBuilder)objectBuilder;
			

			if(builder.AmountApplied.HasValue)
			{
				this.AmountApplied = builder.AmountApplied.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.InvoiceItem = builder.InvoiceItem;



			this.Invoice = builder.Invoice;



			this.BillingAccount = builder.BillingAccount;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class PaymentApplicationBuilder : Allors.ObjectBuilder<PaymentApplication> , UserInterfaceableBuilder, global::System.IDisposable
	{		
		public PaymentApplicationBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Decimal? AmountApplied {get; set;}

				/// <exclude/>
				public PaymentApplicationBuilder WithAmountApplied(global::System.Decimal? value)
		        {
				    if(this.AmountApplied!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AmountApplied = value;
		            return this;
		        }	

				public InvoiceItem InvoiceItem {get; set;}

				/// <exclude/>
				public PaymentApplicationBuilder WithInvoiceItem(InvoiceItem value)
		        {
		            if(this.InvoiceItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.InvoiceItem = value;
		            return this;
		        }		

				
				public Invoice Invoice {get; set;}

				/// <exclude/>
				public PaymentApplicationBuilder WithInvoice(Invoice value)
		        {
		            if(this.Invoice!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Invoice = value;
		            return this;
		        }		

				
				public BillingAccount BillingAccount {get; set;}

				/// <exclude/>
				public PaymentApplicationBuilder WithBillingAccount(BillingAccount value)
		        {
		            if(this.BillingAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BillingAccount = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public PaymentApplicationBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public PaymentApplicationBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public PaymentApplicationBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class PaymentApplications : global::Allors.ObjectsBase<PaymentApplication>
	{
		public static readonly PaymentApplicationMeta Meta = PaymentApplicationMeta.Instance;

		public PaymentApplications(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}