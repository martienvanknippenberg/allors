// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class PositionType
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (PositionTypeBuilder)objectBuilder;

			this.Description = builder.Description;
					

			if(builder.BenefitPercentage.HasValue)
			{
				this.BenefitPercentage = builder.BenefitPercentage.Value;
			}			
		

			this.Title = builder.Title;
		

			this.DisplayName = builder.DisplayName;
		
			if(builder.Responsibilities!=null)
			{
				this.Responsibilities = builder.Responsibilities.ToArray();
			}


			this.PositionTypeRate = builder.PositionTypeRate;



			this.SearchData = builder.SearchData;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class PositionTypeBuilder : Allors.ObjectBuilder<PositionType> , SearchableBuilder, UserInterfaceableBuilder, global::System.IDisposable
	{		
		public PositionTypeBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.String Description {get; set;}

				/// <exclude/>
				public PositionTypeBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Responsibility> Responsibilities {get; set;}	

				/// <exclude/>
				public PositionTypeBuilder WithResponsibility(Responsibility value)
		        {
					if(this.Responsibilities == null)
					{
						this.Responsibilities = new global::System.Collections.Generic.List<Responsibility>(); 
					}
		            this.Responsibilities.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? BenefitPercentage {get; set;}

				/// <exclude/>
				public PositionTypeBuilder WithBenefitPercentage(global::System.Decimal? value)
		        {
				    if(this.BenefitPercentage!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.BenefitPercentage = value;
		            return this;
		        }	

				public global::System.String Title {get; set;}

				/// <exclude/>
				public PositionTypeBuilder WithTitle(global::System.String value)
		        {
				    if(this.Title!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Title = value;
		            return this;
		        }	

				public PositionTypeRate PositionTypeRate {get; set;}

				/// <exclude/>
				public PositionTypeBuilder WithPositionTypeRate(PositionTypeRate value)
		        {
		            if(this.PositionTypeRate!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PositionTypeRate = value;
		            return this;
		        }		

				
				public SearchData SearchData {get; set;}

				/// <exclude/>
				public PositionTypeBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public PositionTypeBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public PositionTypeBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public PositionTypeBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class PositionTypes : global::Allors.ObjectsBase<PositionType>
	{
		public static readonly PositionTypeMeta Meta = PositionTypeMeta.Instance;

		public PositionTypes(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}