// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class PurchaseInvoice
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (PurchaseInvoiceBuilder)objectBuilder;
			

			if(builder.TotalShippingAndHandlingCustomerCurrency.HasValue)
			{
				this.TotalShippingAndHandlingCustomerCurrency = builder.TotalShippingAndHandlingCustomerCurrency.Value;
			}			
		

			this.Description = builder.Description;
					

			if(builder.TotalFeeCustomerCurrency.HasValue)
			{
				this.TotalFeeCustomerCurrency = builder.TotalFeeCustomerCurrency.Value;
			}			
					

			if(builder.TotalExVatCustomerCurrency.HasValue)
			{
				this.TotalExVatCustomerCurrency = builder.TotalExVatCustomerCurrency.Value;
			}			
		

			this.CustomerReference = builder.CustomerReference;
					

			if(builder.AmountPaid.HasValue)
			{
				this.AmountPaid = builder.AmountPaid.Value;
			}			
					

			if(builder.TotalDiscount.HasValue)
			{
				this.TotalDiscount = builder.TotalDiscount.Value;
			}			
					

			if(builder.TotalIncVat.HasValue)
			{
				this.TotalIncVat = builder.TotalIncVat.Value;
			}			
					

			if(builder.TotalSurcharge.HasValue)
			{
				this.TotalSurcharge = builder.TotalSurcharge.Value;
			}			
					

			if(builder.TotalBasePrice.HasValue)
			{
				this.TotalBasePrice = builder.TotalBasePrice.Value;
			}			
					

			if(builder.TotalVatCustomerCurrency.HasValue)
			{
				this.TotalVatCustomerCurrency = builder.TotalVatCustomerCurrency.Value;
			}			
					

			if(builder.InvoiceDate.HasValue)
			{
				this.InvoiceDate = builder.InvoiceDate.Value;
			}			
					

			if(builder.EntryDate.HasValue)
			{
				this.EntryDate = builder.EntryDate.Value;
			}			
					

			if(builder.TotalIncVatCustomerCurrency.HasValue)
			{
				this.TotalIncVatCustomerCurrency = builder.TotalIncVatCustomerCurrency.Value;
			}			
					

			if(builder.TotalShippingAndHandling.HasValue)
			{
				this.TotalShippingAndHandling = builder.TotalShippingAndHandling.Value;
			}			
					

			if(builder.TotalBasePriceCustomerCurrency.HasValue)
			{
				this.TotalBasePriceCustomerCurrency = builder.TotalBasePriceCustomerCurrency.Value;
			}			
					

			if(builder.TotalExVat.HasValue)
			{
				this.TotalExVat = builder.TotalExVat.Value;
			}			
					

			if(builder.TotalSurchargeCustomerCurrency.HasValue)
			{
				this.TotalSurchargeCustomerCurrency = builder.TotalSurchargeCustomerCurrency.Value;
			}			
		

			this.InvoiceNumber = builder.InvoiceNumber;
		

			this.Message = builder.Message;
					

			if(builder.TotalDiscountCustomerCurrency.HasValue)
			{
				this.TotalDiscountCustomerCurrency = builder.TotalDiscountCustomerCurrency.Value;
			}			
					

			if(builder.TotalVat.HasValue)
			{
				this.TotalVat = builder.TotalVat.Value;
			}			
					

			if(builder.TotalFee.HasValue)
			{
				this.TotalFee = builder.TotalFee.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.Comment = builder.Comment;
		

			this.PrintContent = builder.PrintContent;
					

			if(builder.UniqueId.HasValue)
			{
				this.UniqueId = builder.UniqueId.Value;
			}			
		

			this.PreviousObjectState = builder.PreviousObjectState;


			if(builder.PurchaseInvoiceItems!=null)
			{
				this.PurchaseInvoiceItems = builder.PurchaseInvoiceItems.ToArray();
			}


			this.BilledToInternalOrganisation = builder.BilledToInternalOrganisation;



			this.CurrentInvoiceStatus = builder.CurrentInvoiceStatus;



			this.CurrentObjectState = builder.CurrentObjectState;



			this.BilledFromParty = builder.BilledFromParty;



			this.PurchaseInvoiceType = builder.PurchaseInvoiceType;


			if(builder.InvoiceStatuses!=null)
			{
				this.InvoiceStatuses = builder.InvoiceStatuses.ToArray();
			}


			this.CustomerCurrency = builder.CustomerCurrency;



			this.ShippingAndHandlingCharge = builder.ShippingAndHandlingCharge;



			this.Fee = builder.Fee;



			this.DiscountAdjustment = builder.DiscountAdjustment;



			this.BillingAccount = builder.BillingAccount;



			this.SurchargeAdjustment = builder.SurchargeAdjustment;


			if(builder.InvoiceTerms!=null)
			{
				this.InvoiceTerms = builder.InvoiceTerms.ToArray();
			}


			this.VatRegime = builder.VatRegime;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.Locale = builder.Locale;



			this.SearchData = builder.SearchData;


		}
	}

	public partial class PurchaseInvoiceBuilder : Allors.ObjectBuilder<PurchaseInvoice> , InvoiceBuilder, global::System.IDisposable
	{		
		public PurchaseInvoiceBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public PurchaseInvoiceObjectState PreviousObjectState {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithPreviousObjectState(PurchaseInvoiceObjectState value)
		        {
		            if(this.PreviousObjectState!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PreviousObjectState = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PurchaseInvoiceItem> PurchaseInvoiceItems {get; set;}	

				/// <exclude/>
				public PurchaseInvoiceBuilder WithPurchaseInvoiceItem(PurchaseInvoiceItem value)
		        {
					if(this.PurchaseInvoiceItems == null)
					{
						this.PurchaseInvoiceItems = new global::System.Collections.Generic.List<PurchaseInvoiceItem>(); 
					}
		            this.PurchaseInvoiceItems.Add(value);
		            return this;
		        }		

				
				public InternalOrganisation BilledToInternalOrganisation {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithBilledToInternalOrganisation(InternalOrganisation value)
		        {
		            if(this.BilledToInternalOrganisation!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BilledToInternalOrganisation = value;
		            return this;
		        }		

				
				public PurchaseInvoiceStatus CurrentInvoiceStatus {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithCurrentInvoiceStatus(PurchaseInvoiceStatus value)
		        {
		            if(this.CurrentInvoiceStatus!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CurrentInvoiceStatus = value;
		            return this;
		        }		

				
				public PurchaseInvoiceObjectState CurrentObjectState {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithCurrentObjectState(PurchaseInvoiceObjectState value)
		        {
		            if(this.CurrentObjectState!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CurrentObjectState = value;
		            return this;
		        }		

				
				public Party BilledFromParty {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithBilledFromParty(Party value)
		        {
		            if(this.BilledFromParty!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BilledFromParty = value;
		            return this;
		        }		

				
				public PurchaseInvoiceType PurchaseInvoiceType {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithPurchaseInvoiceType(PurchaseInvoiceType value)
		        {
		            if(this.PurchaseInvoiceType!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PurchaseInvoiceType = value;
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<PurchaseInvoiceStatus> InvoiceStatuses {get; set;}	

				/// <exclude/>
				public PurchaseInvoiceBuilder WithInvoiceStatus(PurchaseInvoiceStatus value)
		        {
					if(this.InvoiceStatuses == null)
					{
						this.InvoiceStatuses = new global::System.Collections.Generic.List<PurchaseInvoiceStatus>(); 
					}
		            this.InvoiceStatuses.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? TotalShippingAndHandlingCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalShippingAndHandlingCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalShippingAndHandlingCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalShippingAndHandlingCustomerCurrency = value;
		            return this;
		        }	

				public Currency CustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithCustomerCurrency(Currency value)
		        {
		            if(this.CustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.CustomerCurrency = value;
		            return this;
		        }		

				
				public global::System.String Description {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public ShippingAndHandlingCharge ShippingAndHandlingCharge {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithShippingAndHandlingCharge(ShippingAndHandlingCharge value)
		        {
		            if(this.ShippingAndHandlingCharge!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShippingAndHandlingCharge = value;
		            return this;
		        }		

				
				public global::System.Decimal? TotalFeeCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalFeeCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalFeeCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalFeeCustomerCurrency = value;
		            return this;
		        }	

				public Fee Fee {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithFee(Fee value)
		        {
		            if(this.Fee!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Fee = value;
		            return this;
		        }		

				
				public global::System.Decimal? TotalExVatCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalExVatCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalExVatCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalExVatCustomerCurrency = value;
		            return this;
		        }	

				public global::System.String CustomerReference {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithCustomerReference(global::System.String value)
		        {
				    if(this.CustomerReference!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.CustomerReference = value;
		            return this;
		        }	

				public DiscountAdjustment DiscountAdjustment {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithDiscountAdjustment(DiscountAdjustment value)
		        {
		            if(this.DiscountAdjustment!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.DiscountAdjustment = value;
		            return this;
		        }		

				
				public global::System.Decimal? AmountPaid {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithAmountPaid(global::System.Decimal? value)
		        {
				    if(this.AmountPaid!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.AmountPaid = value;
		            return this;
		        }	

				public global::System.Decimal? TotalDiscount {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalDiscount(global::System.Decimal? value)
		        {
				    if(this.TotalDiscount!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalDiscount = value;
		            return this;
		        }	

				public BillingAccount BillingAccount {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithBillingAccount(BillingAccount value)
		        {
		            if(this.BillingAccount!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.BillingAccount = value;
		            return this;
		        }		

				
				public global::System.Decimal? TotalIncVat {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalIncVat(global::System.Decimal? value)
		        {
				    if(this.TotalIncVat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalIncVat = value;
		            return this;
		        }	

				public global::System.Decimal? TotalSurcharge {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalSurcharge(global::System.Decimal? value)
		        {
				    if(this.TotalSurcharge!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalSurcharge = value;
		            return this;
		        }	

				public global::System.Decimal? TotalBasePrice {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalBasePrice(global::System.Decimal? value)
		        {
				    if(this.TotalBasePrice!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalBasePrice = value;
		            return this;
		        }	

				public global::System.Decimal? TotalVatCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalVatCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalVatCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalVatCustomerCurrency = value;
		            return this;
		        }	

				public global::System.DateTime? InvoiceDate {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithInvoiceDate(global::System.DateTime? value)
		        {
				    if(this.InvoiceDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.InvoiceDate = value;
		            return this;
		        }	

				public global::System.DateTime? EntryDate {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithEntryDate(global::System.DateTime? value)
		        {
				    if(this.EntryDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.EntryDate = value;
		            return this;
		        }	

				public global::System.Decimal? TotalIncVatCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalIncVatCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalIncVatCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalIncVatCustomerCurrency = value;
		            return this;
		        }	

				public global::System.Decimal? TotalShippingAndHandling {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalShippingAndHandling(global::System.Decimal? value)
		        {
				    if(this.TotalShippingAndHandling!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalShippingAndHandling = value;
		            return this;
		        }	

				public global::System.Decimal? TotalBasePriceCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalBasePriceCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalBasePriceCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalBasePriceCustomerCurrency = value;
		            return this;
		        }	

				public SurchargeAdjustment SurchargeAdjustment {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithSurchargeAdjustment(SurchargeAdjustment value)
		        {
		            if(this.SurchargeAdjustment!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SurchargeAdjustment = value;
		            return this;
		        }		

				
				public global::System.Decimal? TotalExVat {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalExVat(global::System.Decimal? value)
		        {
				    if(this.TotalExVat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalExVat = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<InvoiceTerm> InvoiceTerms {get; set;}	

				/// <exclude/>
				public PurchaseInvoiceBuilder WithInvoiceTerm(InvoiceTerm value)
		        {
					if(this.InvoiceTerms == null)
					{
						this.InvoiceTerms = new global::System.Collections.Generic.List<InvoiceTerm>(); 
					}
		            this.InvoiceTerms.Add(value);
		            return this;
		        }		

				
				public global::System.Decimal? TotalSurchargeCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalSurchargeCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalSurchargeCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalSurchargeCustomerCurrency = value;
		            return this;
		        }	

				public global::System.String InvoiceNumber {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithInvoiceNumber(global::System.String value)
		        {
				    if(this.InvoiceNumber!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.InvoiceNumber = value;
		            return this;
		        }	

				public global::System.String Message {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithMessage(global::System.String value)
		        {
				    if(this.Message!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Message = value;
		            return this;
		        }	

				public VatRegime VatRegime {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithVatRegime(VatRegime value)
		        {
		            if(this.VatRegime!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.VatRegime = value;
		            return this;
		        }		

				
				public global::System.Decimal? TotalDiscountCustomerCurrency {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalDiscountCustomerCurrency(global::System.Decimal? value)
		        {
				    if(this.TotalDiscountCustomerCurrency!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalDiscountCustomerCurrency = value;
		            return this;
		        }	

				public global::System.Decimal? TotalVat {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalVat(global::System.Decimal? value)
		        {
				    if(this.TotalVat!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalVat = value;
		            return this;
		        }	

				public global::System.Decimal? TotalFee {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithTotalFee(global::System.Decimal? value)
		        {
				    if(this.TotalFee!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.TotalFee = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public PurchaseInvoiceBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public PurchaseInvoiceBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public Locale Locale {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithLocale(Locale value)
		        {
		            if(this.Locale!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Locale = value;
		            return this;
		        }		

				
				public global::System.String Comment {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithComment(global::System.String value)
		        {
				    if(this.Comment!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Comment = value;
		            return this;
		        }	

				public SearchData SearchData {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				
				public global::System.String PrintContent {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithPrintContent(global::System.String value)
		        {
				    if(this.PrintContent!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.PrintContent = value;
		            return this;
		        }	

				public global::System.Guid? UniqueId {get; set;}

				/// <exclude/>
				public PurchaseInvoiceBuilder WithUniqueId(global::System.Guid? value)
		        {
				    if(this.UniqueId!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.UniqueId = value;
		            return this;
		        }	


	}

	public partial class PurchaseInvoices : global::Allors.ObjectsBase<PurchaseInvoice>
	{
		public static readonly PurchaseInvoiceMeta Meta = PurchaseInvoiceMeta.Instance;

		public PurchaseInvoices(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}