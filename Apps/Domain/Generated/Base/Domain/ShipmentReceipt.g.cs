// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class ShipmentReceipt
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (ShipmentReceiptBuilder)objectBuilder;

			this.ItemDescription = builder.ItemDescription;
		

			this.RejectionReason = builder.RejectionReason;
					

			if(builder.QuantityRejected.HasValue)
			{
				this.QuantityRejected = builder.QuantityRejected.Value;
			}			
					

			if(builder.ReceivedDateTime.HasValue)
			{
				this.ReceivedDateTime = builder.ReceivedDateTime.Value;
			}			
					

			if(builder.QuantityAccepted.HasValue)
			{
				this.QuantityAccepted = builder.QuantityAccepted.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.InventoryItem = builder.InventoryItem;



			this.OrderItem = builder.OrderItem;



			this.ShipmentItem = builder.ShipmentItem;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class ShipmentReceiptBuilder : Allors.ObjectBuilder<ShipmentReceipt> , UserInterfaceableBuilder, global::System.IDisposable
	{		
		public ShipmentReceiptBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.String ItemDescription {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithItemDescription(global::System.String value)
		        {
				    if(this.ItemDescription!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ItemDescription = value;
		            return this;
		        }	

				public NonSerializedInventoryItem InventoryItem {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithInventoryItem(NonSerializedInventoryItem value)
		        {
		            if(this.InventoryItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.InventoryItem = value;
		            return this;
		        }		

				
				public global::System.String RejectionReason {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithRejectionReason(global::System.String value)
		        {
				    if(this.RejectionReason!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.RejectionReason = value;
		            return this;
		        }	

				public OrderItem OrderItem {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithOrderItem(OrderItem value)
		        {
		            if(this.OrderItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.OrderItem = value;
		            return this;
		        }		

				
				public global::System.Decimal? QuantityRejected {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithQuantityRejected(global::System.Decimal? value)
		        {
				    if(this.QuantityRejected!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.QuantityRejected = value;
		            return this;
		        }	

				public ShipmentItem ShipmentItem {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithShipmentItem(ShipmentItem value)
		        {
		            if(this.ShipmentItem!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.ShipmentItem = value;
		            return this;
		        }		

				
				public global::System.DateTime? ReceivedDateTime {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithReceivedDateTime(global::System.DateTime? value)
		        {
				    if(this.ReceivedDateTime!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ReceivedDateTime = value;
		            return this;
		        }	

				public global::System.Decimal? QuantityAccepted {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithQuantityAccepted(global::System.Decimal? value)
		        {
				    if(this.QuantityAccepted!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.QuantityAccepted = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public ShipmentReceiptBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public ShipmentReceiptBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public ShipmentReceiptBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class ShipmentReceipts : global::Allors.ObjectsBase<ShipmentReceipt>
	{
		public static readonly ShipmentReceiptMeta Meta = ShipmentReceiptMeta.Instance;

		public ShipmentReceipts(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}