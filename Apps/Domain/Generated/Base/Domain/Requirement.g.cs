// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface RequirementBuilder : SearchResultBuilder ,TransitionalBuilder ,UniquelyIdentifiableBuilder ,UserInterfaceableBuilder ,SearchableBuilder , global::System.IDisposable
	{	

		global::System.DateTime? RequiredByDate {get;}

		
		RequirementObjectState PreviousObjectState {get;}

		
		Party Authorizer {get;}

		

		global::System.Collections.Generic.List<RequirementStatus> RequirementStatuses {get;}		

		

		global::System.String Reason {get;}

		

		global::System.Collections.Generic.List<Requirement> Children {get;}		

		
		Party NeededFor {get;}

		
		Party Originator {get;}

		
		RequirementObjectState CurrentObjectState {get;}

		
		RequirementStatus CurrentRequirementStatus {get;}

		
		Facility Facility {get;}

		
		Party ServicedBy {get;}

		

		global::System.Decimal? EstimatedBudget {get;}

		

		global::System.String Description {get;}

		

		global::System.Int32? Quantity {get;}

		
	}

	public partial class Requirements : global::Allors.ObjectsBase<Requirement>
	{
		public static readonly RequirementMeta Meta = RequirementMeta.Instance;

		public Requirements(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}