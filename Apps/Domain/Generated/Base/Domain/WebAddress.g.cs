// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class WebAddress
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (WebAddressBuilder)objectBuilder;

			this.ElectronicAddressString = builder.ElectronicAddressString;
		

			this.Description = builder.Description;
		

			this.DisplayName = builder.DisplayName;
		
			if(builder.FollowTo!=null)
			{
				this.FollowTo = builder.FollowTo.ToArray();
			}

			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}


			this.SearchData = builder.SearchData;


		}
	}

	public partial class WebAddressBuilder : Allors.ObjectBuilder<WebAddress> , ElectronicAddressBuilder, global::System.IDisposable
	{		
		public WebAddressBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.String ElectronicAddressString {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithElectronicAddressString(global::System.String value)
		        {
				    if(this.ElectronicAddressString!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ElectronicAddressString = value;
		            return this;
		        }	

				public global::System.String Description {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithDescription(global::System.String value)
		        {
				    if(this.Description!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Description = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<ContactMechanism> FollowTo {get; set;}	

				/// <exclude/>
				public WebAddressBuilder WithFollowTo(ContactMechanism value)
		        {
					if(this.FollowTo == null)
					{
						this.FollowTo = new global::System.Collections.Generic.List<ContactMechanism>(); 
					}
		            this.FollowTo.Add(value);
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public WebAddressBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public WebAddressBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public SearchData SearchData {get; set;}

				/// <exclude/>
				public WebAddressBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				

	}

	public partial class WebAddresses : global::Allors.ObjectsBase<WebAddress>
	{
		public static readonly WebAddressMeta Meta = WebAddressMeta.Instance;

		public WebAddresses(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}