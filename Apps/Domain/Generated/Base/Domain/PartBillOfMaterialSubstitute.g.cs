// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class PartBillOfMaterialSubstitute
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (PartBillOfMaterialSubstituteBuilder)objectBuilder;
			

			if(builder.Quantity.HasValue)
			{
				this.Quantity = builder.Quantity.Value;
			}			
					

			if(builder.FromDate.HasValue)
			{
				this.FromDate = builder.FromDate.Value;
			}			
					

			if(builder.ThroughDate.HasValue)
			{
				this.ThroughDate = builder.ThroughDate.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.Comment = builder.Comment;
		

			this.SubstitutionPartBillOfMaterial = builder.SubstitutionPartBillOfMaterial;



			this.Preference = builder.Preference;



			this.PartBillOfMaterial = builder.PartBillOfMaterial;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class PartBillOfMaterialSubstituteBuilder : Allors.ObjectBuilder<PartBillOfMaterialSubstitute> , PeriodBuilder, UserInterfaceableBuilder, CommentableBuilder, global::System.IDisposable
	{		
		public PartBillOfMaterialSubstituteBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public PartBillOfMaterial SubstitutionPartBillOfMaterial {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithSubstitutionPartBillOfMaterial(PartBillOfMaterial value)
		        {
		            if(this.SubstitutionPartBillOfMaterial!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SubstitutionPartBillOfMaterial = value;
		            return this;
		        }		

				
				public Ordinal Preference {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithPreference(Ordinal value)
		        {
		            if(this.Preference!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Preference = value;
		            return this;
		        }		

				
				public global::System.Int32? Quantity {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithQuantity(global::System.Int32? value)
		        {
				    if(this.Quantity!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Quantity = value;
		            return this;
		        }	

				public PartBillOfMaterial PartBillOfMaterial {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithPartBillOfMaterial(PartBillOfMaterial value)
		        {
		            if(this.PartBillOfMaterial!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.PartBillOfMaterial = value;
		            return this;
		        }		

				
				public global::System.DateTime? FromDate {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithFromDate(global::System.DateTime? value)
		        {
				    if(this.FromDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.FromDate = value;
		            return this;
		        }	

				public global::System.DateTime? ThroughDate {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithThroughDate(global::System.DateTime? value)
		        {
				    if(this.ThroughDate!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.ThroughDate = value;
		            return this;
		        }	

				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				
				public global::System.String Comment {get; set;}

				/// <exclude/>
				public PartBillOfMaterialSubstituteBuilder WithComment(global::System.String value)
		        {
				    if(this.Comment!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Comment = value;
		            return this;
		        }	


	}

	public partial class PartBillOfMaterialSubstitutes : global::Allors.ObjectsBase<PartBillOfMaterialSubstitute>
	{
		public static readonly PartBillOfMaterialSubstituteMeta Meta = PartBillOfMaterialSubstituteMeta.Instance;

		public PartBillOfMaterialSubstitutes(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}