// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{

	public partial class NewsItem
	{		
		internal override void OnBuild(global::Allors.IObjectBuilder objectBuilder)
		{
			var builder = (NewsItemBuilder)objectBuilder;
			

			if(builder.IsPublished.HasValue)
			{
				this.IsPublished = builder.IsPublished.Value;
			}			
		

			this.Title = builder.Title;
					

			if(builder.DisplayOrder.HasValue)
			{
				this.DisplayOrder = builder.DisplayOrder.Value;
			}			
		

			this.LongText = builder.LongText;
		

			this.Text = builder.Text;
					

			if(builder.Date.HasValue)
			{
				this.Date = builder.Date.Value;
			}			
					

			if(builder.Announcement.HasValue)
			{
				this.Announcement = builder.Announcement.Value;
			}			
		

			this.DisplayName = builder.DisplayName;
		

			this.Locale = builder.Locale;



			this.SearchData = builder.SearchData;


			if(builder.DeniedPermissions!=null)
			{
				this.DeniedPermissions = builder.DeniedPermissions.ToArray();
			}

			if(builder.SecurityTokens!=null)
			{
				this.SecurityTokens = builder.SecurityTokens.ToArray();
			}

		}
	}

	public partial class NewsItemBuilder : Allors.ObjectBuilder<NewsItem> , SearchableBuilder, SearchResultBuilder, UserInterfaceableBuilder, global::System.IDisposable
	{		
		public NewsItemBuilder(Allors.ISession session) : base(session)
	    {
	    }

				public global::System.Boolean? IsPublished {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithIsPublished(global::System.Boolean? value)
		        {
				    if(this.IsPublished!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.IsPublished = value;
		            return this;
		        }	

				public global::System.String Title {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithTitle(global::System.String value)
		        {
				    if(this.Title!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Title = value;
		            return this;
		        }	

				public global::System.Int32? DisplayOrder {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithDisplayOrder(global::System.Int32? value)
		        {
				    if(this.DisplayOrder!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayOrder = value;
		            return this;
		        }	

				public Locale Locale {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithLocale(Locale value)
		        {
		            if(this.Locale!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.Locale = value;
		            return this;
		        }		

				
				public global::System.String LongText {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithLongText(global::System.String value)
		        {
				    if(this.LongText!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.LongText = value;
		            return this;
		        }	

				public global::System.String Text {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithText(global::System.String value)
		        {
				    if(this.Text!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Text = value;
		            return this;
		        }	

				public global::System.DateTime? Date {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithDate(global::System.DateTime? value)
		        {
				    if(this.Date!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Date = value;
		            return this;
		        }	

				public global::System.Boolean? Announcement {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithAnnouncement(global::System.Boolean? value)
		        {
				    if(this.Announcement!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.Announcement = value;
		            return this;
		        }	

				public SearchData SearchData {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithSearchData(SearchData value)
		        {
		            if(this.SearchData!=null){throw new global::System.ArgumentException("One multicplicity");}
					this.SearchData = value;
		            return this;
		        }		

				
				public global::System.String DisplayName {get; set;}

				/// <exclude/>
				public NewsItemBuilder WithDisplayName(global::System.String value)
		        {
				    if(this.DisplayName!=null){throw new global::System.ArgumentException("One multicplicity");}
		            this.DisplayName = value;
		            return this;
		        }	

				public global::System.Collections.Generic.List<Permission> DeniedPermissions {get; set;}	

				/// <exclude/>
				public NewsItemBuilder WithDeniedPermission(Permission value)
		        {
					if(this.DeniedPermissions == null)
					{
						this.DeniedPermissions = new global::System.Collections.Generic.List<Permission>(); 
					}
		            this.DeniedPermissions.Add(value);
		            return this;
		        }		

				
				public global::System.Collections.Generic.List<SecurityToken> SecurityTokens {get; set;}	

				/// <exclude/>
				public NewsItemBuilder WithSecurityToken(SecurityToken value)
		        {
					if(this.SecurityTokens == null)
					{
						this.SecurityTokens = new global::System.Collections.Generic.List<SecurityToken>(); 
					}
		            this.SecurityTokens.Add(value);
		            return this;
		        }		

				

	}

	public partial class NewsItems : global::Allors.ObjectsBase<NewsItem>
	{
		public static readonly NewsItemMeta Meta = NewsItemMeta.Instance;

		public NewsItems(Allors.ISession session) : base(session)
		{
		}

		public override Allors.Meta.Composite ObjectType
		{
			get
			{
				return Meta.ObjectType;
			}
		}
	}

}