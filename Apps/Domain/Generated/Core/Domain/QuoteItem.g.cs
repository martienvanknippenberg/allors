// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class QuoteItem : Allors.ObjectBase , Commentable, UserInterfaceable
	{
		public static readonly QuoteItemMeta Meta = QuoteItemMeta.Instance;

		public QuoteItem(Allors.IStrategy allors) : base(allors) {}

		public static QuoteItem Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (QuoteItem) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public Party Authorizer
		{ 
			get
			{
				return (Party) Strategy.GetCompositeRole(Meta.Authorizer);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Authorizer ,value);
			}
		}

		virtual public bool ExistAuthorizer
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Authorizer);
			}
		}

		virtual public void RemoveAuthorizer()
		{
			Strategy.RemoveCompositeRole(Meta.Authorizer);
		}


		virtual public Deliverable Deliverable
		{ 
			get
			{
				return (Deliverable) Strategy.GetCompositeRole(Meta.Deliverable);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Deliverable ,value);
			}
		}

		virtual public bool ExistDeliverable
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Deliverable);
			}
		}

		virtual public void RemoveDeliverable()
		{
			Strategy.RemoveCompositeRole(Meta.Deliverable);
		}


		virtual public Product Product
		{ 
			get
			{
				return (Product) Strategy.GetCompositeRole(Meta.Product);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Product ,value);
			}
		}

		virtual public bool ExistProduct
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Product);
			}
		}

		virtual public void RemoveProduct()
		{
			Strategy.RemoveCompositeRole(Meta.Product);
		}



		virtual public global::System.DateTime? EstimatedDeliveryDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.EstimatedDeliveryDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.EstimatedDeliveryDate, value);
			}
		}

		virtual public bool ExistEstimatedDeliveryDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.EstimatedDeliveryDate);
			}
		}

		virtual public void RemoveEstimatedDeliveryDate()
		{
			Strategy.RemoveUnitRole(Meta.EstimatedDeliveryDate);
		}


		virtual public UnitOfMeasure UnitOfMeasure
		{ 
			get
			{
				return (UnitOfMeasure) Strategy.GetCompositeRole(Meta.UnitOfMeasure);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.UnitOfMeasure ,value);
			}
		}

		virtual public bool ExistUnitOfMeasure
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.UnitOfMeasure);
			}
		}

		virtual public void RemoveUnitOfMeasure()
		{
			Strategy.RemoveCompositeRole(Meta.UnitOfMeasure);
		}


		virtual public ProductFeature ProductFeature
		{ 
			get
			{
				return (ProductFeature) Strategy.GetCompositeRole(Meta.ProductFeature);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ProductFeature ,value);
			}
		}

		virtual public bool ExistProductFeature
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ProductFeature);
			}
		}

		virtual public void RemoveProductFeature()
		{
			Strategy.RemoveCompositeRole(Meta.ProductFeature);
		}



		virtual public global::System.Decimal? UnitPrice 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.UnitPrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitPrice, value);
			}
		}

		virtual public bool ExistUnitPrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitPrice);
			}
		}

		virtual public void RemoveUnitPrice()
		{
			Strategy.RemoveUnitRole(Meta.UnitPrice);
		}


		virtual public Skill Skill
		{ 
			get
			{
				return (Skill) Strategy.GetCompositeRole(Meta.Skill);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Skill ,value);
			}
		}

		virtual public bool ExistSkill
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Skill);
			}
		}

		virtual public void RemoveSkill()
		{
			Strategy.RemoveCompositeRole(Meta.Skill);
		}


		virtual public WorkEffort WorkEffort
		{ 
			get
			{
				return (WorkEffort) Strategy.GetCompositeRole(Meta.WorkEffort);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.WorkEffort ,value);
			}
		}

		virtual public bool ExistWorkEffort
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.WorkEffort);
			}
		}

		virtual public void RemoveWorkEffort()
		{
			Strategy.RemoveCompositeRole(Meta.WorkEffort);
		}


		virtual public global::Allors.Extent<QuoteTerm> QuoteTerms
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.QuoteTerm);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.QuoteTerm, value);
			}
		}

		virtual public void AddQuoteTerm (QuoteTerm value)
		{
			Strategy.AddCompositeRole(Meta.QuoteTerm, value);
		}

		virtual public void RemoveQuoteTerm (QuoteTerm value)
		{
			Strategy.RemoveCompositeRole(Meta.QuoteTerm,value);
		}

		virtual public bool ExistQuoteTerms
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.QuoteTerm);
			}
		}

		virtual public void RemoveQuoteTerms()
		{
			Strategy.RemoveCompositeRoles(Meta.QuoteTerm);
		}



		virtual public global::System.Int32? Quantity 
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.Quantity);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Quantity, value);
			}
		}

		virtual public bool ExistQuantity{
			get
			{
				return Strategy.ExistUnitRole(Meta.Quantity);
			}
		}

		virtual public void RemoveQuantity()
		{
			Strategy.RemoveUnitRole(Meta.Quantity);
		}


		virtual public RequestItem RequestItem
		{ 
			get
			{
				return (RequestItem) Strategy.GetCompositeRole(Meta.RequestItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.RequestItem ,value);
			}
		}

		virtual public bool ExistRequestItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.RequestItem);
			}
		}

		virtual public void RemoveRequestItem()
		{
			Strategy.RemoveCompositeRole(Meta.RequestItem);
		}



		virtual public global::System.String Comment 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Comment);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Comment, value);
			}
		}

		virtual public bool ExistComment{
			get
			{
				return Strategy.ExistUnitRole(Meta.Comment);
			}
		}

		virtual public void RemoveComment()
		{
			Strategy.RemoveUnitRole(Meta.Comment);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public Quote QuoteWhereQuoteItem
		{ 
			get
			{
				return (Quote) Strategy.GetCompositeAssociation(Meta.QuoteWhereQuoteItem);
			}
		} 

		virtual public bool ExistQuoteWhereQuoteItem
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.QuoteWhereQuoteItem);
			}
		}


		virtual public global::Allors.Extent<EngagementItem> EngagementItemsWhereQuoteItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementItemsWhereQuoteItem);
			}
		}

		virtual public bool ExistEngagementItemsWhereQuoteItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementItemsWhereQuoteItem);
			}
		}


		virtual public global::Allors.Extent<OrderItem> OrderItemsWhereQuoteItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderItemsWhereQuoteItem);
			}
		}

		virtual public bool ExistOrderItemsWhereQuoteItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderItemsWhereQuoteItem);
			}
		}

	}

	public class QuoteItemMeta
	{
		public static readonly QuoteItemMeta Instance = new QuoteItemMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.QuoteItem;

		public global::Allors.Meta.RoleType Authorizer 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemAuthorizer;
			}
		} 
		public global::Allors.Meta.RoleType Deliverable 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemDeliverable;
			}
		} 
		public global::Allors.Meta.RoleType Product 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemProduct;
			}
		} 
		public global::Allors.Meta.RoleType EstimatedDeliveryDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemEstimatedDeliveryDate;
			}
		} 
		public global::Allors.Meta.RoleType UnitOfMeasure 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemUnitOfMeasure;
			}
		} 
		public global::Allors.Meta.RoleType ProductFeature 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemProductFeature;
			}
		} 
		public global::Allors.Meta.RoleType UnitPrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemUnitPrice;
			}
		} 
		public global::Allors.Meta.RoleType Skill 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemSkill;
			}
		} 
		public global::Allors.Meta.RoleType WorkEffort 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemWorkEffort;
			}
		} 
		public global::Allors.Meta.RoleType QuoteTerm 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemQuoteTerm;
			}
		} 
		public global::Allors.Meta.RoleType Quantity 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemQuantity;
			}
		} 
		public global::Allors.Meta.RoleType RequestItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.QuoteItemRequestItem;
			}
		} 
		public global::Allors.Meta.RoleType Comment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CommentableComment;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType QuoteWhereQuoteItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.QuoteQuoteItem;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementItemsWhereQuoteItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementItemQuoteItem;
			}
		} 
		public global::Allors.Meta.AssociationType OrderItemsWhereQuoteItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderItemQuoteItem;
			}
		} 

	}
}