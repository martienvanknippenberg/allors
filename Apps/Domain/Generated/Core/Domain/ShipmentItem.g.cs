// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class ShipmentItem : Allors.ObjectBase , UserInterfaceable
	{
		public static readonly ShipmentItemMeta Meta = ShipmentItemMeta.Instance;

		public ShipmentItem(Allors.IStrategy allors) : base(allors) {}

		public static ShipmentItem Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (ShipmentItem) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal? Quantity 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.Quantity);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Quantity, value);
			}
		}

		virtual public bool ExistQuantity{
			get
			{
				return Strategy.ExistUnitRole(Meta.Quantity);
			}
		}

		virtual public void RemoveQuantity()
		{
			Strategy.RemoveUnitRole(Meta.Quantity);
		}


		virtual public Part Part
		{ 
			get
			{
				return (Part) Strategy.GetCompositeRole(Meta.Part);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Part ,value);
			}
		}

		virtual public bool ExistPart
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Part);
			}
		}

		virtual public void RemovePart()
		{
			Strategy.RemoveCompositeRole(Meta.Part);
		}



		virtual public global::System.String ContentsDescription 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ContentsDescription);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ContentsDescription, value);
			}
		}

		virtual public bool ExistContentsDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.ContentsDescription);
			}
		}

		virtual public void RemoveContentsDescription()
		{
			Strategy.RemoveUnitRole(Meta.ContentsDescription);
		}


		virtual public global::Allors.Extent<Document> Documents
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Document);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Document, value);
			}
		}

		virtual public void AddDocument (Document value)
		{
			Strategy.AddCompositeRole(Meta.Document, value);
		}

		virtual public void RemoveDocument (Document value)
		{
			Strategy.RemoveCompositeRole(Meta.Document,value);
		}

		virtual public bool ExistDocuments
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Document);
			}
		}

		virtual public void RemoveDocuments()
		{
			Strategy.RemoveCompositeRoles(Meta.Document);
		}



		virtual public global::System.Decimal? QuantityShipped 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.QuantityShipped);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityShipped, value);
			}
		}

		virtual public bool ExistQuantityShipped{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityShipped);
			}
		}

		virtual public void RemoveQuantityShipped()
		{
			Strategy.RemoveUnitRole(Meta.QuantityShipped);
		}


		virtual public global::Allors.Extent<ShipmentItem> InResponseToShipmentItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InResponseToShipmentItem);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InResponseToShipmentItem, value);
			}
		}

		virtual public void AddInResponseToShipmentItem (ShipmentItem value)
		{
			Strategy.AddCompositeRole(Meta.InResponseToShipmentItem, value);
		}

		virtual public void RemoveInResponseToShipmentItem (ShipmentItem value)
		{
			Strategy.RemoveCompositeRole(Meta.InResponseToShipmentItem,value);
		}

		virtual public bool ExistInResponseToShipmentItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InResponseToShipmentItem);
			}
		}

		virtual public void RemoveInResponseToShipmentItems()
		{
			Strategy.RemoveCompositeRoles(Meta.InResponseToShipmentItem);
		}


		virtual public global::Allors.Extent<InventoryItem> InventoryItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InventoryItem);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InventoryItem, value);
			}
		}

		virtual public void AddInventoryItem (InventoryItem value)
		{
			Strategy.AddCompositeRole(Meta.InventoryItem, value);
		}

		virtual public void RemoveInventoryItem (InventoryItem value)
		{
			Strategy.RemoveCompositeRole(Meta.InventoryItem,value);
		}

		virtual public bool ExistInventoryItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InventoryItem);
			}
		}

		virtual public void RemoveInventoryItems()
		{
			Strategy.RemoveCompositeRoles(Meta.InventoryItem);
		}


		virtual public global::Allors.Extent<ProductFeature> ProductFeatures
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.ProductFeature);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.ProductFeature, value);
			}
		}

		virtual public void AddProductFeature (ProductFeature value)
		{
			Strategy.AddCompositeRole(Meta.ProductFeature, value);
		}

		virtual public void RemoveProductFeature (ProductFeature value)
		{
			Strategy.RemoveCompositeRole(Meta.ProductFeature,value);
		}

		virtual public bool ExistProductFeatures
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.ProductFeature);
			}
		}

		virtual public void RemoveProductFeatures()
		{
			Strategy.RemoveCompositeRoles(Meta.ProductFeature);
		}


		virtual public global::Allors.Extent<InvoiceItem> InvoiceItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InvoiceItem);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InvoiceItem, value);
			}
		}

		virtual public void AddInvoiceItem (InvoiceItem value)
		{
			Strategy.AddCompositeRole(Meta.InvoiceItem, value);
		}

		virtual public void RemoveInvoiceItem (InvoiceItem value)
		{
			Strategy.RemoveCompositeRole(Meta.InvoiceItem,value);
		}

		virtual public bool ExistInvoiceItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InvoiceItem);
			}
		}

		virtual public void RemoveInvoiceItems()
		{
			Strategy.RemoveCompositeRoles(Meta.InvoiceItem);
		}


		virtual public Good Good
		{ 
			get
			{
				return (Good) Strategy.GetCompositeRole(Meta.Good);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Good ,value);
			}
		}

		virtual public bool ExistGood
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Good);
			}
		}

		virtual public void RemoveGood()
		{
			Strategy.RemoveCompositeRole(Meta.Good);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::Allors.Extent<OrderShipment> OrderShipmentsWhereShipmentItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderShipmentsWhereShipmentItem);
			}
		}

		virtual public bool ExistOrderShipmentsWhereShipmentItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderShipmentsWhereShipmentItem);
			}
		}


		virtual public global::Allors.Extent<PackagingContent> PackagingContentsWhereShipmentItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PackagingContentsWhereShipmentItem);
			}
		}

		virtual public bool ExistPackagingContentsWhereShipmentItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PackagingContentsWhereShipmentItem);
			}
		}


		virtual public global::Allors.Extent<ItemIssuance> ItemIssuancesWhereShipmentItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ItemIssuancesWhereShipmentItem);
			}
		}

		virtual public bool ExistItemIssuancesWhereShipmentItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ItemIssuancesWhereShipmentItem);
			}
		}


		virtual public ShipmentReceipt ShipmentReceiptWhereShipmentItem
		{ 
			get
			{
				return (ShipmentReceipt) Strategy.GetCompositeAssociation(Meta.ShipmentReceiptWhereShipmentItem);
			}
		} 

		virtual public bool ExistShipmentReceiptWhereShipmentItem
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.ShipmentReceiptWhereShipmentItem);
			}
		}


		virtual public Shipment ShipmentWhereShipmentItem
		{ 
			get
			{
				return (Shipment) Strategy.GetCompositeAssociation(Meta.ShipmentWhereShipmentItem);
			}
		} 

		virtual public bool ExistShipmentWhereShipmentItem
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.ShipmentWhereShipmentItem);
			}
		}


		virtual public ShipmentItem ShipmentItemWhereInResponseToShipmentItem
		{ 
			get
			{
				return (ShipmentItem) Strategy.GetCompositeAssociation(Meta.ShipmentItemWhereInResponseToShipmentItem);
			}
		} 

		virtual public bool ExistShipmentItemWhereInResponseToShipmentItem
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.ShipmentItemWhereInResponseToShipmentItem);
			}
		}

	}

	public class ShipmentItemMeta
	{
		public static readonly ShipmentItemMeta Instance = new ShipmentItemMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.ShipmentItem;

		public global::Allors.Meta.RoleType Quantity 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemQuantity;
			}
		} 
		public global::Allors.Meta.RoleType Part 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemPart;
			}
		} 
		public global::Allors.Meta.RoleType ContentsDescription 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemContentsDescription;
			}
		} 
		public global::Allors.Meta.RoleType Document 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemDocument;
			}
		} 
		public global::Allors.Meta.RoleType QuantityShipped 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemQuantityShipped;
			}
		} 
		public global::Allors.Meta.RoleType InResponseToShipmentItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemInResponseToShipmentItem;
			}
		} 
		public global::Allors.Meta.RoleType InventoryItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemInventoryItem;
			}
		} 
		public global::Allors.Meta.RoleType ProductFeature 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemProductFeature;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemInvoiceItem;
			}
		} 
		public global::Allors.Meta.RoleType Good 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentItemGood;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType OrderShipmentsWhereShipmentItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderShipmentShipmentItem;
			}
		} 
		public global::Allors.Meta.AssociationType PackagingContentsWhereShipmentItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PackagingContentShipmentItem;
			}
		} 
		public global::Allors.Meta.AssociationType ItemIssuancesWhereShipmentItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ItemIssuanceShipmentItem;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentReceiptWhereShipmentItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentReceiptShipmentItem;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentWhereShipmentItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentShipmentItem;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentItemWhereInResponseToShipmentItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentItemInResponseToShipmentItem;
			}
		} 

	}
}