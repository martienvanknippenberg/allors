// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class NewsItem : Allors.ObjectBase , Searchable, SearchResult, UserInterfaceable
	{
		public static readonly NewsItemMeta Meta = NewsItemMeta.Instance;

		public NewsItem(Allors.IStrategy allors) : base(allors) {}

		public static NewsItem Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (NewsItem) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Boolean IsPublished 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.IsPublished);
			}
			set
			{
				Strategy.SetUnitRole(Meta.IsPublished, value);
			}
		}

		virtual public bool ExistIsPublished{
			get
			{
				return Strategy.ExistUnitRole(Meta.IsPublished);
			}
		}

		virtual public void RemoveIsPublished()
		{
			Strategy.RemoveUnitRole(Meta.IsPublished);
		}



		virtual public global::System.String Title 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Title);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Title, value);
			}
		}

		virtual public bool ExistTitle{
			get
			{
				return Strategy.ExistUnitRole(Meta.Title);
			}
		}

		virtual public void RemoveTitle()
		{
			Strategy.RemoveUnitRole(Meta.Title);
		}



		virtual public global::System.Int32 DisplayOrder 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.DisplayOrder);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayOrder, value);
			}
		}

		virtual public bool ExistDisplayOrder{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayOrder);
			}
		}

		virtual public void RemoveDisplayOrder()
		{
			Strategy.RemoveUnitRole(Meta.DisplayOrder);
		}


		virtual public Locale Locale
		{ 
			get
			{
				return (Locale) Strategy.GetCompositeRole(Meta.Locale);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Locale ,value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			Strategy.RemoveCompositeRole(Meta.Locale);
		}



		virtual public global::System.String LongText 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.LongText);
			}
			set
			{
				Strategy.SetUnitRole(Meta.LongText, value);
			}
		}

		virtual public bool ExistLongText{
			get
			{
				return Strategy.ExistUnitRole(Meta.LongText);
			}
		}

		virtual public void RemoveLongText()
		{
			Strategy.RemoveUnitRole(Meta.LongText);
		}



		virtual public global::System.String Text 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Text);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Text, value);
			}
		}

		virtual public bool ExistText{
			get
			{
				return Strategy.ExistUnitRole(Meta.Text);
			}
		}

		virtual public void RemoveText()
		{
			Strategy.RemoveUnitRole(Meta.Text);
		}



		virtual public global::System.DateTime Date 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.Date);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Date, value);
			}
		}

		virtual public bool ExistDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.Date);
			}
		}

		virtual public void RemoveDate()
		{
			Strategy.RemoveUnitRole(Meta.Date);
		}



		virtual public global::System.Boolean Announcement 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.Announcement);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Announcement, value);
			}
		}

		virtual public bool ExistAnnouncement{
			get
			{
				return Strategy.ExistUnitRole(Meta.Announcement);
			}
		}

		virtual public void RemoveAnnouncement()
		{
			Strategy.RemoveUnitRole(Meta.Announcement);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}

	}

	public class NewsItemMeta
	{
		public static readonly NewsItemMeta Instance = new NewsItemMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.NewsItem;

		public global::Allors.Meta.RoleType IsPublished 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemIsPublished;
			}
		} 
		public global::Allors.Meta.RoleType Title 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemTitle;
			}
		} 
		public global::Allors.Meta.RoleType DisplayOrder 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemDisplayOrder;
			}
		} 
		public global::Allors.Meta.RoleType Locale 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemLocale;
			}
		} 
		public global::Allors.Meta.RoleType LongText 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemLongText;
			}
		} 
		public global::Allors.Meta.RoleType Text 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemText;
			}
		} 
		public global::Allors.Meta.RoleType Date 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemDate;
			}
		} 
		public global::Allors.Meta.RoleType Announcement 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.NewsItemAnnouncement;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

	}
}