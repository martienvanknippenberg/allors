// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface InvoiceItem :  UserInterfaceable,Transitional, Allors.IObject
	{


		global::System.Decimal TotalIncVatCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalIncVatCustomerCurrency{get;}

		void RemoveTotalIncVatCustomerCurrency();


		global::Allors.Extent<AgreementTerm> InvoiceTerms
		{ 
			get;
			set;
		}

		void AddInvoiceTerm (AgreementTerm value);

		void RemoveInvoiceTerm (AgreementTerm value);

		bool ExistInvoiceTerms
		{
			get;
		}

		void RemoveInvoiceTerms();


		global::System.Decimal TotalVatCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalVatCustomerCurrency{get;}

		void RemoveTotalVatCustomerCurrency();


		global::System.Decimal TotalBasePrice 
		{
			get;
			set;
		}

		bool ExistTotalBasePrice{get;}

		void RemoveTotalBasePrice();


		global::System.Decimal TotalSurcharge 
		{
			get;
			set;
		}

		bool ExistTotalSurcharge{get;}

		void RemoveTotalSurcharge();


		global::System.Decimal TotalInvoiceAdjustment 
		{
			get;
			set;
		}

		bool ExistTotalInvoiceAdjustment{get;}

		void RemoveTotalInvoiceAdjustment();


		global::System.Decimal TotalExVatCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalExVatCustomerCurrency{get;}

		void RemoveTotalExVatCustomerCurrency();


		global::System.Decimal TotalDiscount 
		{
			get;
			set;
		}

		bool ExistTotalDiscount{get;}

		void RemoveTotalDiscount();


		global::Allors.Extent<InvoiceVatRateItem> InvoiceVatRateItems
		{ 
			get;
			set;
		}

		void AddInvoiceVatRateItem (InvoiceVatRateItem value);

		void RemoveInvoiceVatRateItem (InvoiceVatRateItem value);

		bool ExistInvoiceVatRateItems
		{
			get;
		}

		void RemoveInvoiceVatRateItems();


		global::System.Decimal TotalDiscountAsPercentage 
		{
			get;
			set;
		}

		bool ExistTotalDiscountAsPercentage{get;}

		void RemoveTotalDiscountAsPercentage();


		global::System.Decimal CalculatedUnitPrice 
		{
			get;
			set;
		}

		bool ExistCalculatedUnitPrice{get;}

		void RemoveCalculatedUnitPrice();


		global::System.Decimal UnitDiscount 
		{
			get;
			set;
		}

		bool ExistUnitDiscount{get;}

		void RemoveUnitDiscount();


		VatRegime AssignedVatRegime
		{ 
			get;
			set;
		}

		bool ExistAssignedVatRegime
		{
			get;
		}

		void RemoveAssignedVatRegime();


		global::System.Decimal TotalIncVat 
		{
			get;
			set;
		}

		bool ExistTotalIncVat{get;}

		void RemoveTotalIncVat();


		InvoiceItem AdjustmentFor
		{ 
			get;
			set;
		}

		bool ExistAdjustmentFor
		{
			get;
		}

		void RemoveAdjustmentFor();


		global::System.Decimal UnitBasePrice 
		{
			get;
			set;
		}

		bool ExistUnitBasePrice{get;}

		void RemoveUnitBasePrice();


		global::System.Decimal TotalSurchargeCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalSurchargeCustomerCurrency{get;}

		void RemoveTotalSurchargeCustomerCurrency();


		SerializedInventoryItem SerializedInventoryItem
		{ 
			get;
			set;
		}

		bool ExistSerializedInventoryItem
		{
			get;
		}

		void RemoveSerializedInventoryItem();


		global::Allors.Extent<PriceComponent> CurrentPriceComponents
		{ 
			get;
			set;
		}

		void AddCurrentPriceComponent (PriceComponent value);

		void RemoveCurrentPriceComponent (PriceComponent value);

		bool ExistCurrentPriceComponents
		{
			get;
		}

		void RemoveCurrentPriceComponents();


		DiscountAdjustment DiscountAdjustment
		{ 
			get;
			set;
		}

		bool ExistDiscountAdjustment
		{
			get;
		}

		void RemoveDiscountAdjustment();


		global::System.Decimal ActualUnitPrice 
		{
			get;
			set;
		}

		bool ExistActualUnitPrice{get;}

		void RemoveActualUnitPrice();


		global::System.String Message 
		{
			get;
			set;
		}

		bool ExistMessage{get;}

		void RemoveMessage();


		global::System.Decimal TotalInvoiceAdjustmentCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalInvoiceAdjustmentCustomerCurrency{get;}

		void RemoveTotalInvoiceAdjustmentCustomerCurrency();


		global::System.Decimal AmountPaid 
		{
			get;
			set;
		}

		bool ExistAmountPaid{get;}

		void RemoveAmountPaid();


		VatRate DerivedVatRate
		{ 
			get;
			set;
		}

		bool ExistDerivedVatRate
		{
			get;
		}

		void RemoveDerivedVatRate();


		global::System.Decimal TotalDiscountCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalDiscountCustomerCurrency{get;}

		void RemoveTotalDiscountCustomerCurrency();


		global::System.Decimal UnitSurcharge 
		{
			get;
			set;
		}

		bool ExistUnitSurcharge{get;}

		void RemoveUnitSurcharge();


		global::System.Decimal TotalExVat 
		{
			get;
			set;
		}

		bool ExistTotalExVat{get;}

		void RemoveTotalExVat();


		global::System.Decimal Quantity 
		{
			get;
			set;
		}

		bool ExistQuantity{get;}

		void RemoveQuantity();


		global::System.Decimal TotalSurchargeAsPercentage 
		{
			get;
			set;
		}

		bool ExistTotalSurchargeAsPercentage{get;}

		void RemoveTotalSurchargeAsPercentage();


		VatRegime VatRegime
		{ 
			get;
			set;
		}

		bool ExistVatRegime
		{
			get;
		}

		void RemoveVatRegime();


		global::System.Decimal TotalBasePriceCustomerCurrency 
		{
			get;
			set;
		}

		bool ExistTotalBasePriceCustomerCurrency{get;}

		void RemoveTotalBasePriceCustomerCurrency();


		global::System.Decimal TotalVat 
		{
			get;
			set;
		}

		bool ExistTotalVat{get;}

		void RemoveTotalVat();


		SurchargeAdjustment SurchargeAdjustment
		{ 
			get;
			set;
		}

		bool ExistSurchargeAdjustment
		{
			get;
		}

		void RemoveSurchargeAdjustment();


		global::System.Decimal UnitVat 
		{
			get;
			set;
		}

		bool ExistUnitVat{get;}

		void RemoveUnitVat();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();



		global::Allors.Extent<WorkEffortBilling> WorkEffortBillingsWhereInvoiceItem
		{ 
			get;
		}

		bool ExistWorkEffortBillingsWhereInvoiceItem
		{
			get;
		}


		global::Allors.Extent<ServiceEntryBilling> ServiceEntryBillingsWhereInvoiceItem
		{ 
			get;
		}

		bool ExistServiceEntryBillingsWhereInvoiceItem
		{
			get;
		}


		global::Allors.Extent<PaymentApplication> PaymentApplicationsWhereInvoiceItem
		{ 
			get;
		}

		bool ExistPaymentApplicationsWhereInvoiceItem
		{
			get;
		}


		ShipmentItem ShipmentItemWhereInvoiceItem
		{
			get;
		}

		bool ExistShipmentItemWhereInvoiceItem
		{
			get;
		}


		global::Allors.Extent<InvoiceItem> InvoiceItemsWhereAdjustmentFor
		{ 
			get;
		}

		bool ExistInvoiceItemsWhereAdjustmentFor
		{
			get;
		}

	}

	public class InvoiceItemMeta
	{
		public static readonly InvoiceItemMeta Instance = new InvoiceItemMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.InvoiceItem;

		public global::Allors.Meta.RoleType TotalIncVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalIncVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceTerm 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemInvoiceTerm;
			}
		} 
		public global::Allors.Meta.RoleType TotalVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalBasePrice;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurcharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalSurcharge;
			}
		} 
		public global::Allors.Meta.RoleType TotalInvoiceAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalInvoiceAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalExVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalDiscount;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceVatRateItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemInvoiceVatRateItem;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscountAsPercentage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalDiscountAsPercentage;
			}
		} 
		public global::Allors.Meta.RoleType CalculatedUnitPrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemCalculatedUnitPrice;
			}
		} 
		public global::Allors.Meta.RoleType UnitDiscount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemUnitDiscount;
			}
		} 
		public global::Allors.Meta.RoleType AssignedVatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemAssignedVatRegime;
			}
		} 
		public global::Allors.Meta.RoleType TotalIncVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalIncVat;
			}
		} 
		public global::Allors.Meta.RoleType AdjustmentFor 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemAdjustmentFor;
			}
		} 
		public global::Allors.Meta.RoleType UnitBasePrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemUnitBasePrice;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurchargeCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalSurchargeCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType SerializedInventoryItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemSerializedInventoryItem;
			}
		} 
		public global::Allors.Meta.RoleType CurrentPriceComponent 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemCurrentPriceComponent;
			}
		} 
		public global::Allors.Meta.RoleType DiscountAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemDiscountAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType ActualUnitPrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemActualUnitPrice;
			}
		} 
		public global::Allors.Meta.RoleType Message 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemMessage;
			}
		} 
		public global::Allors.Meta.RoleType TotalInvoiceAdjustmentCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalInvoiceAdjustmentCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType AmountPaid 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemAmountPaid;
			}
		} 
		public global::Allors.Meta.RoleType DerivedVatRate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemDerivedVatRate;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscountCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalDiscountCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType UnitSurcharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemUnitSurcharge;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalExVat;
			}
		} 
		public global::Allors.Meta.RoleType Quantity 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemQuantity;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurchargeAsPercentage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalSurchargeAsPercentage;
			}
		} 
		public global::Allors.Meta.RoleType VatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemVatRegime;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePriceCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalBasePriceCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemTotalVat;
			}
		} 
		public global::Allors.Meta.RoleType SurchargeAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemSurchargeAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType UnitVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemUnitVat;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceItemDescription;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType WorkEffortBillingsWhereInvoiceItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortBillingInvoiceItem;
			}
		} 
		public global::Allors.Meta.AssociationType ServiceEntryBillingsWhereInvoiceItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ServiceEntryBillingInvoiceItem;
			}
		} 
		public global::Allors.Meta.AssociationType PaymentApplicationsWhereInvoiceItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PaymentApplicationInvoiceItem;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentItemWhereInvoiceItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentItemInvoiceItem;
			}
		} 
		public global::Allors.Meta.AssociationType InvoiceItemsWhereAdjustmentFor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InvoiceItemAdjustmentFor;
			}
		} 

	}
}