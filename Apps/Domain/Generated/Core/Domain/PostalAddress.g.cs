// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PostalAddress : Allors.ObjectBase , ContactMechanism, AccessControlledObject, GeoLocatable
	{
		public static readonly PostalAddressMeta Meta = PostalAddressMeta.Instance;

		public PostalAddress(Allors.IStrategy allors) : base(allors) {}

		public static PostalAddress Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (PostalAddress) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public global::Allors.Extent<GeographicBoundary> GeographicBoundaries
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.GeographicBoundary);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.GeographicBoundary, value);
			}
		}

		virtual public void AddGeographicBoundary (GeographicBoundary value)
		{
			Strategy.AddCompositeRole(Meta.GeographicBoundary, value);
		}

		virtual public void RemoveGeographicBoundary (GeographicBoundary value)
		{
			Strategy.RemoveCompositeRole(Meta.GeographicBoundary,value);
		}

		virtual public bool ExistGeographicBoundaries
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.GeographicBoundary);
			}
		}

		virtual public void RemoveGeographicBoundaries()
		{
			Strategy.RemoveCompositeRoles(Meta.GeographicBoundary);
		}



		virtual public global::System.String Address3 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Address3);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Address3, value);
			}
		}

		virtual public bool ExistAddress3{
			get
			{
				return Strategy.ExistUnitRole(Meta.Address3);
			}
		}

		virtual public void RemoveAddress3()
		{
			Strategy.RemoveUnitRole(Meta.Address3);
		}


		virtual public Country Country
		{ 
			get
			{
				return (Country) Strategy.GetCompositeRole(Meta.Country);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Country ,value);
			}
		}

		virtual public bool ExistCountry
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Country);
			}
		}

		virtual public void RemoveCountry()
		{
			Strategy.RemoveCompositeRole(Meta.Country);
		}



		virtual public global::System.String Address2 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Address2);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Address2, value);
			}
		}

		virtual public bool ExistAddress2{
			get
			{
				return Strategy.ExistUnitRole(Meta.Address2);
			}
		}

		virtual public void RemoveAddress2()
		{
			Strategy.RemoveUnitRole(Meta.Address2);
		}


		virtual public City City
		{ 
			get
			{
				return (City) Strategy.GetCompositeRole(Meta.City);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.City ,value);
			}
		}

		virtual public bool ExistCity
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.City);
			}
		}

		virtual public void RemoveCity()
		{
			Strategy.RemoveCompositeRole(Meta.City);
		}



		virtual public global::System.String Address1 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Address1);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Address1, value);
			}
		}

		virtual public bool ExistAddress1{
			get
			{
				return Strategy.ExistUnitRole(Meta.Address1);
			}
		}

		virtual public void RemoveAddress1()
		{
			Strategy.RemoveUnitRole(Meta.Address1);
		}


		virtual public PostalBoundary PostalBoundary
		{ 
			get
			{
				return (PostalBoundary) Strategy.GetCompositeRole(Meta.PostalBoundary);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PostalBoundary ,value);
			}
		}

		virtual public bool ExistPostalBoundary
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PostalBoundary);
			}
		}

		virtual public void RemovePostalBoundary()
		{
			Strategy.RemoveCompositeRole(Meta.PostalBoundary);
		}


		virtual public PostalCode PostalCode
		{ 
			get
			{
				return (PostalCode) Strategy.GetCompositeRole(Meta.PostalCode);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PostalCode ,value);
			}
		}

		virtual public bool ExistPostalCode
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PostalCode);
			}
		}

		virtual public void RemovePostalCode()
		{
			Strategy.RemoveCompositeRole(Meta.PostalCode);
		}



		virtual public global::System.String Directions 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Directions);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Directions, value);
			}
		}

		virtual public bool ExistDirections{
			get
			{
				return Strategy.ExistUnitRole(Meta.Directions);
			}
		}

		virtual public void RemoveDirections()
		{
			Strategy.RemoveUnitRole(Meta.Directions);
		}



		virtual public global::System.String FormattedFullAddress 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.FormattedFullAddress);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FormattedFullAddress, value);
			}
		}

		virtual public bool ExistFormattedFullAddress{
			get
			{
				return Strategy.ExistUnitRole(Meta.FormattedFullAddress);
			}
		}

		virtual public void RemoveFormattedFullAddress()
		{
			Strategy.RemoveUnitRole(Meta.FormattedFullAddress);
		}



		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description);
		}


		virtual public global::Allors.Extent<ContactMechanism> FollowTo
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.FollowTo);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.FollowTo, value);
			}
		}

		virtual public void AddFollowTo (ContactMechanism value)
		{
			Strategy.AddCompositeRole(Meta.FollowTo, value);
		}

		virtual public void RemoveFollowTo (ContactMechanism value)
		{
			Strategy.RemoveCompositeRole(Meta.FollowTo,value);
		}

		virtual public bool ExistFollowTo
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.FollowTo);
			}
		}

		virtual public void RemoveFollowTo()
		{
			Strategy.RemoveCompositeRoles(Meta.FollowTo);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::System.Decimal Latitude 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Latitude);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Latitude, value);
			}
		}

		virtual public bool ExistLatitude{
			get
			{
				return Strategy.ExistUnitRole(Meta.Latitude);
			}
		}

		virtual public void RemoveLatitude()
		{
			Strategy.RemoveUnitRole(Meta.Latitude);
		}



		virtual public global::System.Decimal Longitude 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Longitude);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Longitude, value);
			}
		}

		virtual public bool ExistLongitude{
			get
			{
				return Strategy.ExistUnitRole(Meta.Longitude);
			}
		}

		virtual public void RemoveLongitude()
		{
			Strategy.RemoveUnitRole(Meta.Longitude);
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}



		virtual public global::Allors.Extent<LetterCorrespondence> LetterCorrespondencesWherePostalAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.LetterCorrespondencesWherePostalAddress);
			}
		}

		virtual public bool ExistLetterCorrespondencesWherePostalAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.LetterCorrespondencesWherePostalAddress);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereShipToAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereShipToAddress);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereShipToAddress);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereShippingAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereShippingAddress);
			}
		}

		virtual public bool ExistPartiesWhereShippingAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereShippingAddress);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereShipToAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereShipToAddress);
			}
		}

		virtual public bool ExistSalesInvoicesWhereShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereShipToAddress);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereShipToAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereShipToAddress);
			}
		}

		virtual public bool ExistSalesOrdersWhereShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereShipToAddress);
			}
		}


		virtual public global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereShipToAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderItemsWhereShipToAddress);
			}
		}

		virtual public bool ExistSalesOrderItemsWhereShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderItemsWhereShipToAddress);
			}
		}


		virtual public global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereAssignedShipToAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderItemsWhereAssignedShipToAddress);
			}
		}

		virtual public bool ExistSalesOrderItemsWhereAssignedShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderItemsWhereAssignedShipToAddress);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereShipToAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereShipToAddress);
			}
		}

		virtual public bool ExistShipmentsWhereShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereShipToAddress);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereShipFromAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereShipFromAddress);
			}
		}

		virtual public bool ExistShipmentsWhereShipFromAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereShipFromAddress);
			}
		}


		virtual public global::Allors.Extent<FaceToFaceCommunication> FaceToFaceCommunicationsWhereLocation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FaceToFaceCommunicationsWhereLocation);
			}
		}

		virtual public bool ExistFaceToFaceCommunicationsWhereLocation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FaceToFaceCommunicationsWhereLocation);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereTakenViaContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaContactMechanism);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaContactMechanism);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereBillToContactMechanism);
			}
		}


		virtual public BankAccount BankAccountWhereContactMechanism
		{ 
			get
			{
				return (BankAccount) Strategy.GetCompositeAssociation(Meta.BankAccountWhereContactMechanism);
			}
		} 

		virtual public bool ExistBankAccountWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.BankAccountWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<BillingAccount> BillingAccountsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.BillingAccountsWhereContactMechanism);
			}
		}

		virtual public bool ExistBillingAccountsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.BillingAccountsWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereHomeAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereHomeAddress);
			}
		}

		virtual public bool ExistPartiesWhereHomeAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereHomeAddress);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereSalesOffice
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereSalesOffice);
			}
		}

		virtual public bool ExistPartiesWhereSalesOffice
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereSalesOffice);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereBillingAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereBillingAddress);
			}
		}

		virtual public bool ExistPartiesWhereBillingAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereBillingAddress);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereHeadQuarter
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereHeadQuarter);
			}
		}

		virtual public bool ExistPartiesWhereHeadQuarter
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereHeadQuarter);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereOrderAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereOrderAddress);
			}
		}

		virtual public bool ExistPartiesWhereOrderAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereOrderAddress);
			}
		}


		virtual public global::Allors.Extent<RespondingParty> RespondingPartiesWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RespondingPartiesWhereContactMechanism);
			}
		}

		virtual public bool ExistRespondingPartiesWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RespondingPartiesWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBilledFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBilledFromContactMechanism);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBilledFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBilledFromContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereTakenByContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereTakenByContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWhereTakenByContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereTakenByContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillFromContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillFromContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePlacingContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePlacingContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWherePlacingContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePlacingContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWherePlacingContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWherePlacingContactMechanism);
			}
		}

		virtual public bool ExistEngagementsWherePlacingContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWherePlacingContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistEngagementsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereTakenViaContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereTakenViaContactMechanism);
			}
		}

		virtual public bool ExistEngagementsWhereTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereTakenViaContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereReceiverContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereReceiverContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereReceiverContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereReceiverContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereInquireAboutContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereInquireAboutContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereInquireAboutContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereInquireAboutContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillFromContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillFromContactMechanism);
			}
		}


		virtual public global::Allors.Extent<ContactMechanism> ContactMechanismsWhereFollowTo
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ContactMechanismsWhereFollowTo);
			}
		}

		virtual public bool ExistContactMechanismsWhereFollowTo
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ContactMechanismsWhereFollowTo);
			}
		}


		virtual public global::Allors.Extent<PartyContactMechanism> PartyContactMechanismsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyContactMechanismsWhereContactMechanism);
			}
		}

		virtual public bool ExistPartyContactMechanismsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyContactMechanismsWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Facility> FacilitiesWhereFacilityContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FacilitiesWhereFacilityContactMechanism);
			}
		}

		virtual public bool ExistFacilitiesWhereFacilityContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FacilitiesWhereFacilityContactMechanism);
			}
		}

	}

	public class PostalAddressMeta
	{
		public static readonly PostalAddressMeta Instance = new PostalAddressMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.PostalAddress;

		public global::Allors.Meta.RoleType GeographicBoundary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressGeographicBoundary;
			}
		} 
		public global::Allors.Meta.RoleType Address3 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressAddress3;
			}
		} 
		public global::Allors.Meta.RoleType Country 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressCountry;
			}
		} 
		public global::Allors.Meta.RoleType Address2 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressAddress2;
			}
		} 
		public global::Allors.Meta.RoleType City 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressCity;
			}
		} 
		public global::Allors.Meta.RoleType Address1 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressAddress1;
			}
		} 
		public global::Allors.Meta.RoleType PostalBoundary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressPostalBoundary;
			}
		} 
		public global::Allors.Meta.RoleType PostalCode 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressPostalCode;
			}
		} 
		public global::Allors.Meta.RoleType Directions 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressDirections;
			}
		} 
		public global::Allors.Meta.RoleType FormattedFullAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PostalAddressFormattedFullAddress;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ContactMechanismDescription;
			}
		} 
		public global::Allors.Meta.RoleType FollowTo 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ContactMechanismFollowTo;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType Latitude 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.GeoLocatableLatitude;
			}
		} 
		public global::Allors.Meta.RoleType Longitude 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.GeoLocatableLongitude;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 

		public global::Allors.Meta.AssociationType LetterCorrespondencesWherePostalAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.LetterCorrespondencePostalAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereShipToAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderShipToAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereShippingAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyShippingAddress;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereShipToAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceShipToAddress;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereShipToAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderShipToAddress;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemsWhereShipToAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemShipToAddress;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemsWhereAssignedShipToAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemAssignedShipToAddress;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereShipToAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentShipToAddress;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereShipFromAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentShipFromAddress;
			}
		} 
		public global::Allors.Meta.AssociationType FaceToFaceCommunicationsWhereLocation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FaceToFaceCommunicationLocation;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereTakenViaContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderTakenViaContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType BankAccountWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BankAccountContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType BillingAccountsWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BillingAccountContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereHomeAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyHomeAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereSalesOffice 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartySalesOffice;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereBillingAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyBillingAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereHeadQuarter 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyHeadQuarter;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereOrderAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyOrderAddress;
			}
		} 
		public global::Allors.Meta.AssociationType RespondingPartiesWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RespondingPartyContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereBilledFromContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceBilledFromContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereTakenByContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderTakenByContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereBillFromContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderBillFromContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePlacingContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPlacingContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWherePlacingContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementPlacingContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWhereTakenViaContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementTakenViaContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereReceiverContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentReceiverContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereInquireAboutContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentInquireAboutContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereBillFromContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentBillFromContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ContactMechanismsWhereFollowTo 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ContactMechanismFollowTo;
			}
		} 
		public global::Allors.Meta.AssociationType PartyContactMechanismsWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyContactMechanismContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType FacilitiesWhereFacilityContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FacilityFacilityContactMechanism;
			}
		} 

	}
}