// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class ShipmentReceipt : Allors.ObjectBase , UserInterfaceable
	{
		public static readonly ShipmentReceiptMeta Meta = ShipmentReceiptMeta.Instance;

		public ShipmentReceipt(Allors.IStrategy allors) : base(allors) {}

		public static ShipmentReceipt Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (ShipmentReceipt) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String ItemDescription 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ItemDescription);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ItemDescription, value);
			}
		}

		virtual public bool ExistItemDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.ItemDescription);
			}
		}

		virtual public void RemoveItemDescription()
		{
			Strategy.RemoveUnitRole(Meta.ItemDescription);
		}


		virtual public NonSerializedInventoryItem InventoryItem
		{ 
			get
			{
				return (NonSerializedInventoryItem) Strategy.GetCompositeRole(Meta.InventoryItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.InventoryItem ,value);
			}
		}

		virtual public bool ExistInventoryItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.InventoryItem);
			}
		}

		virtual public void RemoveInventoryItem()
		{
			Strategy.RemoveCompositeRole(Meta.InventoryItem);
		}



		virtual public global::System.String RejectionReason 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.RejectionReason);
			}
			set
			{
				Strategy.SetUnitRole(Meta.RejectionReason, value);
			}
		}

		virtual public bool ExistRejectionReason{
			get
			{
				return Strategy.ExistUnitRole(Meta.RejectionReason);
			}
		}

		virtual public void RemoveRejectionReason()
		{
			Strategy.RemoveUnitRole(Meta.RejectionReason);
		}


		virtual public OrderItem OrderItem
		{ 
			get
			{
				return (OrderItem) Strategy.GetCompositeRole(Meta.OrderItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderItem ,value);
			}
		}

		virtual public bool ExistOrderItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderItem);
			}
		}

		virtual public void RemoveOrderItem()
		{
			Strategy.RemoveCompositeRole(Meta.OrderItem);
		}



		virtual public global::System.Decimal QuantityRejected 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityRejected);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityRejected, value);
			}
		}

		virtual public bool ExistQuantityRejected{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityRejected);
			}
		}

		virtual public void RemoveQuantityRejected()
		{
			Strategy.RemoveUnitRole(Meta.QuantityRejected);
		}


		virtual public ShipmentItem ShipmentItem
		{ 
			get
			{
				return (ShipmentItem) Strategy.GetCompositeRole(Meta.ShipmentItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShipmentItem ,value);
			}
		}

		virtual public bool ExistShipmentItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShipmentItem);
			}
		}

		virtual public void RemoveShipmentItem()
		{
			Strategy.RemoveCompositeRole(Meta.ShipmentItem);
		}



		virtual public global::System.DateTime ReceivedDateTime 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.ReceivedDateTime);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ReceivedDateTime, value);
			}
		}

		virtual public bool ExistReceivedDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.ReceivedDateTime);
			}
		}

		virtual public void RemoveReceivedDateTime()
		{
			Strategy.RemoveUnitRole(Meta.ReceivedDateTime);
		}



		virtual public global::System.Decimal QuantityAccepted 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityAccepted);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityAccepted, value);
			}
		}

		virtual public bool ExistQuantityAccepted{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityAccepted);
			}
		}

		virtual public void RemoveQuantityAccepted()
		{
			Strategy.RemoveUnitRole(Meta.QuantityAccepted);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::Allors.Extent<CustomerReturnStatus> CustomerReturnStatusesWhereShipmentReceipt
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CustomerReturnStatusesWhereShipmentReceipt);
			}
		}

		virtual public bool ExistCustomerReturnStatusesWhereShipmentReceipt
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CustomerReturnStatusesWhereShipmentReceipt);
			}
		}

	}

	public class ShipmentReceiptMeta
	{
		public static readonly ShipmentReceiptMeta Instance = new ShipmentReceiptMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.ShipmentReceipt;

		public global::Allors.Meta.RoleType ItemDescription 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptItemDescription;
			}
		} 
		public global::Allors.Meta.RoleType InventoryItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptInventoryItem;
			}
		} 
		public global::Allors.Meta.RoleType RejectionReason 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptRejectionReason;
			}
		} 
		public global::Allors.Meta.RoleType OrderItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptOrderItem;
			}
		} 
		public global::Allors.Meta.RoleType QuantityRejected 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptQuantityRejected;
			}
		} 
		public global::Allors.Meta.RoleType ShipmentItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptShipmentItem;
			}
		} 
		public global::Allors.Meta.RoleType ReceivedDateTime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptReceivedDateTime;
			}
		} 
		public global::Allors.Meta.RoleType QuantityAccepted 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShipmentReceiptQuantityAccepted;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType CustomerReturnStatusesWhereShipmentReceipt 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CustomerReturnStatusShipmentReceipt;
			}
		} 

	}
}