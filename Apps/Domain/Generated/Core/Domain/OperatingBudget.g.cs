// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class OperatingBudget : Allors.ObjectBase , Budget
	{
		public static readonly OperatingBudgetMeta Meta = OperatingBudgetMeta.Instance;

		public OperatingBudget(Allors.IStrategy allors) : base(allors) {}

		public static OperatingBudget Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (OperatingBudget) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description);
		}


		virtual public global::Allors.Extent<BudgetRevision> BudgetRevisions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BudgetRevision);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BudgetRevision, value);
			}
		}

		virtual public void AddBudgetRevision (BudgetRevision value)
		{
			Strategy.AddCompositeRole(Meta.BudgetRevision, value);
		}

		virtual public void RemoveBudgetRevision (BudgetRevision value)
		{
			Strategy.RemoveCompositeRole(Meta.BudgetRevision,value);
		}

		virtual public bool ExistBudgetRevisions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BudgetRevision);
			}
		}

		virtual public void RemoveBudgetRevisions()
		{
			Strategy.RemoveCompositeRoles(Meta.BudgetRevision);
		}


		virtual public global::Allors.Extent<BudgetStatus> BudgetStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BudgetStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BudgetStatus, value);
			}
		}

		virtual public void AddBudgetStatus (BudgetStatus value)
		{
			Strategy.AddCompositeRole(Meta.BudgetStatus, value);
		}

		virtual public void RemoveBudgetStatus (BudgetStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.BudgetStatus,value);
		}

		virtual public bool ExistBudgetStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BudgetStatus);
			}
		}

		virtual public void RemoveBudgetStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.BudgetStatus);
		}



		virtual public global::System.String BudgetNumber 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.BudgetNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.BudgetNumber, value);
			}
		}

		virtual public bool ExistBudgetNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.BudgetNumber);
			}
		}

		virtual public void RemoveBudgetNumber()
		{
			Strategy.RemoveUnitRole(Meta.BudgetNumber);
		}


		virtual public BudgetObjectState CurrentObjectState
		{ 
			get
			{
				return (BudgetObjectState) Strategy.GetCompositeRole(Meta.CurrentObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentObjectState ,value);
			}
		}

		virtual public bool ExistCurrentObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentObjectState);
			}
		}

		virtual public void RemoveCurrentObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentObjectState);
		}


		virtual public BudgetObjectState PreviousObjectState
		{ 
			get
			{
				return (BudgetObjectState) Strategy.GetCompositeRole(Meta.PreviousObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousObjectState ,value);
			}
		}

		virtual public bool ExistPreviousObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousObjectState);
			}
		}

		virtual public void RemovePreviousObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousObjectState);
		}


		virtual public global::Allors.Extent<BudgetReview> BudgetReviews
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BudgetReview);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BudgetReview, value);
			}
		}

		virtual public void AddBudgetReview (BudgetReview value)
		{
			Strategy.AddCompositeRole(Meta.BudgetReview, value);
		}

		virtual public void RemoveBudgetReview (BudgetReview value)
		{
			Strategy.RemoveCompositeRole(Meta.BudgetReview,value);
		}

		virtual public bool ExistBudgetReviews
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BudgetReview);
			}
		}

		virtual public void RemoveBudgetReviews()
		{
			Strategy.RemoveCompositeRoles(Meta.BudgetReview);
		}


		virtual public BudgetStatus CurrentBudgetStatus
		{ 
			get
			{
				return (BudgetStatus) Strategy.GetCompositeRole(Meta.CurrentBudgetStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentBudgetStatus ,value);
			}
		}

		virtual public bool ExistCurrentBudgetStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentBudgetStatus);
			}
		}

		virtual public void RemoveCurrentBudgetStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentBudgetStatus);
		}


		virtual public global::Allors.Extent<BudgetItem> BudgetItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BudgetItem);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BudgetItem, value);
			}
		}

		virtual public void AddBudgetItem (BudgetItem value)
		{
			Strategy.AddCompositeRole(Meta.BudgetItem, value);
		}

		virtual public void RemoveBudgetItem (BudgetItem value)
		{
			Strategy.RemoveCompositeRole(Meta.BudgetItem,value);
		}

		virtual public bool ExistBudgetItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BudgetItem);
			}
		}

		virtual public void RemoveBudgetItems()
		{
			Strategy.RemoveCompositeRoles(Meta.BudgetItem);
		}



		virtual public global::System.DateTime FromDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.FromDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FromDate, value);
			}
		}

		virtual public bool ExistFromDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.FromDate);
			}
		}

		virtual public void RemoveFromDate()
		{
			Strategy.RemoveUnitRole(Meta.FromDate);
		}



		virtual public global::System.DateTime ThroughDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.ThroughDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ThroughDate, value);
			}
		}

		virtual public bool ExistThroughDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.ThroughDate);
			}
		}

		virtual public void RemoveThroughDate()
		{
			Strategy.RemoveUnitRole(Meta.ThroughDate);
		}



		virtual public global::System.String Comment 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Comment);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Comment, value);
			}
		}

		virtual public bool ExistComment{
			get
			{
				return Strategy.ExistUnitRole(Meta.Comment);
			}
		}

		virtual public void RemoveComment()
		{
			Strategy.RemoveUnitRole(Meta.Comment);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}

	}

	public class OperatingBudgetMeta
	{
		public static readonly OperatingBudgetMeta Instance = new OperatingBudgetMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.OperatingBudget;

		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetDescription;
			}
		} 
		public global::Allors.Meta.RoleType BudgetRevision 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetBudgetRevision;
			}
		} 
		public global::Allors.Meta.RoleType BudgetStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetBudgetStatus;
			}
		} 
		public global::Allors.Meta.RoleType BudgetNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetBudgetNumber;
			}
		} 
		public global::Allors.Meta.RoleType CurrentObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetCurrentObjectState;
			}
		} 
		public global::Allors.Meta.RoleType PreviousObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetPreviousObjectState;
			}
		} 
		public global::Allors.Meta.RoleType BudgetReview 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetBudgetReview;
			}
		} 
		public global::Allors.Meta.RoleType CurrentBudgetStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetCurrentBudgetStatus;
			}
		} 
		public global::Allors.Meta.RoleType BudgetItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetBudgetItem;
			}
		} 
		public global::Allors.Meta.RoleType FromDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodFromDate;
			}
		} 
		public global::Allors.Meta.RoleType ThroughDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodThroughDate;
			}
		} 
		public global::Allors.Meta.RoleType Comment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CommentableComment;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.MethodType Close 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.BudgetClose;
			}
		} 
		public global::Allors.Meta.MethodType Reopen 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.BudgetReopen;
			}
		} 

	}
}