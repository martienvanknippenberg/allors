// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class JournalEntry : Allors.ObjectBase , UserInterfaceable, Transitional, AccessControlledObject, Searchable
	{
		public static readonly JournalEntryMeta Meta = JournalEntryMeta.Instance;

		public JournalEntry(Allors.IStrategy allors) : base(allors) {}

		public static JournalEntry Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (JournalEntry) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description);
		}



		virtual public global::System.Int64? EntryNumber 
		{
			get
			{
				return (global::System.Int64?) Strategy.GetUnitRole(Meta.EntryNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.EntryNumber, value);
			}
		}

		virtual public bool ExistEntryNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.EntryNumber);
			}
		}

		virtual public void RemoveEntryNumber()
		{
			Strategy.RemoveUnitRole(Meta.EntryNumber);
		}



		virtual public global::System.DateTime? EntryDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.EntryDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.EntryDate, value);
			}
		}

		virtual public bool ExistEntryDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.EntryDate);
			}
		}

		virtual public void RemoveEntryDate()
		{
			Strategy.RemoveUnitRole(Meta.EntryDate);
		}



		virtual public global::System.DateTime? JournalDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.JournalDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.JournalDate, value);
			}
		}

		virtual public bool ExistJournalDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.JournalDate);
			}
		}

		virtual public void RemoveJournalDate()
		{
			Strategy.RemoveUnitRole(Meta.JournalDate);
		}


		virtual public global::Allors.Extent<JournalEntryDetail> JournalEntryDetails
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.JournalEntryDetail);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.JournalEntryDetail, value);
			}
		}

		virtual public void AddJournalEntryDetail (JournalEntryDetail value)
		{
			Strategy.AddCompositeRole(Meta.JournalEntryDetail, value);
		}

		virtual public void RemoveJournalEntryDetail (JournalEntryDetail value)
		{
			Strategy.RemoveCompositeRole(Meta.JournalEntryDetail,value);
		}

		virtual public bool ExistJournalEntryDetails
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.JournalEntryDetail);
			}
		}

		virtual public void RemoveJournalEntryDetails()
		{
			Strategy.RemoveCompositeRoles(Meta.JournalEntryDetail);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public Journal JournalWhereJournalEntry
		{ 
			get
			{
				return (Journal) Strategy.GetCompositeAssociation(Meta.JournalWhereJournalEntry);
			}
		} 

		virtual public bool ExistJournalWhereJournalEntry
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.JournalWhereJournalEntry);
			}
		}

	}

	public class JournalEntryMeta
	{
		public static readonly JournalEntryMeta Instance = new JournalEntryMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.JournalEntry;

		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.JournalEntryDescription;
			}
		} 
		public global::Allors.Meta.RoleType EntryNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.JournalEntryEntryNumber;
			}
		} 
		public global::Allors.Meta.RoleType EntryDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.JournalEntryEntryDate;
			}
		} 
		public global::Allors.Meta.RoleType JournalDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.JournalEntryJournalDate;
			}
		} 
		public global::Allors.Meta.RoleType JournalEntryDetail 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.JournalEntryJournalEntryDetail;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.AssociationType JournalWhereJournalEntry 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.JournalJournalEntry;
			}
		} 

	}
}