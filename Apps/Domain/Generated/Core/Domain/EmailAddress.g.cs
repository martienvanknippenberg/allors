// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class EmailAddress : Allors.ObjectBase , ElectronicAddress
	{
		public static readonly EmailAddressMeta Meta = EmailAddressMeta.Instance;

		public EmailAddress(Allors.IStrategy allors) : base(allors) {}

		public static EmailAddress Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (EmailAddress) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String ElectronicAddressString 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ElectronicAddressString);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ElectronicAddressString, value);
			}
		}

		virtual public bool ExistElectronicAddressString{
			get
			{
				return Strategy.ExistUnitRole(Meta.ElectronicAddressString);
			}
		}

		virtual public void RemoveElectronicAddressString()
		{
			Strategy.RemoveUnitRole(Meta.ElectronicAddressString);
		}



		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description);
		}


		virtual public global::Allors.Extent<ContactMechanism> FollowTo
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.FollowTo);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.FollowTo, value);
			}
		}

		virtual public void AddFollowTo (ContactMechanism value)
		{
			Strategy.AddCompositeRole(Meta.FollowTo, value);
		}

		virtual public void RemoveFollowTo (ContactMechanism value)
		{
			Strategy.RemoveCompositeRole(Meta.FollowTo,value);
		}

		virtual public bool ExistFollowTo
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.FollowTo);
			}
		}

		virtual public void RemoveFollowTo()
		{
			Strategy.RemoveCompositeRoles(Meta.FollowTo);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::Allors.Extent<EmailCommunication> EmailCommunicationsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EmailCommunicationsWhereOriginator);
			}
		}

		virtual public bool ExistEmailCommunicationsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EmailCommunicationsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<EmailCommunication> EmailCommunicationsWhereAddressee
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EmailCommunicationsWhereAddressee);
			}
		}

		virtual public bool ExistEmailCommunicationsWhereAddressee
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EmailCommunicationsWhereAddressee);
			}
		}


		virtual public global::Allors.Extent<EmailCommunication> EmailCommunicationsWhereCarbonCopy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EmailCommunicationsWhereCarbonCopy);
			}
		}

		virtual public bool ExistEmailCommunicationsWhereCarbonCopy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EmailCommunicationsWhereCarbonCopy);
			}
		}


		virtual public global::Allors.Extent<EmailCommunication> EmailCommunicationsWhereBlindCopy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EmailCommunicationsWhereBlindCopy);
			}
		}

		virtual public bool ExistEmailCommunicationsWhereBlindCopy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EmailCommunicationsWhereBlindCopy);
			}
		}


		virtual public Party PartyWherePersonalEmailAddress
		{ 
			get
			{
				return (Party) Strategy.GetCompositeAssociation(Meta.PartyWherePersonalEmailAddress);
			}
		} 

		virtual public bool ExistPartyWherePersonalEmailAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PartyWherePersonalEmailAddress);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereInternetAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereInternetAddress);
			}
		}

		virtual public bool ExistPartiesWhereInternetAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereInternetAddress);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereTakenViaContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaContactMechanism);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaContactMechanism);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereBillToContactMechanism);
			}
		}


		virtual public BankAccount BankAccountWhereContactMechanism
		{ 
			get
			{
				return (BankAccount) Strategy.GetCompositeAssociation(Meta.BankAccountWhereContactMechanism);
			}
		} 

		virtual public bool ExistBankAccountWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.BankAccountWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<BillingAccount> BillingAccountsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.BillingAccountsWhereContactMechanism);
			}
		}

		virtual public bool ExistBillingAccountsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.BillingAccountsWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereHomeAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereHomeAddress);
			}
		}

		virtual public bool ExistPartiesWhereHomeAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereHomeAddress);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereSalesOffice
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereSalesOffice);
			}
		}

		virtual public bool ExistPartiesWhereSalesOffice
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereSalesOffice);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereBillingAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereBillingAddress);
			}
		}

		virtual public bool ExistPartiesWhereBillingAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereBillingAddress);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereHeadQuarter
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereHeadQuarter);
			}
		}

		virtual public bool ExistPartiesWhereHeadQuarter
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereHeadQuarter);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereOrderAddress
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereOrderAddress);
			}
		}

		virtual public bool ExistPartiesWhereOrderAddress
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereOrderAddress);
			}
		}


		virtual public global::Allors.Extent<RespondingParty> RespondingPartiesWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RespondingPartiesWhereContactMechanism);
			}
		}

		virtual public bool ExistRespondingPartiesWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RespondingPartiesWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBilledFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBilledFromContactMechanism);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBilledFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBilledFromContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereTakenByContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereTakenByContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWhereTakenByContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereTakenByContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillFromContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillFromContactMechanism);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePlacingContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePlacingContactMechanism);
			}
		}

		virtual public bool ExistSalesOrdersWherePlacingContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePlacingContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWherePlacingContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWherePlacingContactMechanism);
			}
		}

		virtual public bool ExistEngagementsWherePlacingContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWherePlacingContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistEngagementsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereTakenViaContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereTakenViaContactMechanism);
			}
		}

		virtual public bool ExistEngagementsWhereTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereTakenViaContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillToContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillToContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillToContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereReceiverContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereReceiverContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereReceiverContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereReceiverContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereInquireAboutContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereInquireAboutContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereInquireAboutContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereInquireAboutContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillFromContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillFromContactMechanism);
			}
		}

		virtual public bool ExistShipmentsWhereBillFromContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillFromContactMechanism);
			}
		}


		virtual public global::Allors.Extent<ContactMechanism> ContactMechanismsWhereFollowTo
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ContactMechanismsWhereFollowTo);
			}
		}

		virtual public bool ExistContactMechanismsWhereFollowTo
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ContactMechanismsWhereFollowTo);
			}
		}


		virtual public global::Allors.Extent<PartyContactMechanism> PartyContactMechanismsWhereContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyContactMechanismsWhereContactMechanism);
			}
		}

		virtual public bool ExistPartyContactMechanismsWhereContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyContactMechanismsWhereContactMechanism);
			}
		}


		virtual public global::Allors.Extent<Facility> FacilitiesWhereFacilityContactMechanism
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FacilitiesWhereFacilityContactMechanism);
			}
		}

		virtual public bool ExistFacilitiesWhereFacilityContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FacilitiesWhereFacilityContactMechanism);
			}
		}

	}

	public class EmailAddressMeta
	{
		public static readonly EmailAddressMeta Instance = new EmailAddressMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.EmailAddress;

		public global::Allors.Meta.RoleType ElectronicAddressString 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ElectronicAddressElectronicAddressString;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ContactMechanismDescription;
			}
		} 
		public global::Allors.Meta.RoleType FollowTo 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ContactMechanismFollowTo;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.AssociationType EmailCommunicationsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EmailCommunicationOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType EmailCommunicationsWhereAddressee 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EmailCommunicationAddressee;
			}
		} 
		public global::Allors.Meta.AssociationType EmailCommunicationsWhereCarbonCopy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EmailCommunicationCarbonCopy;
			}
		} 
		public global::Allors.Meta.AssociationType EmailCommunicationsWhereBlindCopy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EmailCommunicationBlindCopy;
			}
		} 
		public global::Allors.Meta.AssociationType PartyWherePersonalEmailAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyPersonalEmailAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereInternetAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyInternetAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereTakenViaContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderTakenViaContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType BankAccountWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BankAccountContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType BillingAccountsWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BillingAccountContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereHomeAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyHomeAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereSalesOffice 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartySalesOffice;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereBillingAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyBillingAddress;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereHeadQuarter 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyHeadQuarter;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereOrderAddress 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyOrderAddress;
			}
		} 
		public global::Allors.Meta.AssociationType RespondingPartiesWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RespondingPartyContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereBilledFromContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceBilledFromContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereTakenByContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderTakenByContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereBillFromContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderBillFromContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePlacingContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPlacingContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWherePlacingContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementPlacingContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWhereTakenViaContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementTakenViaContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereBillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereReceiverContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentReceiverContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereInquireAboutContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentInquireAboutContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereBillFromContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentBillFromContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType ContactMechanismsWhereFollowTo 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ContactMechanismFollowTo;
			}
		} 
		public global::Allors.Meta.AssociationType PartyContactMechanismsWhereContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyContactMechanismContactMechanism;
			}
		} 
		public global::Allors.Meta.AssociationType FacilitiesWhereFacilityContactMechanism 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FacilityFacilityContactMechanism;
			}
		} 

	}
}