// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class WorkEffortType : Allors.ObjectBase , Searchable, UserInterfaceable
	{
		public static readonly WorkEffortTypeMeta Meta = WorkEffortTypeMeta.Instance;

		public WorkEffortType(Allors.IStrategy allors) : base(allors) {}

		public static WorkEffortType Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (WorkEffortType) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public global::Allors.Extent<WorkEffortFixedAssetStandard> WorkEffortFixedAssetStandards
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.WorkEffortFixedAssetStandard);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.WorkEffortFixedAssetStandard, value);
			}
		}

		virtual public void AddWorkEffortFixedAssetStandard (WorkEffortFixedAssetStandard value)
		{
			Strategy.AddCompositeRole(Meta.WorkEffortFixedAssetStandard, value);
		}

		virtual public void RemoveWorkEffortFixedAssetStandard (WorkEffortFixedAssetStandard value)
		{
			Strategy.RemoveCompositeRole(Meta.WorkEffortFixedAssetStandard,value);
		}

		virtual public bool ExistWorkEffortFixedAssetStandards
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.WorkEffortFixedAssetStandard);
			}
		}

		virtual public void RemoveWorkEffortFixedAssetStandards()
		{
			Strategy.RemoveCompositeRoles(Meta.WorkEffortFixedAssetStandard);
		}


		virtual public global::Allors.Extent<WorkEffortGoodStandard> WorkEffortGoodStandards
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.WorkEffortGoodStandard);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.WorkEffortGoodStandard, value);
			}
		}

		virtual public void AddWorkEffortGoodStandard (WorkEffortGoodStandard value)
		{
			Strategy.AddCompositeRole(Meta.WorkEffortGoodStandard, value);
		}

		virtual public void RemoveWorkEffortGoodStandard (WorkEffortGoodStandard value)
		{
			Strategy.RemoveCompositeRole(Meta.WorkEffortGoodStandard,value);
		}

		virtual public bool ExistWorkEffortGoodStandards
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.WorkEffortGoodStandard);
			}
		}

		virtual public void RemoveWorkEffortGoodStandards()
		{
			Strategy.RemoveCompositeRoles(Meta.WorkEffortGoodStandard);
		}


		virtual public global::Allors.Extent<WorkEffortType> Children
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Child);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Child, value);
			}
		}

		virtual public void AddChild (WorkEffortType value)
		{
			Strategy.AddCompositeRole(Meta.Child, value);
		}

		virtual public void RemoveChild (WorkEffortType value)
		{
			Strategy.RemoveCompositeRole(Meta.Child,value);
		}

		virtual public bool ExistChildren
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Child);
			}
		}

		virtual public void RemoveChildren()
		{
			Strategy.RemoveCompositeRoles(Meta.Child);
		}


		virtual public FixedAsset FixedAssetToRepair
		{ 
			get
			{
				return (FixedAsset) Strategy.GetCompositeRole(Meta.FixedAssetToRepair);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.FixedAssetToRepair ,value);
			}
		}

		virtual public bool ExistFixedAssetToRepair
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.FixedAssetToRepair);
			}
		}

		virtual public void RemoveFixedAssetToRepair()
		{
			Strategy.RemoveCompositeRole(Meta.FixedAssetToRepair);
		}



		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description);
		}


		virtual public global::Allors.Extent<WorkEffortType> Dependencies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Dependency);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Dependency, value);
			}
		}

		virtual public void AddDependency (WorkEffortType value)
		{
			Strategy.AddCompositeRole(Meta.Dependency, value);
		}

		virtual public void RemoveDependency (WorkEffortType value)
		{
			Strategy.RemoveCompositeRole(Meta.Dependency,value);
		}

		virtual public bool ExistDependencies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Dependency);
			}
		}

		virtual public void RemoveDependencies()
		{
			Strategy.RemoveCompositeRoles(Meta.Dependency);
		}


		virtual public WorkEffortTypeKind WorkEffortTypeKind
		{ 
			get
			{
				return (WorkEffortTypeKind) Strategy.GetCompositeRole(Meta.WorkEffortTypeKind);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.WorkEffortTypeKind ,value);
			}
		}

		virtual public bool ExistWorkEffortTypeKind
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.WorkEffortTypeKind);
			}
		}

		virtual public void RemoveWorkEffortTypeKind()
		{
			Strategy.RemoveCompositeRole(Meta.WorkEffortTypeKind);
		}


		virtual public global::Allors.Extent<WorkEffortPartStandard> WorkEffortPartStandards
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.WorkEffortPartStandard);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.WorkEffortPartStandard, value);
			}
		}

		virtual public void AddWorkEffortPartStandard (WorkEffortPartStandard value)
		{
			Strategy.AddCompositeRole(Meta.WorkEffortPartStandard, value);
		}

		virtual public void RemoveWorkEffortPartStandard (WorkEffortPartStandard value)
		{
			Strategy.RemoveCompositeRole(Meta.WorkEffortPartStandard,value);
		}

		virtual public bool ExistWorkEffortPartStandards
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.WorkEffortPartStandard);
			}
		}

		virtual public void RemoveWorkEffortPartStandards()
		{
			Strategy.RemoveCompositeRoles(Meta.WorkEffortPartStandard);
		}


		virtual public global::Allors.Extent<WorkEffortSkillStandard> WorkEffortSkillStandards
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.WorkEffortSkillStandard);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.WorkEffortSkillStandard, value);
			}
		}

		virtual public void AddWorkEffortSkillStandard (WorkEffortSkillStandard value)
		{
			Strategy.AddCompositeRole(Meta.WorkEffortSkillStandard, value);
		}

		virtual public void RemoveWorkEffortSkillStandard (WorkEffortSkillStandard value)
		{
			Strategy.RemoveCompositeRole(Meta.WorkEffortSkillStandard,value);
		}

		virtual public bool ExistWorkEffortSkillStandards
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.WorkEffortSkillStandard);
			}
		}

		virtual public void RemoveWorkEffortSkillStandards()
		{
			Strategy.RemoveCompositeRoles(Meta.WorkEffortSkillStandard);
		}



		virtual public global::System.Decimal? StandardWorkHours 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.StandardWorkHours);
			}
			set
			{
				Strategy.SetUnitRole(Meta.StandardWorkHours, value);
			}
		}

		virtual public bool ExistStandardWorkHours{
			get
			{
				return Strategy.ExistUnitRole(Meta.StandardWorkHours);
			}
		}

		virtual public void RemoveStandardWorkHours()
		{
			Strategy.RemoveUnitRole(Meta.StandardWorkHours);
		}


		virtual public Product ProductToProduce
		{ 
			get
			{
				return (Product) Strategy.GetCompositeRole(Meta.ProductToProduce);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ProductToProduce ,value);
			}
		}

		virtual public bool ExistProductToProduce
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ProductToProduce);
			}
		}

		virtual public void RemoveProductToProduce()
		{
			Strategy.RemoveCompositeRole(Meta.ProductToProduce);
		}


		virtual public Deliverable DeliverableToProduce
		{ 
			get
			{
				return (Deliverable) Strategy.GetCompositeRole(Meta.DeliverableToProduce);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DeliverableToProduce ,value);
			}
		}

		virtual public bool ExistDeliverableToProduce
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DeliverableToProduce);
			}
		}

		virtual public void RemoveDeliverableToProduce()
		{
			Strategy.RemoveCompositeRole(Meta.DeliverableToProduce);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::Allors.Extent<WorkEffort> WorkEffortsWhereWorkEffortType
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WorkEffortsWhereWorkEffortType);
			}
		}

		virtual public bool ExistWorkEffortsWhereWorkEffortType
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WorkEffortsWhereWorkEffortType);
			}
		}


		virtual public global::Allors.Extent<WorkEffortType> WorkEffortTypesWhereChild
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WorkEffortTypesWhereChild);
			}
		}

		virtual public bool ExistWorkEffortTypesWhereChild
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WorkEffortTypesWhereChild);
			}
		}


		virtual public global::Allors.Extent<WorkEffortType> WorkEffortTypesWhereDependency
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WorkEffortTypesWhereDependency);
			}
		}

		virtual public bool ExistWorkEffortTypesWhereDependency
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WorkEffortTypesWhereDependency);
			}
		}

	}

	public class WorkEffortTypeMeta
	{
		public static readonly WorkEffortTypeMeta Instance = new WorkEffortTypeMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.WorkEffortType;

		public global::Allors.Meta.RoleType WorkEffortFixedAssetStandard 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeWorkEffortFixedAssetStandard;
			}
		} 
		public global::Allors.Meta.RoleType WorkEffortGoodStandard 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeWorkEffortGoodStandard;
			}
		} 
		public global::Allors.Meta.RoleType Child 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeChild;
			}
		} 
		public global::Allors.Meta.RoleType FixedAssetToRepair 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeFixedAssetToRepair;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeDescription;
			}
		} 
		public global::Allors.Meta.RoleType Dependency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeDependency;
			}
		} 
		public global::Allors.Meta.RoleType WorkEffortTypeKind 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeWorkEffortTypeKind;
			}
		} 
		public global::Allors.Meta.RoleType WorkEffortPartStandard 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeWorkEffortPartStandard;
			}
		} 
		public global::Allors.Meta.RoleType WorkEffortSkillStandard 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeWorkEffortSkillStandard;
			}
		} 
		public global::Allors.Meta.RoleType StandardWorkHours 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeStandardWorkHours;
			}
		} 
		public global::Allors.Meta.RoleType ProductToProduce 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeProductToProduce;
			}
		} 
		public global::Allors.Meta.RoleType DeliverableToProduce 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.WorkEffortTypeDeliverableToProduce;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType WorkEffortsWhereWorkEffortType 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortWorkEffortType;
			}
		} 
		public global::Allors.Meta.AssociationType WorkEffortTypesWhereChild 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortTypeChild;
			}
		} 
		public global::Allors.Meta.AssociationType WorkEffortTypesWhereDependency 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortTypeDependency;
			}
		} 

	}
}