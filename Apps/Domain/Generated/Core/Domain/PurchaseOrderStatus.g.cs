// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class PurchaseOrderStatus : Allors.ObjectBase , UserInterfaceable
	{
		public static readonly PurchaseOrderStatusMeta Meta = PurchaseOrderStatusMeta.Instance;

		public PurchaseOrderStatus(Allors.IStrategy allors) : base(allors) {}

		public static PurchaseOrderStatus Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (PurchaseOrderStatus) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public PurchaseOrderObjectState PurchaseOrderObjectState
		{ 
			get
			{
				return (PurchaseOrderObjectState) Strategy.GetCompositeRole(Meta.PurchaseOrderObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PurchaseOrderObjectState ,value);
			}
		}

		virtual public bool ExistPurchaseOrderObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PurchaseOrderObjectState);
			}
		}

		virtual public void RemovePurchaseOrderObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.PurchaseOrderObjectState);
		}



		virtual public global::System.DateTime StartDateTime 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.StartDateTime);
			}
			set
			{
				Strategy.SetUnitRole(Meta.StartDateTime, value);
			}
		}

		virtual public bool ExistStartDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.StartDateTime);
			}
		}

		virtual public void RemoveStartDateTime()
		{
			Strategy.RemoveUnitRole(Meta.StartDateTime);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public PurchaseOrder PurchaseOrderWherePaymentStatus
		{ 
			get
			{
				return (PurchaseOrder) Strategy.GetCompositeAssociation(Meta.PurchaseOrderWherePaymentStatus);
			}
		} 

		virtual public bool ExistPurchaseOrderWherePaymentStatus
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PurchaseOrderWherePaymentStatus);
			}
		}


		virtual public PurchaseOrder PurchaseOrderWhereCurrentPaymentStatus
		{ 
			get
			{
				return (PurchaseOrder) Strategy.GetCompositeAssociation(Meta.PurchaseOrderWhereCurrentPaymentStatus);
			}
		} 

		virtual public bool ExistPurchaseOrderWhereCurrentPaymentStatus
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PurchaseOrderWhereCurrentPaymentStatus);
			}
		}


		virtual public PurchaseOrder PurchaseOrderWhereCurrentShipmentStatus
		{ 
			get
			{
				return (PurchaseOrder) Strategy.GetCompositeAssociation(Meta.PurchaseOrderWhereCurrentShipmentStatus);
			}
		} 

		virtual public bool ExistPurchaseOrderWhereCurrentShipmentStatus
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PurchaseOrderWhereCurrentShipmentStatus);
			}
		}


		virtual public PurchaseOrder PurchaseOrderWhereOrderStatus
		{ 
			get
			{
				return (PurchaseOrder) Strategy.GetCompositeAssociation(Meta.PurchaseOrderWhereOrderStatus);
			}
		} 

		virtual public bool ExistPurchaseOrderWhereOrderStatus
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PurchaseOrderWhereOrderStatus);
			}
		}


		virtual public PurchaseOrder PurchaseOrderWhereShipmentStatus
		{ 
			get
			{
				return (PurchaseOrder) Strategy.GetCompositeAssociation(Meta.PurchaseOrderWhereShipmentStatus);
			}
		} 

		virtual public bool ExistPurchaseOrderWhereShipmentStatus
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PurchaseOrderWhereShipmentStatus);
			}
		}


		virtual public PurchaseOrder PurchaseOrderWhereCurrentOrderStatus
		{ 
			get
			{
				return (PurchaseOrder) Strategy.GetCompositeAssociation(Meta.PurchaseOrderWhereCurrentOrderStatus);
			}
		} 

		virtual public bool ExistPurchaseOrderWhereCurrentOrderStatus
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.PurchaseOrderWhereCurrentOrderStatus);
			}
		}

	}

	public class PurchaseOrderStatusMeta
	{
		public static readonly PurchaseOrderStatusMeta Instance = new PurchaseOrderStatusMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.PurchaseOrderStatus;

		public global::Allors.Meta.RoleType PurchaseOrderObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderStatusPurchaseOrderObjectState;
			}
		} 
		public global::Allors.Meta.RoleType StartDateTime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderStatusStartDateTime;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType PurchaseOrderWherePaymentStatus 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderPaymentStatus;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrderWhereCurrentPaymentStatus 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderCurrentPaymentStatus;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrderWhereCurrentShipmentStatus 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderCurrentShipmentStatus;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrderWhereOrderStatus 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderOrderStatus;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrderWhereShipmentStatus 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderShipmentStatus;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrderWhereCurrentOrderStatus 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderCurrentOrderStatus;
			}
		} 

	}
}