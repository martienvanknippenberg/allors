// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class RevenueQuantityBreak : Allors.ObjectBase , UserInterfaceable
	{
		public static readonly RevenueQuantityBreakMeta Meta = RevenueQuantityBreakMeta.Instance;

		public RevenueQuantityBreak(Allors.IStrategy allors) : base(allors) {}

		public static RevenueQuantityBreak Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (RevenueQuantityBreak) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal Through 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Through);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Through, value);
			}
		}

		virtual public bool ExistThrough{
			get
			{
				return Strategy.ExistUnitRole(Meta.Through);
			}
		}

		virtual public void RemoveThrough()
		{
			Strategy.RemoveUnitRole(Meta.Through);
		}



		virtual public global::System.Decimal From 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.From);
			}
			set
			{
				Strategy.SetUnitRole(Meta.From, value);
			}
		}

		virtual public bool ExistFrom{
			get
			{
				return Strategy.ExistUnitRole(Meta.From);
			}
		}

		virtual public void RemoveFrom()
		{
			Strategy.RemoveUnitRole(Meta.From);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::Allors.Extent<PriceComponent> PriceComponentsWhereRevenueQuantityBreak
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PriceComponentsWhereRevenueQuantityBreak);
			}
		}

		virtual public bool ExistPriceComponentsWhereRevenueQuantityBreak
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PriceComponentsWhereRevenueQuantityBreak);
			}
		}

	}

	public class RevenueQuantityBreakMeta
	{
		public static readonly RevenueQuantityBreakMeta Instance = new RevenueQuantityBreakMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.RevenueQuantityBreak;

		public global::Allors.Meta.RoleType Through 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RevenueQuantityBreakThrough;
			}
		} 
		public global::Allors.Meta.RoleType From 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RevenueQuantityBreakFrom;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType PriceComponentsWhereRevenueQuantityBreak 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PriceComponentRevenueQuantityBreak;
			}
		} 

	}
}