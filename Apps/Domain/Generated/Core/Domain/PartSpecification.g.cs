// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface PartSpecification :  UniquelyIdentifiable,Commentable,Transitional,UserInterfaceable, Allors.IObject
	{


		global::Allors.Extent<PartSpecificationStatus> PartSpecificationStatuses
		{ 
			get;
			set;
		}

		void AddPartSpecificationStatus (PartSpecificationStatus value);

		void RemovePartSpecificationStatus (PartSpecificationStatus value);

		bool ExistPartSpecificationStatuses
		{
			get;
		}

		void RemovePartSpecificationStatuses();


		PartSpecificationObjectState CurrentObjectState
		{ 
			get;
			set;
		}

		bool ExistCurrentObjectState
		{
			get;
		}

		void RemoveCurrentObjectState();


		global::System.DateTime DocumentationDate 
		{
			get;
			set;
		}

		bool ExistDocumentationDate{get;}

		void RemoveDocumentationDate();


		PartSpecificationStatus CurrentPartSpecificationStatus
		{ 
			get;
			set;
		}

		bool ExistCurrentPartSpecificationStatus
		{
			get;
		}

		void RemoveCurrentPartSpecificationStatus();


		PartSpecificationObjectState PreviousObjectState
		{ 
			get;
			set;
		}

		bool ExistPreviousObjectState
		{
			get;
		}

		void RemovePreviousObjectState();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();



		Part PartWherePartSpecification
		{
			get;
		}

		bool ExistPartWherePartSpecification
		{
			get;
		}


		global::Allors.Extent<EngineeringChange> EngineeringChangesWherePartSpecification
		{ 
			get;
		}

		bool ExistEngineeringChangesWherePartSpecification
		{
			get;
		}

	}

	public class PartSpecificationMeta
	{
		public static readonly PartSpecificationMeta Instance = new PartSpecificationMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.PartSpecification;

		public global::Allors.Meta.RoleType PartSpecificationStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartSpecificationPartSpecificationStatus;
			}
		} 
		public global::Allors.Meta.RoleType CurrentObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartSpecificationCurrentObjectState;
			}
		} 
		public global::Allors.Meta.RoleType DocumentationDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartSpecificationDocumentationDate;
			}
		} 
		public global::Allors.Meta.RoleType CurrentPartSpecificationStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartSpecificationCurrentPartSpecificationStatus;
			}
		} 
		public global::Allors.Meta.RoleType PreviousObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartSpecificationPreviousObjectState;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartSpecificationDescription;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 
		public global::Allors.Meta.RoleType Comment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CommentableComment;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 

		public global::Allors.Meta.AssociationType PartWherePartSpecification 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartPartSpecification;
			}
		} 
		public global::Allors.Meta.AssociationType EngineeringChangesWherePartSpecification 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngineeringChangePartSpecification;
			}
		} 

		public global::Allors.Meta.MethodType Approve 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.PartSpecificationApprove;
			}
		} 

	}
}