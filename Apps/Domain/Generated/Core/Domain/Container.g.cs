// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Container :  Searchable,SearchResult,UserInterfaceable, Allors.IObjectBase
	{


		Facility Facility
		{ 
			get;
			set;
		}

		bool ExistFacility
		{
			get;
		}

		void RemoveFacility();


		global::System.String ContainerDescription 
		{
			get;
			set;
		}

		bool ExistContainerDescription{get;}

		void RemoveContainerDescription();



		global::Allors.Extent<InventoryItem> InventoryItemsWhereContainer
		{ 
			get;
		}

		bool ExistInventoryItemsWhereContainer
		{
			get;
		}

	}

	public class ContainerMeta
	{
		public static readonly ContainerMeta Instance = new ContainerMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.Container;

		public global::Allors.Meta.RoleType Facility 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ContainerFacility;
			}
		} 
		public global::Allors.Meta.RoleType ContainerDescription 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ContainerContainerDescription;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType InventoryItemsWhereContainer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InventoryItemContainer;
			}
		} 

	}
}