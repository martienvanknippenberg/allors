// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class EngagementRate : Allors.ObjectBase , Period, UserInterfaceable
	{
		public static readonly EngagementRateMeta Meta = EngagementRateMeta.Instance;

		public EngagementRate(Allors.IStrategy allors) : base(allors) {}

		public static EngagementRate Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (EngagementRate) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal BillingRate 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.BillingRate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.BillingRate, value);
			}
		}

		virtual public bool ExistBillingRate{
			get
			{
				return Strategy.ExistUnitRole(Meta.BillingRate);
			}
		}

		virtual public void RemoveBillingRate()
		{
			Strategy.RemoveUnitRole(Meta.BillingRate);
		}


		virtual public RatingType RatingType
		{ 
			get
			{
				return (RatingType) Strategy.GetCompositeRole(Meta.RatingType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.RatingType ,value);
			}
		}

		virtual public bool ExistRatingType
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.RatingType);
			}
		}

		virtual public void RemoveRatingType()
		{
			Strategy.RemoveCompositeRole(Meta.RatingType);
		}



		virtual public global::System.Decimal Cost 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Cost);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Cost, value);
			}
		}

		virtual public bool ExistCost{
			get
			{
				return Strategy.ExistUnitRole(Meta.Cost);
			}
		}

		virtual public void RemoveCost()
		{
			Strategy.RemoveUnitRole(Meta.Cost);
		}


		virtual public global::Allors.Extent<PriceComponent> GoverningPriceComponents
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.GoverningPriceComponent);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.GoverningPriceComponent, value);
			}
		}

		virtual public void AddGoverningPriceComponent (PriceComponent value)
		{
			Strategy.AddCompositeRole(Meta.GoverningPriceComponent, value);
		}

		virtual public void RemoveGoverningPriceComponent (PriceComponent value)
		{
			Strategy.RemoveCompositeRole(Meta.GoverningPriceComponent,value);
		}

		virtual public bool ExistGoverningPriceComponents
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.GoverningPriceComponent);
			}
		}

		virtual public void RemoveGoverningPriceComponents()
		{
			Strategy.RemoveCompositeRoles(Meta.GoverningPriceComponent);
		}



		virtual public global::System.String ChangeReason 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ChangeReason);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ChangeReason, value);
			}
		}

		virtual public bool ExistChangeReason{
			get
			{
				return Strategy.ExistUnitRole(Meta.ChangeReason);
			}
		}

		virtual public void RemoveChangeReason()
		{
			Strategy.RemoveUnitRole(Meta.ChangeReason);
		}


		virtual public UnitOfMeasure UnitOfMeasure
		{ 
			get
			{
				return (UnitOfMeasure) Strategy.GetCompositeRole(Meta.UnitOfMeasure);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.UnitOfMeasure ,value);
			}
		}

		virtual public bool ExistUnitOfMeasure
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.UnitOfMeasure);
			}
		}

		virtual public void RemoveUnitOfMeasure()
		{
			Strategy.RemoveCompositeRole(Meta.UnitOfMeasure);
		}



		virtual public global::System.DateTime FromDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.FromDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FromDate, value);
			}
		}

		virtual public bool ExistFromDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.FromDate);
			}
		}

		virtual public void RemoveFromDate()
		{
			Strategy.RemoveUnitRole(Meta.FromDate);
		}



		virtual public global::System.DateTime ThroughDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.ThroughDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ThroughDate, value);
			}
		}

		virtual public bool ExistThroughDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.ThroughDate);
			}
		}

		virtual public void RemoveThroughDate()
		{
			Strategy.RemoveUnitRole(Meta.ThroughDate);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public EngagementItem EngagementItemWhereEngagementRate
		{ 
			get
			{
				return (EngagementItem) Strategy.GetCompositeAssociation(Meta.EngagementItemWhereEngagementRate);
			}
		} 

		virtual public bool ExistEngagementItemWhereEngagementRate
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.EngagementItemWhereEngagementRate);
			}
		}


		virtual public global::Allors.Extent<EngagementItem> EngagementItemsWhereCurrentEngagementRate
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementItemsWhereCurrentEngagementRate);
			}
		}

		virtual public bool ExistEngagementItemsWhereCurrentEngagementRate
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementItemsWhereCurrentEngagementRate);
			}
		}

	}

	public class EngagementRateMeta
	{
		public static readonly EngagementRateMeta Instance = new EngagementRateMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.EngagementRate;

		public global::Allors.Meta.RoleType BillingRate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EngagementRateBillingRate;
			}
		} 
		public global::Allors.Meta.RoleType RatingType 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EngagementRateRatingType;
			}
		} 
		public global::Allors.Meta.RoleType Cost 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EngagementRateCost;
			}
		} 
		public global::Allors.Meta.RoleType GoverningPriceComponent 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EngagementRateGoverningPriceComponent;
			}
		} 
		public global::Allors.Meta.RoleType ChangeReason 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EngagementRateChangeReason;
			}
		} 
		public global::Allors.Meta.RoleType UnitOfMeasure 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EngagementRateUnitOfMeasure;
			}
		} 
		public global::Allors.Meta.RoleType FromDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodFromDate;
			}
		} 
		public global::Allors.Meta.RoleType ThroughDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodThroughDate;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType EngagementItemWhereEngagementRate 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementItemEngagementRate;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementItemsWhereCurrentEngagementRate 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementItemCurrentEngagementRate;
			}
		} 

	}
}