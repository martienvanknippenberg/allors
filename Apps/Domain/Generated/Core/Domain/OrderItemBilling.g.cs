// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class OrderItemBilling : Allors.ObjectBase 
	{
		public static readonly OrderItemBillingMeta Meta = OrderItemBillingMeta.Instance;

		public OrderItemBilling(Allors.IStrategy allors) : base(allors) {}

		public static OrderItemBilling Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (OrderItemBilling) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public OrderItem OrderItem
		{ 
			get
			{
				return (OrderItem) Strategy.GetCompositeRole(Meta.OrderItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderItem ,value);
			}
		}

		virtual public bool ExistOrderItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderItem);
			}
		}

		virtual public void RemoveOrderItem()
		{
			Strategy.RemoveCompositeRole(Meta.OrderItem);
		}


		virtual public SalesInvoiceItem SalesInvoiceItem
		{ 
			get
			{
				return (SalesInvoiceItem) Strategy.GetCompositeRole(Meta.SalesInvoiceItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesInvoiceItem ,value);
			}
		}

		virtual public bool ExistSalesInvoiceItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesInvoiceItem);
			}
		}

		virtual public void RemoveSalesInvoiceItem()
		{
			Strategy.RemoveCompositeRole(Meta.SalesInvoiceItem);
		}



		virtual public global::System.Decimal Amount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Amount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Amount, value);
			}
		}

		virtual public bool ExistAmount{
			get
			{
				return Strategy.ExistUnitRole(Meta.Amount);
			}
		}

		virtual public void RemoveAmount()
		{
			Strategy.RemoveUnitRole(Meta.Amount);
		}



		virtual public global::System.Decimal Quantity 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Quantity);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Quantity, value);
			}
		}

		virtual public bool ExistQuantity{
			get
			{
				return Strategy.ExistUnitRole(Meta.Quantity);
			}
		}

		virtual public void RemoveQuantity()
		{
			Strategy.RemoveUnitRole(Meta.Quantity);
		}

	}

	public class OrderItemBillingMeta
	{
		public static readonly OrderItemBillingMeta Instance = new OrderItemBillingMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.OrderItemBilling;

		public global::Allors.Meta.RoleType OrderItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemBillingOrderItem;
			}
		} 
		public global::Allors.Meta.RoleType SalesInvoiceItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemBillingSalesInvoiceItem;
			}
		} 
		public global::Allors.Meta.RoleType Amount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemBillingAmount;
			}
		} 
		public global::Allors.Meta.RoleType Quantity 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemBillingQuantity;
			}
		} 

	}
}