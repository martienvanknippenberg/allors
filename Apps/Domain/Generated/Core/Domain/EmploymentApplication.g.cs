// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class EmploymentApplication : Allors.ObjectBase , SearchResult, UserInterfaceable, Searchable
	{
		public static readonly EmploymentApplicationMeta Meta = EmploymentApplicationMeta.Instance;

		public EmploymentApplication(Allors.IStrategy allors) : base(allors) {}

		public static EmploymentApplication Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (EmploymentApplication) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.DateTime? ApplicationDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.ApplicationDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ApplicationDate, value);
			}
		}

		virtual public bool ExistApplicationDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.ApplicationDate);
			}
		}

		virtual public void RemoveApplicationDate()
		{
			Strategy.RemoveUnitRole(Meta.ApplicationDate);
		}


		virtual public Position Position
		{ 
			get
			{
				return (Position) Strategy.GetCompositeRole(Meta.Position);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Position ,value);
			}
		}

		virtual public bool ExistPosition
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Position);
			}
		}

		virtual public void RemovePosition()
		{
			Strategy.RemoveCompositeRole(Meta.Position);
		}


		virtual public EmploymentApplicationStatus EmploymentApplicationStatus
		{ 
			get
			{
				return (EmploymentApplicationStatus) Strategy.GetCompositeRole(Meta.EmploymentApplicationStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.EmploymentApplicationStatus ,value);
			}
		}

		virtual public bool ExistEmploymentApplicationStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.EmploymentApplicationStatus);
			}
		}

		virtual public void RemoveEmploymentApplicationStatus()
		{
			Strategy.RemoveCompositeRole(Meta.EmploymentApplicationStatus);
		}


		virtual public Person Person
		{ 
			get
			{
				return (Person) Strategy.GetCompositeRole(Meta.Person);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Person ,value);
			}
		}

		virtual public bool ExistPerson
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Person);
			}
		}

		virtual public void RemovePerson()
		{
			Strategy.RemoveCompositeRole(Meta.Person);
		}


		virtual public EmploymentApplicationSource EmploymentApplicationSource
		{ 
			get
			{
				return (EmploymentApplicationSource) Strategy.GetCompositeRole(Meta.EmploymentApplicationSource);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.EmploymentApplicationSource ,value);
			}
		}

		virtual public bool ExistEmploymentApplicationSource
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.EmploymentApplicationSource);
			}
		}

		virtual public void RemoveEmploymentApplicationSource()
		{
			Strategy.RemoveCompositeRole(Meta.EmploymentApplicationSource);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}

	}

	public class EmploymentApplicationMeta
	{
		public static readonly EmploymentApplicationMeta Instance = new EmploymentApplicationMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.EmploymentApplication;

		public global::Allors.Meta.RoleType ApplicationDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EmploymentApplicationApplicationDate;
			}
		} 
		public global::Allors.Meta.RoleType Position 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EmploymentApplicationPosition;
			}
		} 
		public global::Allors.Meta.RoleType EmploymentApplicationStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EmploymentApplicationEmploymentApplicationStatus;
			}
		} 
		public global::Allors.Meta.RoleType Person 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EmploymentApplicationPerson;
			}
		} 
		public global::Allors.Meta.RoleType EmploymentApplicationSource 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EmploymentApplicationEmploymentApplicationSource;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

	}
}