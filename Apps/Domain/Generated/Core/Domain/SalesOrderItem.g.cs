// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class SalesOrderItem : Allors.ObjectBase , OrderItem
	{
		public static readonly SalesOrderItemMeta Meta = SalesOrderItemMeta.Instance;

		public SalesOrderItem(Allors.IStrategy allors) : base(allors) {}

		public static SalesOrderItem Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (SalesOrderItem) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal InitialProfitMargin 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.InitialProfitMargin);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InitialProfitMargin, value);
			}
		}

		virtual public bool ExistInitialProfitMargin{
			get
			{
				return Strategy.ExistUnitRole(Meta.InitialProfitMargin);
			}
		}

		virtual public void RemoveInitialProfitMargin()
		{
			Strategy.RemoveUnitRole(Meta.InitialProfitMargin);
		}


		virtual public SalesOrderItemStatus CurrentPaymentStatus
		{ 
			get
			{
				return (SalesOrderItemStatus) Strategy.GetCompositeRole(Meta.CurrentPaymentStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentPaymentStatus ,value);
			}
		}

		virtual public bool ExistCurrentPaymentStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentPaymentStatus);
			}
		}

		virtual public void RemoveCurrentPaymentStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentPaymentStatus);
		}



		virtual public global::System.Decimal QuantityShortFalled 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityShortFalled);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityShortFalled, value);
			}
		}

		virtual public bool ExistQuantityShortFalled{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityShortFalled);
			}
		}

		virtual public void RemoveQuantityShortFalled()
		{
			Strategy.RemoveUnitRole(Meta.QuantityShortFalled);
		}


		virtual public global::Allors.Extent<OrderItem> OrderedWithFeatures
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.OrderedWithFeature);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.OrderedWithFeature, value);
			}
		}

		virtual public void AddOrderedWithFeature (OrderItem value)
		{
			Strategy.AddCompositeRole(Meta.OrderedWithFeature, value);
		}

		virtual public void RemoveOrderedWithFeature (OrderItem value)
		{
			Strategy.RemoveCompositeRole(Meta.OrderedWithFeature,value);
		}

		virtual public bool ExistOrderedWithFeatures
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.OrderedWithFeature);
			}
		}

		virtual public void RemoveOrderedWithFeatures()
		{
			Strategy.RemoveCompositeRoles(Meta.OrderedWithFeature);
		}



		virtual public global::System.Decimal MaintainedProfitMargin 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.MaintainedProfitMargin);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MaintainedProfitMargin, value);
			}
		}

		virtual public bool ExistMaintainedProfitMargin{
			get
			{
				return Strategy.ExistUnitRole(Meta.MaintainedProfitMargin);
			}
		}

		virtual public void RemoveMaintainedProfitMargin()
		{
			Strategy.RemoveUnitRole(Meta.MaintainedProfitMargin);
		}



		virtual public global::System.Decimal RequiredProfitMargin 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.RequiredProfitMargin);
			}
			set
			{
				Strategy.SetUnitRole(Meta.RequiredProfitMargin, value);
			}
		}

		virtual public bool ExistRequiredProfitMargin{
			get
			{
				return Strategy.ExistUnitRole(Meta.RequiredProfitMargin);
			}
		}

		virtual public void RemoveRequiredProfitMargin()
		{
			Strategy.RemoveUnitRole(Meta.RequiredProfitMargin);
		}


		virtual public global::Allors.Extent<SalesOrderItemStatus> OrderItemStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.OrderItemStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.OrderItemStatus, value);
			}
		}

		virtual public void AddOrderItemStatus (SalesOrderItemStatus value)
		{
			Strategy.AddCompositeRole(Meta.OrderItemStatus, value);
		}

		virtual public void RemoveOrderItemStatus (SalesOrderItemStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.OrderItemStatus,value);
		}

		virtual public bool ExistOrderItemStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.OrderItemStatus);
			}
		}

		virtual public void RemoveOrderItemStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.OrderItemStatus);
		}


		virtual public SalesOrderItemStatus CurrentShipmentStatus
		{ 
			get
			{
				return (SalesOrderItemStatus) Strategy.GetCompositeRole(Meta.CurrentShipmentStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentShipmentStatus ,value);
			}
		}

		virtual public bool ExistCurrentShipmentStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentShipmentStatus);
			}
		}

		virtual public void RemoveCurrentShipmentStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentShipmentStatus);
		}


		virtual public NonSerializedInventoryItem PreviousReservedFromInventoryItem
		{ 
			get
			{
				return (NonSerializedInventoryItem) Strategy.GetCompositeRole(Meta.PreviousReservedFromInventoryItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousReservedFromInventoryItem ,value);
			}
		}

		virtual public bool ExistPreviousReservedFromInventoryItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousReservedFromInventoryItem);
			}
		}

		virtual public void RemovePreviousReservedFromInventoryItem()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousReservedFromInventoryItem);
		}



		virtual public global::System.Decimal RequiredMarkupPercentage 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.RequiredMarkupPercentage);
			}
			set
			{
				Strategy.SetUnitRole(Meta.RequiredMarkupPercentage, value);
			}
		}

		virtual public bool ExistRequiredMarkupPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.RequiredMarkupPercentage);
			}
		}

		virtual public void RemoveRequiredMarkupPercentage()
		{
			Strategy.RemoveUnitRole(Meta.RequiredMarkupPercentage);
		}



		virtual public global::System.Decimal QuantityShipped 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityShipped);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityShipped, value);
			}
		}

		virtual public bool ExistQuantityShipped{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityShipped);
			}
		}

		virtual public void RemoveQuantityShipped()
		{
			Strategy.RemoveUnitRole(Meta.QuantityShipped);
		}


		virtual public SalesOrderItemStatus CurrentOrderItemStatus
		{ 
			get
			{
				return (SalesOrderItemStatus) Strategy.GetCompositeRole(Meta.CurrentOrderItemStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentOrderItemStatus ,value);
			}
		}

		virtual public bool ExistCurrentOrderItemStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentOrderItemStatus);
			}
		}

		virtual public void RemoveCurrentOrderItemStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentOrderItemStatus);
		}


		virtual public PostalAddress ShipToAddress
		{ 
			get
			{
				return (PostalAddress) Strategy.GetCompositeRole(Meta.ShipToAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShipToAddress ,value);
			}
		}

		virtual public bool ExistShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShipToAddress);
			}
		}

		virtual public void RemoveShipToAddress()
		{
			Strategy.RemoveCompositeRole(Meta.ShipToAddress);
		}



		virtual public global::System.Decimal QuantityPicked 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityPicked);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityPicked, value);
			}
		}

		virtual public bool ExistQuantityPicked{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityPicked);
			}
		}

		virtual public void RemoveQuantityPicked()
		{
			Strategy.RemoveUnitRole(Meta.QuantityPicked);
		}


		virtual public Product PreviousProduct
		{ 
			get
			{
				return (Product) Strategy.GetCompositeRole(Meta.PreviousProduct);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousProduct ,value);
			}
		}

		virtual public bool ExistPreviousProduct
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousProduct);
			}
		}

		virtual public void RemovePreviousProduct()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousProduct);
		}


		virtual public SalesOrderItemObjectState CurrentObjectState
		{ 
			get
			{
				return (SalesOrderItemObjectState) Strategy.GetCompositeRole(Meta.CurrentObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentObjectState ,value);
			}
		}

		virtual public bool ExistCurrentObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentObjectState);
			}
		}

		virtual public void RemoveCurrentObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentObjectState);
		}



		virtual public global::System.Decimal UnitPurchasePrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitPurchasePrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitPurchasePrice, value);
			}
		}

		virtual public bool ExistUnitPurchasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitPurchasePrice);
			}
		}

		virtual public void RemoveUnitPurchasePrice()
		{
			Strategy.RemoveUnitRole(Meta.UnitPurchasePrice);
		}


		virtual public Party ShipToParty
		{ 
			get
			{
				return (Party) Strategy.GetCompositeRole(Meta.ShipToParty);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShipToParty ,value);
			}
		}

		virtual public bool ExistShipToParty
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShipToParty);
			}
		}

		virtual public void RemoveShipToParty()
		{
			Strategy.RemoveCompositeRole(Meta.ShipToParty);
		}


		virtual public PostalAddress AssignedShipToAddress
		{ 
			get
			{
				return (PostalAddress) Strategy.GetCompositeRole(Meta.AssignedShipToAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.AssignedShipToAddress ,value);
			}
		}

		virtual public bool ExistAssignedShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.AssignedShipToAddress);
			}
		}

		virtual public void RemoveAssignedShipToAddress()
		{
			Strategy.RemoveCompositeRole(Meta.AssignedShipToAddress);
		}



		virtual public global::System.Decimal QuantityReturned 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityReturned);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityReturned, value);
			}
		}

		virtual public bool ExistQuantityReturned{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityReturned);
			}
		}

		virtual public void RemoveQuantityReturned()
		{
			Strategy.RemoveUnitRole(Meta.QuantityReturned);
		}



		virtual public global::System.Decimal QuantityReserved 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityReserved);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityReserved, value);
			}
		}

		virtual public bool ExistQuantityReserved{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityReserved);
			}
		}

		virtual public void RemoveQuantityReserved()
		{
			Strategy.RemoveUnitRole(Meta.QuantityReserved);
		}


		virtual public Person SalesRep
		{ 
			get
			{
				return (Person) Strategy.GetCompositeRole(Meta.SalesRep);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesRep ,value);
			}
		}

		virtual public bool ExistSalesRep
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesRep);
			}
		}

		virtual public void RemoveSalesRep()
		{
			Strategy.RemoveCompositeRole(Meta.SalesRep);
		}


		virtual public global::Allors.Extent<SalesOrderItemStatus> ShipmentStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.ShipmentStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.ShipmentStatus, value);
			}
		}

		virtual public void AddShipmentStatus (SalesOrderItemStatus value)
		{
			Strategy.AddCompositeRole(Meta.ShipmentStatus, value);
		}

		virtual public void RemoveShipmentStatus (SalesOrderItemStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.ShipmentStatus,value);
		}

		virtual public bool ExistShipmentStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.ShipmentStatus);
			}
		}

		virtual public void RemoveShipmentStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.ShipmentStatus);
		}


		virtual public Party AssignedShipToParty
		{ 
			get
			{
				return (Party) Strategy.GetCompositeRole(Meta.AssignedShipToParty);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.AssignedShipToParty ,value);
			}
		}

		virtual public bool ExistAssignedShipToParty
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.AssignedShipToParty);
			}
		}

		virtual public void RemoveAssignedShipToParty()
		{
			Strategy.RemoveCompositeRole(Meta.AssignedShipToParty);
		}



		virtual public global::System.Decimal QuantityPendingShipment 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityPendingShipment);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityPendingShipment, value);
			}
		}

		virtual public bool ExistQuantityPendingShipment{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityPendingShipment);
			}
		}

		virtual public void RemoveQuantityPendingShipment()
		{
			Strategy.RemoveUnitRole(Meta.QuantityPendingShipment);
		}



		virtual public global::System.Decimal MaintainedMarkupPercentage 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.MaintainedMarkupPercentage);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MaintainedMarkupPercentage, value);
			}
		}

		virtual public bool ExistMaintainedMarkupPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.MaintainedMarkupPercentage);
			}
		}

		virtual public void RemoveMaintainedMarkupPercentage()
		{
			Strategy.RemoveUnitRole(Meta.MaintainedMarkupPercentage);
		}


		virtual public SalesOrderItemObjectState PreviousObjectState
		{ 
			get
			{
				return (SalesOrderItemObjectState) Strategy.GetCompositeRole(Meta.PreviousObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousObjectState ,value);
			}
		}

		virtual public bool ExistPreviousObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousObjectState);
			}
		}

		virtual public void RemovePreviousObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousObjectState);
		}



		virtual public global::System.Decimal InitialMarkupPercentage 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.InitialMarkupPercentage);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InitialMarkupPercentage, value);
			}
		}

		virtual public bool ExistInitialMarkupPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.InitialMarkupPercentage);
			}
		}

		virtual public void RemoveInitialMarkupPercentage()
		{
			Strategy.RemoveUnitRole(Meta.InitialMarkupPercentage);
		}


		virtual public NonSerializedInventoryItem ReservedFromInventoryItem
		{ 
			get
			{
				return (NonSerializedInventoryItem) Strategy.GetCompositeRole(Meta.ReservedFromInventoryItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ReservedFromInventoryItem ,value);
			}
		}

		virtual public bool ExistReservedFromInventoryItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ReservedFromInventoryItem);
			}
		}

		virtual public void RemoveReservedFromInventoryItem()
		{
			Strategy.RemoveCompositeRole(Meta.ReservedFromInventoryItem);
		}


		virtual public Product Product
		{ 
			get
			{
				return (Product) Strategy.GetCompositeRole(Meta.Product);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Product ,value);
			}
		}

		virtual public bool ExistProduct
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Product);
			}
		}

		virtual public void RemoveProduct()
		{
			Strategy.RemoveCompositeRole(Meta.Product);
		}


		virtual public ProductFeature ProductFeature
		{ 
			get
			{
				return (ProductFeature) Strategy.GetCompositeRole(Meta.ProductFeature);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ProductFeature ,value);
			}
		}

		virtual public bool ExistProductFeature
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ProductFeature);
			}
		}

		virtual public void RemoveProductFeature()
		{
			Strategy.RemoveCompositeRole(Meta.ProductFeature);
		}



		virtual public global::System.Decimal QuantityRequestsShipping 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityRequestsShipping);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityRequestsShipping, value);
			}
		}

		virtual public bool ExistQuantityRequestsShipping{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityRequestsShipping);
			}
		}

		virtual public void RemoveQuantityRequestsShipping()
		{
			Strategy.RemoveUnitRole(Meta.QuantityRequestsShipping);
		}


		virtual public global::Allors.Extent<SalesOrderItemStatus> PaymentStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PaymentStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PaymentStatus, value);
			}
		}

		virtual public void AddPaymentStatus (SalesOrderItemStatus value)
		{
			Strategy.AddCompositeRole(Meta.PaymentStatus, value);
		}

		virtual public void RemovePaymentStatus (SalesOrderItemStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.PaymentStatus,value);
		}

		virtual public bool ExistPaymentStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PaymentStatus);
			}
		}

		virtual public void RemovePaymentStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.PaymentStatus);
		}



		virtual public global::System.Decimal TotalDiscountAsPercentage 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalDiscountAsPercentage);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscountAsPercentage, value);
			}
		}

		virtual public bool ExistTotalDiscountAsPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscountAsPercentage);
			}
		}

		virtual public void RemoveTotalDiscountAsPercentage()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscountAsPercentage);
		}


		virtual public DiscountAdjustment DiscountAdjustment
		{ 
			get
			{
				return (DiscountAdjustment) Strategy.GetCompositeRole(Meta.DiscountAdjustment);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DiscountAdjustment ,value);
			}
		}

		virtual public bool ExistDiscountAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DiscountAdjustment);
			}
		}

		virtual public void RemoveDiscountAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.DiscountAdjustment);
		}



		virtual public global::System.Decimal UnitVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitVat, value);
			}
		}

		virtual public bool ExistUnitVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitVat);
			}
		}

		virtual public void RemoveUnitVat()
		{
			Strategy.RemoveUnitRole(Meta.UnitVat);
		}



		virtual public global::System.Decimal TotalVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalVatCustomerCurrency);
		}


		virtual public VatRegime VatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.VatRegime);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.VatRegime ,value);
			}
		}

		virtual public bool ExistVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.VatRegime);
			}
		}

		virtual public void RemoveVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.VatRegime);
		}


		virtual public BudgetItem BudgetItem
		{ 
			get
			{
				return (BudgetItem) Strategy.GetCompositeRole(Meta.BudgetItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BudgetItem ,value);
			}
		}

		virtual public bool ExistBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BudgetItem);
			}
		}

		virtual public void RemoveBudgetItem()
		{
			Strategy.RemoveCompositeRole(Meta.BudgetItem);
		}



		virtual public global::System.Decimal TotalVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVat, value);
			}
		}

		virtual public bool ExistTotalVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVat);
			}
		}

		virtual public void RemoveTotalVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalVat);
		}



		virtual public global::System.Decimal UnitSurcharge 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitSurcharge);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitSurcharge, value);
			}
		}

		virtual public bool ExistUnitSurcharge{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitSurcharge);
			}
		}

		virtual public void RemoveUnitSurcharge()
		{
			Strategy.RemoveUnitRole(Meta.UnitSurcharge);
		}



		virtual public global::System.Decimal UnitDiscount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitDiscount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitDiscount, value);
			}
		}

		virtual public bool ExistUnitDiscount{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitDiscount);
			}
		}

		virtual public void RemoveUnitDiscount()
		{
			Strategy.RemoveUnitRole(Meta.UnitDiscount);
		}



		virtual public global::System.Decimal PreviousQuantity 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.PreviousQuantity);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PreviousQuantity, value);
			}
		}

		virtual public bool ExistPreviousQuantity{
			get
			{
				return Strategy.ExistUnitRole(Meta.PreviousQuantity);
			}
		}

		virtual public void RemovePreviousQuantity()
		{
			Strategy.RemoveUnitRole(Meta.PreviousQuantity);
		}



		virtual public global::System.Decimal QuantityOrdered 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.QuantityOrdered);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuantityOrdered, value);
			}
		}

		virtual public bool ExistQuantityOrdered{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuantityOrdered);
			}
		}

		virtual public void RemoveQuantityOrdered()
		{
			Strategy.RemoveUnitRole(Meta.QuantityOrdered);
		}



		virtual public global::System.Decimal TotalExVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalExVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalExVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalExVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVatCustomerCurrency);
		}


		virtual public VatRate DerivedVatRate
		{ 
			get
			{
				return (VatRate) Strategy.GetCompositeRole(Meta.DerivedVatRate);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DerivedVatRate ,value);
			}
		}

		virtual public bool ExistDerivedVatRate
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DerivedVatRate);
			}
		}

		virtual public void RemoveDerivedVatRate()
		{
			Strategy.RemoveCompositeRole(Meta.DerivedVatRate);
		}



		virtual public global::System.Decimal ActualUnitPrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.ActualUnitPrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ActualUnitPrice, value);
			}
		}

		virtual public bool ExistActualUnitPrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.ActualUnitPrice);
			}
		}

		virtual public void RemoveActualUnitPrice()
		{
			Strategy.RemoveUnitRole(Meta.ActualUnitPrice);
		}



		virtual public global::System.Decimal TotalIncVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalIncVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalIncVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalIncVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVatCustomerCurrency);
		}



		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description);
		}



		virtual public global::System.Decimal UnitBasePrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.UnitBasePrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UnitBasePrice, value);
			}
		}

		virtual public bool ExistUnitBasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.UnitBasePrice);
			}
		}

		virtual public void RemoveUnitBasePrice()
		{
			Strategy.RemoveUnitRole(Meta.UnitBasePrice);
		}


		virtual public PurchaseOrder CorrespondingPurchaseOrder
		{ 
			get
			{
				return (PurchaseOrder) Strategy.GetCompositeRole(Meta.CorrespondingPurchaseOrder);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CorrespondingPurchaseOrder ,value);
			}
		}

		virtual public bool ExistCorrespondingPurchaseOrder
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CorrespondingPurchaseOrder);
			}
		}

		virtual public void RemoveCorrespondingPurchaseOrder()
		{
			Strategy.RemoveCompositeRole(Meta.CorrespondingPurchaseOrder);
		}



		virtual public global::System.Decimal CalculatedUnitPrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.CalculatedUnitPrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.CalculatedUnitPrice, value);
			}
		}

		virtual public bool ExistCalculatedUnitPrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.CalculatedUnitPrice);
			}
		}

		virtual public void RemoveCalculatedUnitPrice()
		{
			Strategy.RemoveUnitRole(Meta.CalculatedUnitPrice);
		}



		virtual public global::System.Decimal TotalOrderAdjustmentCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalOrderAdjustmentCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalOrderAdjustmentCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalOrderAdjustmentCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalOrderAdjustmentCustomerCurrency);
			}
		}

		virtual public void RemoveTotalOrderAdjustmentCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalOrderAdjustmentCustomerCurrency);
		}



		virtual public global::System.Decimal TotalOrderAdjustment 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalOrderAdjustment);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalOrderAdjustment, value);
			}
		}

		virtual public bool ExistTotalOrderAdjustment{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalOrderAdjustment);
			}
		}

		virtual public void RemoveTotalOrderAdjustment()
		{
			Strategy.RemoveUnitRole(Meta.TotalOrderAdjustment);
		}



		virtual public global::System.Decimal TotalSurchargeCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalSurchargeCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurchargeCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalSurchargeCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurchargeCustomerCurrency);
			}
		}

		virtual public void RemoveTotalSurchargeCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurchargeCustomerCurrency);
		}


		virtual public QuoteItem QuoteItem
		{ 
			get
			{
				return (QuoteItem) Strategy.GetCompositeRole(Meta.QuoteItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.QuoteItem ,value);
			}
		}

		virtual public bool ExistQuoteItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.QuoteItem);
			}
		}

		virtual public void RemoveQuoteItem()
		{
			Strategy.RemoveCompositeRole(Meta.QuoteItem);
		}



		virtual public global::System.DateTime AssignedDeliveryDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.AssignedDeliveryDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.AssignedDeliveryDate, value);
			}
		}

		virtual public bool ExistAssignedDeliveryDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.AssignedDeliveryDate);
			}
		}

		virtual public void RemoveAssignedDeliveryDate()
		{
			Strategy.RemoveUnitRole(Meta.AssignedDeliveryDate);
		}



		virtual public global::System.DateTime DeliveryDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.DeliveryDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DeliveryDate, value);
			}
		}

		virtual public bool ExistDeliveryDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.DeliveryDate);
			}
		}

		virtual public void RemoveDeliveryDate()
		{
			Strategy.RemoveUnitRole(Meta.DeliveryDate);
		}



		virtual public global::System.Decimal TotalIncVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalIncVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVat, value);
			}
		}

		virtual public bool ExistTotalIncVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVat);
			}
		}

		virtual public void RemoveTotalIncVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVat);
		}



		virtual public global::System.Decimal TotalSurchargeAsPercentage 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalSurchargeAsPercentage);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurchargeAsPercentage, value);
			}
		}

		virtual public bool ExistTotalSurchargeAsPercentage{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurchargeAsPercentage);
			}
		}

		virtual public void RemoveTotalSurchargeAsPercentage()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurchargeAsPercentage);
		}



		virtual public global::System.Decimal TotalDiscountCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalDiscountCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscountCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalDiscountCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscountCustomerCurrency);
			}
		}

		virtual public void RemoveTotalDiscountCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscountCustomerCurrency);
		}



		virtual public global::System.Decimal TotalDiscount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalDiscount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscount, value);
			}
		}

		virtual public bool ExistTotalDiscount{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscount);
			}
		}

		virtual public void RemoveTotalDiscount()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscount);
		}



		virtual public global::System.Decimal TotalSurcharge 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalSurcharge);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurcharge, value);
			}
		}

		virtual public bool ExistTotalSurcharge{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurcharge);
			}
		}

		virtual public void RemoveTotalSurcharge()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurcharge);
		}


		virtual public global::Allors.Extent<OrderTerm> OrderTerms
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.OrderTerm);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.OrderTerm, value);
			}
		}

		virtual public void AddOrderTerm (OrderTerm value)
		{
			Strategy.AddCompositeRole(Meta.OrderTerm, value);
		}

		virtual public void RemoveOrderTerm (OrderTerm value)
		{
			Strategy.RemoveCompositeRole(Meta.OrderTerm,value);
		}

		virtual public bool ExistOrderTerms
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.OrderTerm);
			}
		}

		virtual public void RemoveOrderTerms()
		{
			Strategy.RemoveCompositeRoles(Meta.OrderTerm);
		}


		virtual public VatRegime AssignedVatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.AssignedVatRegime);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.AssignedVatRegime ,value);
			}
		}

		virtual public bool ExistAssignedVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.AssignedVatRegime);
			}
		}

		virtual public void RemoveAssignedVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.AssignedVatRegime);
		}



		virtual public global::System.String ShippingInstruction 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ShippingInstruction);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ShippingInstruction, value);
			}
		}

		virtual public bool ExistShippingInstruction{
			get
			{
				return Strategy.ExistUnitRole(Meta.ShippingInstruction);
			}
		}

		virtual public void RemoveShippingInstruction()
		{
			Strategy.RemoveUnitRole(Meta.ShippingInstruction);
		}



		virtual public global::System.Decimal TotalBasePrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalBasePrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePrice, value);
			}
		}

		virtual public bool ExistTotalBasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePrice);
			}
		}

		virtual public void RemoveTotalBasePrice()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePrice);
		}


		virtual public global::Allors.Extent<OrderItem> Associations
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Association);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Association, value);
			}
		}

		virtual public void AddAssociation (OrderItem value)
		{
			Strategy.AddCompositeRole(Meta.Association, value);
		}

		virtual public void RemoveAssociation (OrderItem value)
		{
			Strategy.RemoveCompositeRole(Meta.Association,value);
		}

		virtual public bool ExistAssociations
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Association);
			}
		}

		virtual public void RemoveAssociations()
		{
			Strategy.RemoveCompositeRoles(Meta.Association);
		}



		virtual public global::System.Decimal TotalExVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalExVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVat, value);
			}
		}

		virtual public bool ExistTotalExVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVat);
			}
		}

		virtual public void RemoveTotalExVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVat);
		}



		virtual public global::System.Decimal TotalBasePriceCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalBasePriceCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePriceCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalBasePriceCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePriceCustomerCurrency);
			}
		}

		virtual public void RemoveTotalBasePriceCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePriceCustomerCurrency);
		}


		virtual public global::Allors.Extent<PriceComponent> CurrentPriceComponents
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.CurrentPriceComponent);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.CurrentPriceComponent, value);
			}
		}

		virtual public void AddCurrentPriceComponent (PriceComponent value)
		{
			Strategy.AddCompositeRole(Meta.CurrentPriceComponent, value);
		}

		virtual public void RemoveCurrentPriceComponent (PriceComponent value)
		{
			Strategy.RemoveCompositeRole(Meta.CurrentPriceComponent,value);
		}

		virtual public bool ExistCurrentPriceComponents
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.CurrentPriceComponent);
			}
		}

		virtual public void RemoveCurrentPriceComponents()
		{
			Strategy.RemoveCompositeRoles(Meta.CurrentPriceComponent);
		}


		virtual public SurchargeAdjustment SurchargeAdjustment
		{ 
			get
			{
				return (SurchargeAdjustment) Strategy.GetCompositeRole(Meta.SurchargeAdjustment);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SurchargeAdjustment ,value);
			}
		}

		virtual public bool ExistSurchargeAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SurchargeAdjustment);
			}
		}

		virtual public void RemoveSurchargeAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.SurchargeAdjustment);
		}



		virtual public global::System.String Message 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Message);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Message, value);
			}
		}

		virtual public bool ExistMessage{
			get
			{
				return Strategy.ExistUnitRole(Meta.Message);
			}
		}

		virtual public void RemoveMessage()
		{
			Strategy.RemoveUnitRole(Meta.Message);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::System.String Comment 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Comment);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Comment, value);
			}
		}

		virtual public bool ExistComment{
			get
			{
				return Strategy.ExistUnitRole(Meta.Comment);
			}
		}

		virtual public void RemoveComment()
		{
			Strategy.RemoveUnitRole(Meta.Comment);
		}



		virtual public global::Allors.Extent<OrderShipment> OrderShipmentsWhereSalesOrderItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderShipmentsWhereSalesOrderItem);
			}
		}

		virtual public bool ExistOrderShipmentsWhereSalesOrderItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderShipmentsWhereSalesOrderItem);
			}
		}


		virtual public SalesOrder SalesOrderWhereSalesOrderItem
		{ 
			get
			{
				return (SalesOrder) Strategy.GetCompositeAssociation(Meta.SalesOrderWhereSalesOrderItem);
			}
		} 

		virtual public bool ExistSalesOrderWhereSalesOrderItem
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SalesOrderWhereSalesOrderItem);
			}
		}


		virtual public global::Allors.Extent<SalesInvoiceItem> SalesInvoiceItemsWhereSalesOrderItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoiceItemsWhereSalesOrderItem);
			}
		}

		virtual public bool ExistSalesInvoiceItemsWhereSalesOrderItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoiceItemsWhereSalesOrderItem);
			}
		}


		virtual public global::Allors.Extent<OrderItemBilling> OrderItemsBillingWhereOrderItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderItemsBillingWhereOrderItem);
			}
		}

		virtual public bool ExistOrderItemsBillingWhereOrderItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderItemsBillingWhereOrderItem);
			}
		}


		virtual public global::Allors.Extent<OrderRequirementCommitment> OrderRequirementCommitmentsWhereOrderItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderRequirementCommitmentsWhereOrderItem);
			}
		}

		virtual public bool ExistOrderRequirementCommitmentsWhereOrderItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderRequirementCommitmentsWhereOrderItem);
			}
		}


		virtual public global::Allors.Extent<ShipmentReceipt> ShipmentReceiptsWhereOrderItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentReceiptsWhereOrderItem);
			}
		}

		virtual public bool ExistShipmentReceiptsWhereOrderItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentReceiptsWhereOrderItem);
			}
		}


		virtual public global::Allors.Extent<WorkEffort> WorkEffortsWhereOrderItemFulfillment
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WorkEffortsWhereOrderItemFulfillment);
			}
		}

		virtual public bool ExistWorkEffortsWhereOrderItemFulfillment
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WorkEffortsWhereOrderItemFulfillment);
			}
		}


		virtual public Order OrderWhereValidOrderItem
		{ 
			get
			{
				return (Order) Strategy.GetCompositeAssociation(Meta.OrderWhereValidOrderItem);
			}
		} 

		virtual public bool ExistOrderWhereValidOrderItem
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.OrderWhereValidOrderItem);
			}
		}


		virtual public SalesOrderItem SalesOrderItemWhereOrderedWithFeature
		{ 
			get
			{
				return (SalesOrderItem) Strategy.GetCompositeAssociation(Meta.SalesOrderItemWhereOrderedWithFeature);
			}
		} 

		virtual public bool ExistSalesOrderItemWhereOrderedWithFeature
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SalesOrderItemWhereOrderedWithFeature);
			}
		}


		virtual public global::Allors.Extent<OrderItem> OrderItemsWhereAssociation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderItemsWhereAssociation);
			}
		}

		virtual public bool ExistOrderItemsWhereAssociation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderItemsWhereAssociation);
			}
		}

	}

	public class SalesOrderItemMeta
	{
		public static readonly SalesOrderItemMeta Instance = new SalesOrderItemMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.SalesOrderItem;

		public global::Allors.Meta.RoleType InitialProfitMargin 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemInitialProfitMargin;
			}
		} 
		public global::Allors.Meta.RoleType CurrentPaymentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemCurrentPaymentStatus;
			}
		} 
		public global::Allors.Meta.RoleType QuantityShortFalled 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemQuantityShortFalled;
			}
		} 
		public global::Allors.Meta.RoleType OrderedWithFeature 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemOrderedWithFeature;
			}
		} 
		public global::Allors.Meta.RoleType MaintainedProfitMargin 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemMaintainedProfitMargin;
			}
		} 
		public global::Allors.Meta.RoleType RequiredProfitMargin 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemRequiredProfitMargin;
			}
		} 
		public global::Allors.Meta.RoleType OrderItemStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemOrderItemStatus;
			}
		} 
		public global::Allors.Meta.RoleType CurrentShipmentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemCurrentShipmentStatus;
			}
		} 
		public global::Allors.Meta.RoleType PreviousReservedFromInventoryItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemPreviousReservedFromInventoryItem;
			}
		} 
		public global::Allors.Meta.RoleType RequiredMarkupPercentage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemRequiredMarkupPercentage;
			}
		} 
		public global::Allors.Meta.RoleType QuantityShipped 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemQuantityShipped;
			}
		} 
		public global::Allors.Meta.RoleType CurrentOrderItemStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemCurrentOrderItemStatus;
			}
		} 
		public global::Allors.Meta.RoleType ShipToAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemShipToAddress;
			}
		} 
		public global::Allors.Meta.RoleType QuantityPicked 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemQuantityPicked;
			}
		} 
		public global::Allors.Meta.RoleType PreviousProduct 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemPreviousProduct;
			}
		} 
		public global::Allors.Meta.RoleType CurrentObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemCurrentObjectState;
			}
		} 
		public global::Allors.Meta.RoleType UnitPurchasePrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemUnitPurchasePrice;
			}
		} 
		public global::Allors.Meta.RoleType ShipToParty 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemShipToParty;
			}
		} 
		public global::Allors.Meta.RoleType AssignedShipToAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemAssignedShipToAddress;
			}
		} 
		public global::Allors.Meta.RoleType QuantityReturned 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemQuantityReturned;
			}
		} 
		public global::Allors.Meta.RoleType QuantityReserved 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemQuantityReserved;
			}
		} 
		public global::Allors.Meta.RoleType SalesRep 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemSalesRep;
			}
		} 
		public global::Allors.Meta.RoleType ShipmentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemShipmentStatus;
			}
		} 
		public global::Allors.Meta.RoleType AssignedShipToParty 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemAssignedShipToParty;
			}
		} 
		public global::Allors.Meta.RoleType QuantityPendingShipment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemQuantityPendingShipment;
			}
		} 
		public global::Allors.Meta.RoleType MaintainedMarkupPercentage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemMaintainedMarkupPercentage;
			}
		} 
		public global::Allors.Meta.RoleType PreviousObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemPreviousObjectState;
			}
		} 
		public global::Allors.Meta.RoleType InitialMarkupPercentage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemInitialMarkupPercentage;
			}
		} 
		public global::Allors.Meta.RoleType ReservedFromInventoryItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemReservedFromInventoryItem;
			}
		} 
		public global::Allors.Meta.RoleType Product 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemProduct;
			}
		} 
		public global::Allors.Meta.RoleType ProductFeature 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemProductFeature;
			}
		} 
		public global::Allors.Meta.RoleType QuantityRequestsShipping 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemQuantityRequestsShipping;
			}
		} 
		public global::Allors.Meta.RoleType PaymentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SalesOrderItemPaymentStatus;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscountAsPercentage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalDiscountAsPercentage;
			}
		} 
		public global::Allors.Meta.RoleType DiscountAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemDiscountAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType UnitVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemUnitVat;
			}
		} 
		public global::Allors.Meta.RoleType TotalVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType VatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemVatRegime;
			}
		} 
		public global::Allors.Meta.RoleType BudgetItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemBudgetItem;
			}
		} 
		public global::Allors.Meta.RoleType TotalVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalVat;
			}
		} 
		public global::Allors.Meta.RoleType UnitSurcharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemUnitSurcharge;
			}
		} 
		public global::Allors.Meta.RoleType UnitDiscount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemUnitDiscount;
			}
		} 
		public global::Allors.Meta.RoleType PreviousQuantity 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemPreviousQuantity;
			}
		} 
		public global::Allors.Meta.RoleType QuantityOrdered 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemQuantityOrdered;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalExVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType DerivedVatRate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemDerivedVatRate;
			}
		} 
		public global::Allors.Meta.RoleType ActualUnitPrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemActualUnitPrice;
			}
		} 
		public global::Allors.Meta.RoleType TotalIncVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalIncVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemDescription;
			}
		} 
		public global::Allors.Meta.RoleType UnitBasePrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemUnitBasePrice;
			}
		} 
		public global::Allors.Meta.RoleType CorrespondingPurchaseOrder 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemCorrespondingPurchaseOrder;
			}
		} 
		public global::Allors.Meta.RoleType CalculatedUnitPrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemCalculatedUnitPrice;
			}
		} 
		public global::Allors.Meta.RoleType TotalOrderAdjustmentCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalOrderAdjustmentCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalOrderAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalOrderAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurchargeCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalSurchargeCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType QuoteItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemQuoteItem;
			}
		} 
		public global::Allors.Meta.RoleType AssignedDeliveryDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemAssignedDeliveryDate;
			}
		} 
		public global::Allors.Meta.RoleType DeliveryDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemDeliveryDate;
			}
		} 
		public global::Allors.Meta.RoleType TotalIncVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalIncVat;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurchargeAsPercentage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalSurchargeAsPercentage;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscountCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalDiscountCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalDiscount;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurcharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalSurcharge;
			}
		} 
		public global::Allors.Meta.RoleType OrderTerm 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemOrderTerm;
			}
		} 
		public global::Allors.Meta.RoleType AssignedVatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemAssignedVatRegime;
			}
		} 
		public global::Allors.Meta.RoleType ShippingInstruction 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemShippingInstruction;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalBasePrice;
			}
		} 
		public global::Allors.Meta.RoleType Association 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemAssociation;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalExVat;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePriceCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemTotalBasePriceCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType CurrentPriceComponent 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemCurrentPriceComponent;
			}
		} 
		public global::Allors.Meta.RoleType SurchargeAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemSurchargeAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType Message 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderItemMessage;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType Comment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CommentableComment;
			}
		} 

		public global::Allors.Meta.AssociationType OrderShipmentsWhereSalesOrderItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderShipmentSalesOrderItem;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderWhereSalesOrderItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderSalesOrderItem;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoiceItemsWhereSalesOrderItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceItemSalesOrderItem;
			}
		} 
		public global::Allors.Meta.AssociationType OrderItemsBillingWhereOrderItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderItemBillingOrderItem;
			}
		} 
		public global::Allors.Meta.AssociationType OrderRequirementCommitmentsWhereOrderItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderRequirementCommitmentOrderItem;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentReceiptsWhereOrderItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentReceiptOrderItem;
			}
		} 
		public global::Allors.Meta.AssociationType WorkEffortsWhereOrderItemFulfillment 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortOrderItemFulfillment;
			}
		} 
		public global::Allors.Meta.AssociationType OrderWhereValidOrderItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderValidOrderItem;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemWhereOrderedWithFeature 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemOrderedWithFeature;
			}
		} 
		public global::Allors.Meta.AssociationType OrderItemsWhereAssociation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderItemAssociation;
			}
		} 

		public global::Allors.Meta.MethodType Delete 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.SalesOrderItemDelete;
			}
		} 
		public global::Allors.Meta.MethodType Cancel 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.SalesOrderItemCancel;
			}
		} 
		public global::Allors.Meta.MethodType Confirm 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.SalesOrderItemConfirm;
			}
		} 
		public global::Allors.Meta.MethodType Reject 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.SalesOrderItemReject;
			}
		} 
		public global::Allors.Meta.MethodType Approve 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.SalesOrderItemApprove;
			}
		} 
		public global::Allors.Meta.MethodType Continue 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.SalesOrderItemContinue;
			}
		} 
		public global::Allors.Meta.MethodType Finish 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.SalesOrderItemFinish;
			}
		} 

	}
}