// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface Requirement :  SearchResult,Transitional,UniquelyIdentifiable,UserInterfaceable,Searchable, Allors.IObject
	{


		global::System.DateTime? RequiredByDate 
		{
			get;
			set;
		}

		bool ExistRequiredByDate{get;}

		void RemoveRequiredByDate();


		RequirementObjectState PreviousObjectState
		{ 
			get;
			set;
		}

		bool ExistPreviousObjectState
		{
			get;
		}

		void RemovePreviousObjectState();


		Party Authorizer
		{ 
			get;
			set;
		}

		bool ExistAuthorizer
		{
			get;
		}

		void RemoveAuthorizer();


		global::Allors.Extent<RequirementStatus> RequirementStatuses
		{ 
			get;
			set;
		}

		void AddRequirementStatus (RequirementStatus value);

		void RemoveRequirementStatus (RequirementStatus value);

		bool ExistRequirementStatuses
		{
			get;
		}

		void RemoveRequirementStatuses();


		global::System.String Reason 
		{
			get;
			set;
		}

		bool ExistReason{get;}

		void RemoveReason();


		global::Allors.Extent<Requirement> Children
		{ 
			get;
			set;
		}

		void AddChild (Requirement value);

		void RemoveChild (Requirement value);

		bool ExistChildren
		{
			get;
		}

		void RemoveChildren();


		Party NeededFor
		{ 
			get;
			set;
		}

		bool ExistNeededFor
		{
			get;
		}

		void RemoveNeededFor();


		Party Originator
		{ 
			get;
			set;
		}

		bool ExistOriginator
		{
			get;
		}

		void RemoveOriginator();


		RequirementObjectState CurrentObjectState
		{ 
			get;
			set;
		}

		bool ExistCurrentObjectState
		{
			get;
		}

		void RemoveCurrentObjectState();


		RequirementStatus CurrentRequirementStatus
		{ 
			get;
			set;
		}

		bool ExistCurrentRequirementStatus
		{
			get;
		}

		void RemoveCurrentRequirementStatus();


		Facility Facility
		{ 
			get;
			set;
		}

		bool ExistFacility
		{
			get;
		}

		void RemoveFacility();


		Party ServicedBy
		{ 
			get;
			set;
		}

		bool ExistServicedBy
		{
			get;
		}

		void RemoveServicedBy();


		global::System.Decimal? EstimatedBudget 
		{
			get;
			set;
		}

		bool ExistEstimatedBudget{get;}

		void RemoveEstimatedBudget();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		global::System.Int32? Quantity 
		{
			get;
			set;
		}

		bool ExistQuantity{get;}

		void RemoveQuantity();



		global::Allors.Extent<OrderRequirementCommitment> OrderRequirementCommitmentsWhereRequirement
		{ 
			get;
		}

		bool ExistOrderRequirementCommitmentsWhereRequirement
		{
			get;
		}


		global::Allors.Extent<RequirementCommunication> RequirementCommunicationsWhereRequirement
		{ 
			get;
		}

		bool ExistRequirementCommunicationsWhereRequirement
		{
			get;
		}


		global::Allors.Extent<WorkEffort> WorkEffortsWhereRequirementFulfillment
		{ 
			get;
		}

		bool ExistWorkEffortsWhereRequirementFulfillment
		{
			get;
		}


		global::Allors.Extent<RequirementBudgetAllocation> RequirementBudgetAllocationsWhereRequirement
		{ 
			get;
		}

		bool ExistRequirementBudgetAllocationsWhereRequirement
		{
			get;
		}


		Requirement RequirementWhereChild
		{
			get;
		}

		bool ExistRequirementWhereChild
		{
			get;
		}


		global::Allors.Extent<RequestItem> RequestItemsWhereRequirement
		{ 
			get;
		}

		bool ExistRequestItemsWhereRequirement
		{
			get;
		}

	}

	public class RequirementMeta
	{
		public static readonly RequirementMeta Instance = new RequirementMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.Requirement;

		public global::Allors.Meta.RoleType RequiredByDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementRequiredByDate;
			}
		} 
		public global::Allors.Meta.RoleType PreviousObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementPreviousObjectState;
			}
		} 
		public global::Allors.Meta.RoleType Authorizer 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementAuthorizer;
			}
		} 
		public global::Allors.Meta.RoleType RequirementStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementRequirementStatus;
			}
		} 
		public global::Allors.Meta.RoleType Reason 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementReason;
			}
		} 
		public global::Allors.Meta.RoleType Child 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementChild;
			}
		} 
		public global::Allors.Meta.RoleType NeededFor 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementNeededFor;
			}
		} 
		public global::Allors.Meta.RoleType Originator 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementOriginator;
			}
		} 
		public global::Allors.Meta.RoleType CurrentObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementCurrentObjectState;
			}
		} 
		public global::Allors.Meta.RoleType CurrentRequirementStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementCurrentRequirementStatus;
			}
		} 
		public global::Allors.Meta.RoleType Facility 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementFacility;
			}
		} 
		public global::Allors.Meta.RoleType ServicedBy 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementServicedBy;
			}
		} 
		public global::Allors.Meta.RoleType EstimatedBudget 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementEstimatedBudget;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementDescription;
			}
		} 
		public global::Allors.Meta.RoleType Quantity 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.RequirementQuantity;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.AssociationType OrderRequirementCommitmentsWhereRequirement 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderRequirementCommitmentRequirement;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementCommunicationsWhereRequirement 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementCommunicationRequirement;
			}
		} 
		public global::Allors.Meta.AssociationType WorkEffortsWhereRequirementFulfillment 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortRequirementFulfillment;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementBudgetAllocationsWhereRequirement 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementBudgetAllocationRequirement;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementWhereChild 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementChild;
			}
		} 
		public global::Allors.Meta.AssociationType RequestItemsWhereRequirement 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequestItemRequirement;
			}
		} 

	}
}