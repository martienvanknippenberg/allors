// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class InternalOrganisation : Allors.ObjectBase , Party
	{
		public static readonly InternalOrganisationMeta Meta = InternalOrganisationMeta.Instance;

		public InternalOrganisation(Allors.IStrategy allors) : base(allors) {}

		public static InternalOrganisation Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (InternalOrganisation) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String PurchaseOrderNumberPrefix 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PurchaseOrderNumberPrefix);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PurchaseOrderNumberPrefix, value);
			}
		}

		virtual public bool ExistPurchaseOrderNumberPrefix{
			get
			{
				return Strategy.ExistUnitRole(Meta.PurchaseOrderNumberPrefix);
			}
		}

		virtual public void RemovePurchaseOrderNumberPrefix()
		{
			Strategy.RemoveUnitRole(Meta.PurchaseOrderNumberPrefix);
		}



		virtual public global::System.String TransactionReferenceNumber 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.TransactionReferenceNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TransactionReferenceNumber, value);
			}
		}

		virtual public bool ExistTransactionReferenceNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.TransactionReferenceNumber);
			}
		}

		virtual public void RemoveTransactionReferenceNumber()
		{
			Strategy.RemoveUnitRole(Meta.TransactionReferenceNumber);
		}



		virtual public global::System.Int32 NextPurchaseInvoiceNumber 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.NextPurchaseInvoiceNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.NextPurchaseInvoiceNumber, value);
			}
		}

		virtual public bool ExistNextPurchaseInvoiceNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.NextPurchaseInvoiceNumber);
			}
		}

		virtual public void RemoveNextPurchaseInvoiceNumber()
		{
			Strategy.RemoveUnitRole(Meta.NextPurchaseInvoiceNumber);
		}



		virtual public global::System.Int32 NextQuoteNumber 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.NextQuoteNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.NextQuoteNumber, value);
			}
		}

		virtual public bool ExistNextQuoteNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.NextQuoteNumber);
			}
		}

		virtual public void RemoveNextQuoteNumber()
		{
			Strategy.RemoveUnitRole(Meta.NextQuoteNumber);
		}


		virtual public global::Allors.Extent<JournalEntryNumber> JournalEntryNumbers
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.JournalEntryNumber);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.JournalEntryNumber, value);
			}
		}

		virtual public void AddJournalEntryNumber (JournalEntryNumber value)
		{
			Strategy.AddCompositeRole(Meta.JournalEntryNumber, value);
		}

		virtual public void RemoveJournalEntryNumber (JournalEntryNumber value)
		{
			Strategy.RemoveCompositeRole(Meta.JournalEntryNumber,value);
		}

		virtual public bool ExistJournalEntryNumbers
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.JournalEntryNumber);
			}
		}

		virtual public void RemoveJournalEntryNumbers()
		{
			Strategy.RemoveCompositeRoles(Meta.JournalEntryNumber);
		}


		virtual public Country EuListingState
		{ 
			get
			{
				return (Country) Strategy.GetCompositeRole(Meta.EuListingState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.EuListingState ,value);
			}
		}

		virtual public bool ExistEuListingState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.EuListingState);
			}
		}

		virtual public void RemoveEuListingState()
		{
			Strategy.RemoveCompositeRole(Meta.EuListingState);
		}


		virtual public AccountingPeriod ActualAccountingPeriod
		{ 
			get
			{
				return (AccountingPeriod) Strategy.GetCompositeRole(Meta.ActualAccountingPeriod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ActualAccountingPeriod ,value);
			}
		}

		virtual public bool ExistActualAccountingPeriod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ActualAccountingPeriod);
			}
		}

		virtual public void RemoveActualAccountingPeriod()
		{
			Strategy.RemoveCompositeRole(Meta.ActualAccountingPeriod);
		}


		virtual public InvoiceSequence InvoiceSequence
		{ 
			get
			{
				return (InvoiceSequence) Strategy.GetCompositeRole(Meta.InvoiceSequence);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.InvoiceSequence ,value);
			}
		}

		virtual public bool ExistInvoiceSequence
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.InvoiceSequence);
			}
		}

		virtual public void RemoveInvoiceSequence()
		{
			Strategy.RemoveCompositeRole(Meta.InvoiceSequence);
		}


		virtual public global::Allors.Extent<PaymentMethod> ActivePaymentMethods
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.ActivePaymentMethod);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.ActivePaymentMethod, value);
			}
		}

		virtual public void AddActivePaymentMethod (PaymentMethod value)
		{
			Strategy.AddCompositeRole(Meta.ActivePaymentMethod, value);
		}

		virtual public void RemoveActivePaymentMethod (PaymentMethod value)
		{
			Strategy.RemoveCompositeRole(Meta.ActivePaymentMethod,value);
		}

		virtual public bool ExistActivePaymentMethods
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.ActivePaymentMethod);
			}
		}

		virtual public void RemoveActivePaymentMethods()
		{
			Strategy.RemoveCompositeRoles(Meta.ActivePaymentMethod);
		}


		virtual public global::Allors.Extent<StringTemplate> PurchaseShipmentTemplates
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PurchaseShipmentTemplate);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PurchaseShipmentTemplate, value);
			}
		}

		virtual public void AddPurchaseShipmentTemplate (StringTemplate value)
		{
			Strategy.AddCompositeRole(Meta.PurchaseShipmentTemplate, value);
		}

		virtual public void RemovePurchaseShipmentTemplate (StringTemplate value)
		{
			Strategy.RemoveCompositeRole(Meta.PurchaseShipmentTemplate,value);
		}

		virtual public bool ExistPurchaseShipmentTemplates
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PurchaseShipmentTemplate);
			}
		}

		virtual public void RemovePurchaseShipmentTemplates()
		{
			Strategy.RemoveCompositeRoles(Meta.PurchaseShipmentTemplate);
		}



		virtual public global::System.Decimal MaximumAllowedPaymentDifference 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.MaximumAllowedPaymentDifference);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MaximumAllowedPaymentDifference, value);
			}
		}

		virtual public bool ExistMaximumAllowedPaymentDifference{
			get
			{
				return Strategy.ExistUnitRole(Meta.MaximumAllowedPaymentDifference);
			}
		}

		virtual public void RemoveMaximumAllowedPaymentDifference()
		{
			Strategy.RemoveUnitRole(Meta.MaximumAllowedPaymentDifference);
		}


		virtual public Media LogoImage
		{ 
			get
			{
				return (Media) Strategy.GetCompositeRole(Meta.LogoImage);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.LogoImage ,value);
			}
		}

		virtual public bool ExistLogoImage
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.LogoImage);
			}
		}

		virtual public void RemoveLogoImage()
		{
			Strategy.RemoveCompositeRole(Meta.LogoImage);
		}


		virtual public CostCenterSplitMethod CostCenterSplitMethod
		{ 
			get
			{
				return (CostCenterSplitMethod) Strategy.GetCompositeRole(Meta.CostCenterSplitMethod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CostCenterSplitMethod ,value);
			}
		}

		virtual public bool ExistCostCenterSplitMethod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CostCenterSplitMethod);
			}
		}

		virtual public void RemoveCostCenterSplitMethod()
		{
			Strategy.RemoveCompositeRole(Meta.CostCenterSplitMethod);
		}


		virtual public LegalForm LegalForm
		{ 
			get
			{
				return (LegalForm) Strategy.GetCompositeRole(Meta.LegalForm);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.LegalForm ,value);
			}
		}

		virtual public bool ExistLegalForm
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.LegalForm);
			}
		}

		virtual public void RemoveLegalForm()
		{
			Strategy.RemoveCompositeRole(Meta.LegalForm);
		}


		virtual public global::Allors.Extent<AccountingPeriod> AccountingPeriods
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.AccountingPeriod);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.AccountingPeriod, value);
			}
		}

		virtual public void AddAccountingPeriod (AccountingPeriod value)
		{
			Strategy.AddCompositeRole(Meta.AccountingPeriod, value);
		}

		virtual public void RemoveAccountingPeriod (AccountingPeriod value)
		{
			Strategy.RemoveCompositeRole(Meta.AccountingPeriod,value);
		}

		virtual public bool ExistAccountingPeriods
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.AccountingPeriod);
			}
		}

		virtual public void RemoveAccountingPeriods()
		{
			Strategy.RemoveCompositeRoles(Meta.AccountingPeriod);
		}


		virtual public GeneralLedgerAccount SalesPaymentDifferencesAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.SalesPaymentDifferencesAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesPaymentDifferencesAccount ,value);
			}
		}

		virtual public bool ExistSalesPaymentDifferencesAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesPaymentDifferencesAccount);
			}
		}

		virtual public void RemoveSalesPaymentDifferencesAccount()
		{
			Strategy.RemoveCompositeRole(Meta.SalesPaymentDifferencesAccount);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name);
		}



		virtual public global::System.Int32 NextPurchaseOrderNumber 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.NextPurchaseOrderNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.NextPurchaseOrderNumber, value);
			}
		}

		virtual public bool ExistNextPurchaseOrderNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.NextPurchaseOrderNumber);
			}
		}

		virtual public void RemoveNextPurchaseOrderNumber()
		{
			Strategy.RemoveUnitRole(Meta.NextPurchaseOrderNumber);
		}



		virtual public global::System.String PurchaseTransactionReferenceNumber 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PurchaseTransactionReferenceNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PurchaseTransactionReferenceNumber, value);
			}
		}

		virtual public bool ExistPurchaseTransactionReferenceNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.PurchaseTransactionReferenceNumber);
			}
		}

		virtual public void RemovePurchaseTransactionReferenceNumber()
		{
			Strategy.RemoveUnitRole(Meta.PurchaseTransactionReferenceNumber);
		}



		virtual public global::System.Int32 FiscalYearStartMonth 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.FiscalYearStartMonth);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FiscalYearStartMonth, value);
			}
		}

		virtual public bool ExistFiscalYearStartMonth{
			get
			{
				return Strategy.ExistUnitRole(Meta.FiscalYearStartMonth);
			}
		}

		virtual public void RemoveFiscalYearStartMonth()
		{
			Strategy.RemoveUnitRole(Meta.FiscalYearStartMonth);
		}


		virtual public global::Allors.Extent<StringTemplate> PurchaseOrderTemplates
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PurchaseOrderTemplate);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PurchaseOrderTemplate, value);
			}
		}

		virtual public void AddPurchaseOrderTemplate (StringTemplate value)
		{
			Strategy.AddCompositeRole(Meta.PurchaseOrderTemplate, value);
		}

		virtual public void RemovePurchaseOrderTemplate (StringTemplate value)
		{
			Strategy.RemoveCompositeRole(Meta.PurchaseOrderTemplate,value);
		}

		virtual public bool ExistPurchaseOrderTemplates
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PurchaseOrderTemplate);
			}
		}

		virtual public void RemovePurchaseOrderTemplates()
		{
			Strategy.RemoveCompositeRoles(Meta.PurchaseOrderTemplate);
		}



		virtual public global::System.Int32 NextIncomingShipmentNumber 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.NextIncomingShipmentNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.NextIncomingShipmentNumber, value);
			}
		}

		virtual public bool ExistNextIncomingShipmentNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.NextIncomingShipmentNumber);
			}
		}

		virtual public void RemoveNextIncomingShipmentNumber()
		{
			Strategy.RemoveUnitRole(Meta.NextIncomingShipmentNumber);
		}


		virtual public CostOfGoodsSoldMethod CostOfGoodsSoldMethod
		{ 
			get
			{
				return (CostOfGoodsSoldMethod) Strategy.GetCompositeRole(Meta.CostOfGoodsSoldMethod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CostOfGoodsSoldMethod ,value);
			}
		}

		virtual public bool ExistCostOfGoodsSoldMethod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CostOfGoodsSoldMethod);
			}
		}

		virtual public void RemoveCostOfGoodsSoldMethod()
		{
			Strategy.RemoveCompositeRole(Meta.CostOfGoodsSoldMethod);
		}



		virtual public global::System.Int32 NextSubAccountNumber 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.NextSubAccountNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.NextSubAccountNumber, value);
			}
		}

		virtual public bool ExistNextSubAccountNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.NextSubAccountNumber);
			}
		}

		virtual public void RemoveNextSubAccountNumber()
		{
			Strategy.RemoveUnitRole(Meta.NextSubAccountNumber);
		}


		virtual public global::Allors.Extent<Role> EmployeeRoles
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.EmployeeRole);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.EmployeeRole, value);
			}
		}

		virtual public void AddEmployeeRole (Role value)
		{
			Strategy.AddCompositeRole(Meta.EmployeeRole, value);
		}

		virtual public void RemoveEmployeeRole (Role value)
		{
			Strategy.RemoveCompositeRole(Meta.EmployeeRole,value);
		}

		virtual public bool ExistEmployeeRoles
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.EmployeeRole);
			}
		}

		virtual public void RemoveEmployeeRoles()
		{
			Strategy.RemoveCompositeRoles(Meta.EmployeeRole);
		}



		virtual public global::System.Boolean VatDeactivated 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.VatDeactivated);
			}
			set
			{
				Strategy.SetUnitRole(Meta.VatDeactivated, value);
			}
		}

		virtual public bool ExistVatDeactivated{
			get
			{
				return Strategy.ExistUnitRole(Meta.VatDeactivated);
			}
		}

		virtual public void RemoveVatDeactivated()
		{
			Strategy.RemoveUnitRole(Meta.VatDeactivated);
		}



		virtual public global::System.Int32 FiscalYearStartDay 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.FiscalYearStartDay);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FiscalYearStartDay, value);
			}
		}

		virtual public bool ExistFiscalYearStartDay{
			get
			{
				return Strategy.ExistUnitRole(Meta.FiscalYearStartDay);
			}
		}

		virtual public void RemoveFiscalYearStartDay()
		{
			Strategy.RemoveUnitRole(Meta.FiscalYearStartDay);
		}


		virtual public global::Allors.Extent<GeneralLedgerAccount> GeneralLedgerAccounts
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.GeneralLedgerAccount);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.GeneralLedgerAccount, value);
			}
		}

		virtual public void AddGeneralLedgerAccount (GeneralLedgerAccount value)
		{
			Strategy.AddCompositeRole(Meta.GeneralLedgerAccount, value);
		}

		virtual public void RemoveGeneralLedgerAccount (GeneralLedgerAccount value)
		{
			Strategy.RemoveCompositeRole(Meta.GeneralLedgerAccount,value);
		}

		virtual public bool ExistGeneralLedgerAccounts
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.GeneralLedgerAccount);
			}
		}

		virtual public void RemoveGeneralLedgerAccounts()
		{
			Strategy.RemoveCompositeRoles(Meta.GeneralLedgerAccount);
		}


		virtual public GeneralLedgerAccount RetainedEarningsAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.RetainedEarningsAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.RetainedEarningsAccount ,value);
			}
		}

		virtual public bool ExistRetainedEarningsAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.RetainedEarningsAccount);
			}
		}

		virtual public void RemoveRetainedEarningsAccount()
		{
			Strategy.RemoveCompositeRole(Meta.RetainedEarningsAccount);
		}


		virtual public global::Allors.Extent<StringTemplate> PackagingSlipTemplates
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PackagingSlipTemplate);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PackagingSlipTemplate, value);
			}
		}

		virtual public void AddPackagingSlipTemplate (StringTemplate value)
		{
			Strategy.AddCompositeRole(Meta.PackagingSlipTemplate, value);
		}

		virtual public void RemovePackagingSlipTemplate (StringTemplate value)
		{
			Strategy.RemoveCompositeRole(Meta.PackagingSlipTemplate,value);
		}

		virtual public bool ExistPackagingSlipTemplates
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PackagingSlipTemplate);
			}
		}

		virtual public void RemovePackagingSlipTemplates()
		{
			Strategy.RemoveCompositeRoles(Meta.PackagingSlipTemplate);
		}


		virtual public global::Allors.Extent<Party> Customers
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Customer);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Customer, value);
			}
		}

		virtual public void AddCustomer (Party value)
		{
			Strategy.AddCompositeRole(Meta.Customer, value);
		}

		virtual public void RemoveCustomer (Party value)
		{
			Strategy.RemoveCompositeRole(Meta.Customer,value);
		}

		virtual public bool ExistCustomers
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Customer);
			}
		}

		virtual public void RemoveCustomers()
		{
			Strategy.RemoveCompositeRoles(Meta.Customer);
		}



		virtual public global::System.String PurchaseInvoiceNumberPrefix 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PurchaseInvoiceNumberPrefix);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PurchaseInvoiceNumberPrefix, value);
			}
		}

		virtual public bool ExistPurchaseInvoiceNumberPrefix{
			get
			{
				return Strategy.ExistUnitRole(Meta.PurchaseInvoiceNumberPrefix);
			}
		}

		virtual public void RemovePurchaseInvoiceNumberPrefix()
		{
			Strategy.RemoveUnitRole(Meta.PurchaseInvoiceNumberPrefix);
		}


		virtual public global::Allors.Extent<StringTemplate> PickListTemplates
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PickListTemplate);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PickListTemplate, value);
			}
		}

		virtual public void AddPickListTemplate (StringTemplate value)
		{
			Strategy.AddCompositeRole(Meta.PickListTemplate, value);
		}

		virtual public void RemovePickListTemplate (StringTemplate value)
		{
			Strategy.RemoveCompositeRole(Meta.PickListTemplate,value);
		}

		virtual public bool ExistPickListTemplates
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PickListTemplate);
			}
		}

		virtual public void RemovePickListTemplates()
		{
			Strategy.RemoveCompositeRoles(Meta.PickListTemplate);
		}


		virtual public GeneralLedgerAccount SalesPaymentDiscountDifferencesAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.SalesPaymentDiscountDifferencesAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesPaymentDiscountDifferencesAccount ,value);
			}
		}

		virtual public bool ExistSalesPaymentDiscountDifferencesAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesPaymentDiscountDifferencesAccount);
			}
		}

		virtual public void RemoveSalesPaymentDiscountDifferencesAccount()
		{
			Strategy.RemoveCompositeRole(Meta.SalesPaymentDiscountDifferencesAccount);
		}


		virtual public global::Allors.Extent<AccountingTransactionNumber> AccountingTransactionNumbers
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.AccountingTransactionNumber);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.AccountingTransactionNumber, value);
			}
		}

		virtual public void AddAccountingTransactionNumber (AccountingTransactionNumber value)
		{
			Strategy.AddCompositeRole(Meta.AccountingTransactionNumber, value);
		}

		virtual public void RemoveAccountingTransactionNumber (AccountingTransactionNumber value)
		{
			Strategy.RemoveCompositeRole(Meta.AccountingTransactionNumber,value);
		}

		virtual public bool ExistAccountingTransactionNumbers
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.AccountingTransactionNumber);
			}
		}

		virtual public void RemoveAccountingTransactionNumbers()
		{
			Strategy.RemoveCompositeRoles(Meta.AccountingTransactionNumber);
		}


		virtual public global::Allors.Extent<StringTemplate> QuoteTemplates
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.QuoteTemplate);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.QuoteTemplate, value);
			}
		}

		virtual public void AddQuoteTemplate (StringTemplate value)
		{
			Strategy.AddCompositeRole(Meta.QuoteTemplate, value);
		}

		virtual public void RemoveQuoteTemplate (StringTemplate value)
		{
			Strategy.RemoveCompositeRole(Meta.QuoteTemplate,value);
		}

		virtual public bool ExistQuoteTemplates
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.QuoteTemplate);
			}
		}

		virtual public void RemoveQuoteTemplates()
		{
			Strategy.RemoveCompositeRoles(Meta.QuoteTemplate);
		}



		virtual public global::System.String TransactionReferenceNumberPrefix 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.TransactionReferenceNumberPrefix);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TransactionReferenceNumberPrefix, value);
			}
		}

		virtual public bool ExistTransactionReferenceNumberPrefix{
			get
			{
				return Strategy.ExistUnitRole(Meta.TransactionReferenceNumberPrefix);
			}
		}

		virtual public void RemoveTransactionReferenceNumberPrefix()
		{
			Strategy.RemoveUnitRole(Meta.TransactionReferenceNumberPrefix);
		}


		virtual public Currency PreviousCurrency
		{ 
			get
			{
				return (Currency) Strategy.GetCompositeRole(Meta.PreviousCurrency);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousCurrency ,value);
			}
		}

		virtual public bool ExistPreviousCurrency
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousCurrency);
			}
		}

		virtual public void RemovePreviousCurrency()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousCurrency);
		}


		virtual public GeneralLedgerAccount PurchasePaymentDifferencesAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.PurchasePaymentDifferencesAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PurchasePaymentDifferencesAccount ,value);
			}
		}

		virtual public bool ExistPurchasePaymentDifferencesAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PurchasePaymentDifferencesAccount);
			}
		}

		virtual public void RemovePurchasePaymentDifferencesAccount()
		{
			Strategy.RemoveCompositeRole(Meta.PurchasePaymentDifferencesAccount);
		}


		virtual public GeneralLedgerAccount SuspenceAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.SuspenceAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SuspenceAccount ,value);
			}
		}

		virtual public bool ExistSuspenceAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SuspenceAccount);
			}
		}

		virtual public void RemoveSuspenceAccount()
		{
			Strategy.RemoveCompositeRole(Meta.SuspenceAccount);
		}


		virtual public GeneralLedgerAccount NetIncomeAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.NetIncomeAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.NetIncomeAccount ,value);
			}
		}

		virtual public bool ExistNetIncomeAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.NetIncomeAccount);
			}
		}

		virtual public void RemoveNetIncomeAccount()
		{
			Strategy.RemoveCompositeRole(Meta.NetIncomeAccount);
		}



		virtual public global::System.Boolean DoAccounting 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.DoAccounting);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DoAccounting, value);
			}
		}

		virtual public bool ExistDoAccounting{
			get
			{
				return Strategy.ExistUnitRole(Meta.DoAccounting);
			}
		}

		virtual public void RemoveDoAccounting()
		{
			Strategy.RemoveUnitRole(Meta.DoAccounting);
		}


		virtual public Facility DefaultFacility
		{ 
			get
			{
				return (Facility) Strategy.GetCompositeRole(Meta.DefaultFacility);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DefaultFacility ,value);
			}
		}

		virtual public bool ExistDefaultFacility
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DefaultFacility);
			}
		}

		virtual public void RemoveDefaultFacility()
		{
			Strategy.RemoveCompositeRole(Meta.DefaultFacility);
		}


		virtual public GeneralLedgerAccount PurchasePaymentDiscountDifferencesAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.PurchasePaymentDiscountDifferencesAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PurchasePaymentDiscountDifferencesAccount ,value);
			}
		}

		virtual public bool ExistPurchasePaymentDiscountDifferencesAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PurchasePaymentDiscountDifferencesAccount);
			}
		}

		virtual public void RemovePurchasePaymentDiscountDifferencesAccount()
		{
			Strategy.RemoveCompositeRole(Meta.PurchasePaymentDiscountDifferencesAccount);
		}


		virtual public global::Allors.Extent<Party> Suppliers
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Supplier);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Supplier, value);
			}
		}

		virtual public void AddSupplier (Party value)
		{
			Strategy.AddCompositeRole(Meta.Supplier, value);
		}

		virtual public void RemoveSupplier (Party value)
		{
			Strategy.RemoveCompositeRole(Meta.Supplier,value);
		}

		virtual public bool ExistSuppliers
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Supplier);
			}
		}

		virtual public void RemoveSuppliers()
		{
			Strategy.RemoveCompositeRoles(Meta.Supplier);
		}



		virtual public global::System.Int64 NextAccountingTransactionNumber 
		{
			get
			{
				return (global::System.Int64) Strategy.GetUnitRole(Meta.NextAccountingTransactionNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.NextAccountingTransactionNumber, value);
			}
		}

		virtual public bool ExistNextAccountingTransactionNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.NextAccountingTransactionNumber);
			}
		}

		virtual public void RemoveNextAccountingTransactionNumber()
		{
			Strategy.RemoveUnitRole(Meta.NextAccountingTransactionNumber);
		}



		virtual public global::System.String QuoteNumberPrefix 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.QuoteNumberPrefix);
			}
			set
			{
				Strategy.SetUnitRole(Meta.QuoteNumberPrefix, value);
			}
		}

		virtual public bool ExistQuoteNumberPrefix{
			get
			{
				return Strategy.ExistUnitRole(Meta.QuoteNumberPrefix);
			}
		}

		virtual public void RemoveQuoteNumberPrefix()
		{
			Strategy.RemoveUnitRole(Meta.QuoteNumberPrefix);
		}



		virtual public global::System.String PurchaseTransactionReferenceNumberPrefix 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PurchaseTransactionReferenceNumberPrefix);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PurchaseTransactionReferenceNumberPrefix, value);
			}
		}

		virtual public bool ExistPurchaseTransactionReferenceNumberPrefix{
			get
			{
				return Strategy.ExistUnitRole(Meta.PurchaseTransactionReferenceNumberPrefix);
			}
		}

		virtual public void RemovePurchaseTransactionReferenceNumberPrefix()
		{
			Strategy.RemoveUnitRole(Meta.PurchaseTransactionReferenceNumberPrefix);
		}



		virtual public global::System.String TaxNumber 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.TaxNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TaxNumber, value);
			}
		}

		virtual public bool ExistTaxNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.TaxNumber);
			}
		}

		virtual public void RemoveTaxNumber()
		{
			Strategy.RemoveUnitRole(Meta.TaxNumber);
		}


		virtual public GeneralLedgerAccount CalculationDifferencesAccount
		{ 
			get
			{
				return (GeneralLedgerAccount) Strategy.GetCompositeRole(Meta.CalculationDifferencesAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CalculationDifferencesAccount ,value);
			}
		}

		virtual public bool ExistCalculationDifferencesAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CalculationDifferencesAccount);
			}
		}

		virtual public void RemoveCalculationDifferencesAccount()
		{
			Strategy.RemoveCompositeRole(Meta.CalculationDifferencesAccount);
		}


		virtual public global::Allors.Extent<PaymentMethod> PaymentMethods
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PaymentMethod);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PaymentMethod, value);
			}
		}

		virtual public void AddPaymentMethod (PaymentMethod value)
		{
			Strategy.AddCompositeRole(Meta.PaymentMethod, value);
		}

		virtual public void RemovePaymentMethod (PaymentMethod value)
		{
			Strategy.RemoveCompositeRole(Meta.PaymentMethod,value);
		}

		virtual public bool ExistPaymentMethods
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PaymentMethod);
			}
		}

		virtual public void RemovePaymentMethods()
		{
			Strategy.RemoveCompositeRoles(Meta.PaymentMethod);
		}



		virtual public global::System.String IncomingShipmentNumberPrefix 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.IncomingShipmentNumberPrefix);
			}
			set
			{
				Strategy.SetUnitRole(Meta.IncomingShipmentNumberPrefix, value);
			}
		}

		virtual public bool ExistIncomingShipmentNumberPrefix{
			get
			{
				return Strategy.ExistUnitRole(Meta.IncomingShipmentNumberPrefix);
			}
		}

		virtual public void RemoveIncomingShipmentNumberPrefix()
		{
			Strategy.RemoveUnitRole(Meta.IncomingShipmentNumberPrefix);
		}



		virtual public global::System.Decimal YTDRevenue 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.YTDRevenue);
			}
			set
			{
				Strategy.SetUnitRole(Meta.YTDRevenue, value);
			}
		}

		virtual public bool ExistYTDRevenue{
			get
			{
				return Strategy.ExistUnitRole(Meta.YTDRevenue);
			}
		}

		virtual public void RemoveYTDRevenue()
		{
			Strategy.RemoveUnitRole(Meta.YTDRevenue);
		}



		virtual public global::System.Decimal LastYearsRevenue 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.LastYearsRevenue);
			}
			set
			{
				Strategy.SetUnitRole(Meta.LastYearsRevenue, value);
			}
		}

		virtual public bool ExistLastYearsRevenue{
			get
			{
				return Strategy.ExistUnitRole(Meta.LastYearsRevenue);
			}
		}

		virtual public void RemoveLastYearsRevenue()
		{
			Strategy.RemoveUnitRole(Meta.LastYearsRevenue);
		}


		virtual public TelecommunicationsNumber BillingInquiriesFax
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.BillingInquiriesFax);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillingInquiriesFax ,value);
			}
		}

		virtual public bool ExistBillingInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillingInquiriesFax);
			}
		}

		virtual public void RemoveBillingInquiriesFax()
		{
			Strategy.RemoveCompositeRole(Meta.BillingInquiriesFax);
		}


		virtual public global::Allors.Extent<Qualification> Qualifications
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Qualification);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Qualification, value);
			}
		}

		virtual public void AddQualification (Qualification value)
		{
			Strategy.AddCompositeRole(Meta.Qualification, value);
		}

		virtual public void RemoveQualification (Qualification value)
		{
			Strategy.RemoveCompositeRole(Meta.Qualification,value);
		}

		virtual public bool ExistQualifications
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Qualification);
			}
		}

		virtual public void RemoveQualifications()
		{
			Strategy.RemoveCompositeRoles(Meta.Qualification);
		}


		virtual public ContactMechanism HomeAddress
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.HomeAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.HomeAddress ,value);
			}
		}

		virtual public bool ExistHomeAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.HomeAddress);
			}
		}

		virtual public void RemoveHomeAddress()
		{
			Strategy.RemoveCompositeRole(Meta.HomeAddress);
		}


		virtual public ContactMechanism SalesOffice
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.SalesOffice);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesOffice ,value);
			}
		}

		virtual public bool ExistSalesOffice
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesOffice);
			}
		}

		virtual public void RemoveSalesOffice()
		{
			Strategy.RemoveCompositeRole(Meta.SalesOffice);
		}


		virtual public TelecommunicationsNumber OrderInquiriesFax
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.OrderInquiriesFax);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderInquiriesFax ,value);
			}
		}

		virtual public bool ExistOrderInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderInquiriesFax);
			}
		}

		virtual public void RemoveOrderInquiriesFax()
		{
			Strategy.RemoveCompositeRole(Meta.OrderInquiriesFax);
		}


		virtual public global::Allors.Extent<Person> CurrentSalesReps
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.CurrentSalesRep);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.CurrentSalesRep, value);
			}
		}

		virtual public void AddCurrentSalesRep (Person value)
		{
			Strategy.AddCompositeRole(Meta.CurrentSalesRep, value);
		}

		virtual public void RemoveCurrentSalesRep (Person value)
		{
			Strategy.RemoveCompositeRole(Meta.CurrentSalesRep,value);
		}

		virtual public bool ExistCurrentSalesReps
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.CurrentSalesRep);
			}
		}

		virtual public void RemoveCurrentSalesReps()
		{
			Strategy.RemoveCompositeRoles(Meta.CurrentSalesRep);
		}


		virtual public global::Allors.Extent<PartyContactMechanism> PartyContactMechanisms
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PartyContactMechanism);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PartyContactMechanism, value);
			}
		}

		virtual public void AddPartyContactMechanism (PartyContactMechanism value)
		{
			Strategy.AddCompositeRole(Meta.PartyContactMechanism, value);
		}

		virtual public void RemovePartyContactMechanism (PartyContactMechanism value)
		{
			Strategy.RemoveCompositeRole(Meta.PartyContactMechanism,value);
		}

		virtual public bool ExistPartyContactMechanisms
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PartyContactMechanism);
			}
		}

		virtual public void RemovePartyContactMechanisms()
		{
			Strategy.RemoveCompositeRoles(Meta.PartyContactMechanism);
		}


		virtual public TelecommunicationsNumber ShippingInquiriesFax
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.ShippingInquiriesFax);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingInquiriesFax ,value);
			}
		}

		virtual public bool ExistShippingInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingInquiriesFax);
			}
		}

		virtual public void RemoveShippingInquiriesFax()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingInquiriesFax);
		}


		virtual public TelecommunicationsNumber ShippingInquiriesPhone
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.ShippingInquiriesPhone);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingInquiriesPhone ,value);
			}
		}

		virtual public bool ExistShippingInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingInquiriesPhone);
			}
		}

		virtual public void RemoveShippingInquiriesPhone()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingInquiriesPhone);
		}


		virtual public global::Allors.Extent<BillingAccount> BillingAccounts
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BillingAccount);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BillingAccount, value);
			}
		}

		virtual public void AddBillingAccount (BillingAccount value)
		{
			Strategy.AddCompositeRole(Meta.BillingAccount, value);
		}

		virtual public void RemoveBillingAccount (BillingAccount value)
		{
			Strategy.RemoveCompositeRole(Meta.BillingAccount,value);
		}

		virtual public bool ExistBillingAccounts
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BillingAccount);
			}
		}

		virtual public void RemoveBillingAccounts()
		{
			Strategy.RemoveCompositeRoles(Meta.BillingAccount);
		}


		virtual public TelecommunicationsNumber OrderInquiriesPhone
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.OrderInquiriesPhone);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderInquiriesPhone ,value);
			}
		}

		virtual public bool ExistOrderInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderInquiriesPhone);
			}
		}

		virtual public void RemoveOrderInquiriesPhone()
		{
			Strategy.RemoveCompositeRole(Meta.OrderInquiriesPhone);
		}


		virtual public global::Allors.Extent<PartySkill> PartySkills
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PartySkill);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PartySkill, value);
			}
		}

		virtual public void AddPartySkill (PartySkill value)
		{
			Strategy.AddCompositeRole(Meta.PartySkill, value);
		}

		virtual public void RemovePartySkill (PartySkill value)
		{
			Strategy.RemoveCompositeRole(Meta.PartySkill,value);
		}

		virtual public bool ExistPartySkills
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PartySkill);
			}
		}

		virtual public void RemovePartySkills()
		{
			Strategy.RemoveCompositeRoles(Meta.PartySkill);
		}


		virtual public global::Allors.Extent<PartyClassification> PartyClassifications
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PartyClassification);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PartyClassification, value);
			}
		}

		virtual public void AddPartyClassification (PartyClassification value)
		{
			Strategy.AddCompositeRole(Meta.PartyClassification, value);
		}

		virtual public void RemovePartyClassification (PartyClassification value)
		{
			Strategy.RemoveCompositeRole(Meta.PartyClassification,value);
		}

		virtual public bool ExistPartyClassifications
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PartyClassification);
			}
		}

		virtual public void RemovePartyClassifications()
		{
			Strategy.RemoveCompositeRoles(Meta.PartyClassification);
		}



		virtual public global::System.Boolean ExcludeFromDunning 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.ExcludeFromDunning);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ExcludeFromDunning, value);
			}
		}

		virtual public bool ExistExcludeFromDunning{
			get
			{
				return Strategy.ExistUnitRole(Meta.ExcludeFromDunning);
			}
		}

		virtual public void RemoveExcludeFromDunning()
		{
			Strategy.RemoveUnitRole(Meta.ExcludeFromDunning);
		}


		virtual public global::Allors.Extent<BankAccount> BankAccounts
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BankAccount);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BankAccount, value);
			}
		}

		virtual public void AddBankAccount (BankAccount value)
		{
			Strategy.AddCompositeRole(Meta.BankAccount, value);
		}

		virtual public void RemoveBankAccount (BankAccount value)
		{
			Strategy.RemoveCompositeRole(Meta.BankAccount,value);
		}

		virtual public bool ExistBankAccounts
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BankAccount);
			}
		}

		virtual public void RemoveBankAccounts()
		{
			Strategy.RemoveCompositeRoles(Meta.BankAccount);
		}


		virtual public ContactMechanism BillingAddress
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.BillingAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillingAddress ,value);
			}
		}

		virtual public bool ExistBillingAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillingAddress);
			}
		}

		virtual public void RemoveBillingAddress()
		{
			Strategy.RemoveCompositeRole(Meta.BillingAddress);
		}


		virtual public ShipmentMethod DefaultShipmentMethod
		{ 
			get
			{
				return (ShipmentMethod) Strategy.GetCompositeRole(Meta.DefaultShipmentMethod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DefaultShipmentMethod ,value);
			}
		}

		virtual public bool ExistDefaultShipmentMethod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DefaultShipmentMethod);
			}
		}

		virtual public void RemoveDefaultShipmentMethod()
		{
			Strategy.RemoveCompositeRole(Meta.DefaultShipmentMethod);
		}


		virtual public global::Allors.Extent<Resume> Resumes
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Resume);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Resume, value);
			}
		}

		virtual public void AddResume (Resume value)
		{
			Strategy.AddCompositeRole(Meta.Resume, value);
		}

		virtual public void RemoveResume (Resume value)
		{
			Strategy.RemoveCompositeRole(Meta.Resume,value);
		}

		virtual public bool ExistResumes
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Resume);
			}
		}

		virtual public void RemoveResumes()
		{
			Strategy.RemoveCompositeRoles(Meta.Resume);
		}


		virtual public ContactMechanism HeadQuarter
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.HeadQuarter);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.HeadQuarter ,value);
			}
		}

		virtual public bool ExistHeadQuarter
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.HeadQuarter);
			}
		}

		virtual public void RemoveHeadQuarter()
		{
			Strategy.RemoveCompositeRole(Meta.HeadQuarter);
		}


		virtual public ElectronicAddress PersonalEmailAddress
		{ 
			get
			{
				return (ElectronicAddress) Strategy.GetCompositeRole(Meta.PersonalEmailAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PersonalEmailAddress ,value);
			}
		}

		virtual public bool ExistPersonalEmailAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PersonalEmailAddress);
			}
		}

		virtual public void RemovePersonalEmailAddress()
		{
			Strategy.RemoveCompositeRole(Meta.PersonalEmailAddress);
		}


		virtual public TelecommunicationsNumber CellPhoneNumber
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.CellPhoneNumber);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CellPhoneNumber ,value);
			}
		}

		virtual public bool ExistCellPhoneNumber
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CellPhoneNumber);
			}
		}

		virtual public void RemoveCellPhoneNumber()
		{
			Strategy.RemoveCompositeRole(Meta.CellPhoneNumber);
		}


		virtual public TelecommunicationsNumber BillingInquiriesPhone
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.BillingInquiriesPhone);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillingInquiriesPhone ,value);
			}
		}

		virtual public bool ExistBillingInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillingInquiriesPhone);
			}
		}

		virtual public void RemoveBillingInquiriesPhone()
		{
			Strategy.RemoveCompositeRole(Meta.BillingInquiriesPhone);
		}



		virtual public global::System.String PartyName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PartyName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PartyName, value);
			}
		}

		virtual public bool ExistPartyName{
			get
			{
				return Strategy.ExistUnitRole(Meta.PartyName);
			}
		}

		virtual public void RemovePartyName()
		{
			Strategy.RemoveUnitRole(Meta.PartyName);
		}


		virtual public ContactMechanism OrderAddress
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.OrderAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderAddress ,value);
			}
		}

		virtual public bool ExistOrderAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderAddress);
			}
		}

		virtual public void RemoveOrderAddress()
		{
			Strategy.RemoveCompositeRole(Meta.OrderAddress);
		}


		virtual public ElectronicAddress InternetAddress
		{ 
			get
			{
				return (ElectronicAddress) Strategy.GetCompositeRole(Meta.InternetAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.InternetAddress ,value);
			}
		}

		virtual public bool ExistInternetAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.InternetAddress);
			}
		}

		virtual public void RemoveInternetAddress()
		{
			Strategy.RemoveCompositeRole(Meta.InternetAddress);
		}


		virtual public global::Allors.Extent<Media> Contents
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Content);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Content, value);
			}
		}

		virtual public void AddContent (Media value)
		{
			Strategy.AddCompositeRole(Meta.Content, value);
		}

		virtual public void RemoveContent (Media value)
		{
			Strategy.RemoveCompositeRole(Meta.Content,value);
		}

		virtual public bool ExistContents
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Content);
			}
		}

		virtual public void RemoveContents()
		{
			Strategy.RemoveCompositeRoles(Meta.Content);
		}


		virtual public global::Allors.Extent<CreditCard> CreditCards
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.CreditCard);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.CreditCard, value);
			}
		}

		virtual public void AddCreditCard (CreditCard value)
		{
			Strategy.AddCompositeRole(Meta.CreditCard, value);
		}

		virtual public void RemoveCreditCard (CreditCard value)
		{
			Strategy.RemoveCompositeRole(Meta.CreditCard,value);
		}

		virtual public bool ExistCreditCards
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.CreditCard);
			}
		}

		virtual public void RemoveCreditCards()
		{
			Strategy.RemoveCompositeRoles(Meta.CreditCard);
		}


		virtual public PostalAddress ShippingAddress
		{ 
			get
			{
				return (PostalAddress) Strategy.GetCompositeRole(Meta.ShippingAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingAddress ,value);
			}
		}

		virtual public bool ExistShippingAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingAddress);
			}
		}

		virtual public void RemoveShippingAddress()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingAddress);
		}



		virtual public global::System.Decimal OpenOrderAmount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.OpenOrderAmount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.OpenOrderAmount, value);
			}
		}

		virtual public bool ExistOpenOrderAmount{
			get
			{
				return Strategy.ExistUnitRole(Meta.OpenOrderAmount);
			}
		}

		virtual public void RemoveOpenOrderAmount()
		{
			Strategy.RemoveUnitRole(Meta.OpenOrderAmount);
		}


		virtual public TelecommunicationsNumber GeneralFaxNumber
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.GeneralFaxNumber);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.GeneralFaxNumber ,value);
			}
		}

		virtual public bool ExistGeneralFaxNumber
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.GeneralFaxNumber);
			}
		}

		virtual public void RemoveGeneralFaxNumber()
		{
			Strategy.RemoveCompositeRole(Meta.GeneralFaxNumber);
		}


		virtual public PaymentMethod DefaultPaymentMethod
		{ 
			get
			{
				return (PaymentMethod) Strategy.GetCompositeRole(Meta.DefaultPaymentMethod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DefaultPaymentMethod ,value);
			}
		}

		virtual public bool ExistDefaultPaymentMethod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DefaultPaymentMethod);
			}
		}

		virtual public void RemoveDefaultPaymentMethod()
		{
			Strategy.RemoveCompositeRole(Meta.DefaultPaymentMethod);
		}


		virtual public TelecommunicationsNumber GeneralPhoneNumber
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.GeneralPhoneNumber);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.GeneralPhoneNumber ,value);
			}
		}

		virtual public bool ExistGeneralPhoneNumber
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.GeneralPhoneNumber);
			}
		}

		virtual public void RemoveGeneralPhoneNumber()
		{
			Strategy.RemoveCompositeRole(Meta.GeneralPhoneNumber);
		}


		virtual public Currency PreferredCurrency
		{ 
			get
			{
				return (Currency) Strategy.GetCompositeRole(Meta.PreferredCurrency);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreferredCurrency ,value);
			}
		}

		virtual public bool ExistPreferredCurrency
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreferredCurrency);
			}
		}

		virtual public void RemovePreferredCurrency()
		{
			Strategy.RemoveCompositeRole(Meta.PreferredCurrency);
		}


		virtual public VatRegime VatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.VatRegime);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.VatRegime ,value);
			}
		}

		virtual public bool ExistVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.VatRegime);
			}
		}

		virtual public void RemoveVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.VatRegime);
		}


		virtual public Locale Locale
		{ 
			get
			{
				return (Locale) Strategy.GetCompositeRole(Meta.Locale);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Locale ,value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			Strategy.RemoveCompositeRole(Meta.Locale);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public SecurityToken OwnerSecurityToken
		{ 
			get
			{
				return (SecurityToken) Strategy.GetCompositeRole(Meta.OwnerSecurityToken);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OwnerSecurityToken ,value);
			}
		}

		virtual public bool ExistOwnerSecurityToken
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OwnerSecurityToken);
			}
		}

		virtual public void RemoveOwnerSecurityToken()
		{
			Strategy.RemoveCompositeRole(Meta.OwnerSecurityToken);
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::Allors.Extent<SalesRepPartyProductCategoryRevenue> SalesRepPartyProductCategoryRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesRepPartyProductCategoryRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PartyProductCategoryRevenueHistory> PartyProductCategoryRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductCategoryRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyProductCategoryRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductCategoryRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereShipToBuyer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereShipToBuyer);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereShipToBuyer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereShipToBuyer);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereBillToPurchaser
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereBillToPurchaser);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereBillToPurchaser
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereBillToPurchaser);
			}
		}


		virtual public global::Allors.Extent<PartyRevenueHistory> PartyRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<ShippingAndHandlingComponent> ShippingAndHandlingComponentsWhereSpecifiedFor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShippingAndHandlingComponentsWhereSpecifiedFor);
			}
		}

		virtual public bool ExistShippingAndHandlingComponentsWhereSpecifiedFor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShippingAndHandlingComponentsWhereSpecifiedFor);
			}
		}


		virtual public InternalOrganisationAccountingPreference InternalOrganisationAccountingPreferenceWhereInternalOrganisation
		{ 
			get
			{
				return (InternalOrganisationAccountingPreference) Strategy.GetCompositeAssociation(Meta.InternalOrganisationAccountingPreferenceWhereInternalOrganisation);
			}
		} 

		virtual public bool ExistInternalOrganisationAccountingPreferenceWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.InternalOrganisationAccountingPreferenceWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<StoreRevenue> StoreRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.StoreRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistStoreRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.StoreRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<ProductCategoryRevenueHistory> ProductCategoryRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProductCategoryRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistProductCategoryRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProductCategoryRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesRepRevenueHistory> SalesRepRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesRepRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SupplierRelationship> SupplierRelationshipsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SupplierRelationshipsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSupplierRelationshipsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SupplierRelationshipsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<ProductRevenueHistory> ProductRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProductRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistProductRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProductRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesChannelRevenue> SalesChannelRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesChannelRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesChannelRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesChannelRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesChannelRevenueHistory> SalesChannelRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesChannelRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesChannelRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesChannelRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PartyProductRevenue> PartyProductRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyProductRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<CustomerRelationship> CustomerRelationshipsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CustomerRelationshipsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistCustomerRelationshipsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CustomerRelationshipsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PartyProductCategoryRevenue> PartyProductCategoryRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductCategoryRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyProductCategoryRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductCategoryRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Product> ProductsWhereSoldBy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProductsWhereSoldBy);
			}
		}

		virtual public bool ExistProductsWhereSoldBy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProductsWhereSoldBy);
			}
		}


		virtual public global::Allors.Extent<OrganisationGlAccount> OrganisationGlAccountsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrganisationGlAccountsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistOrganisationGlAccountsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrganisationGlAccountsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<InternalAccountingTransaction> InternalAccountingTransactionsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalAccountingTransactionsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistInternalAccountingTransactionsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalAccountingTransactionsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBilledFromInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBilledFromInternalOrganisation);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBilledFromInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBilledFromInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<StoreRevenueHistory> StoreRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.StoreRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistStoreRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.StoreRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisationRevenueHistory> InternalOrganisationRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistInternalOrganisationRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Employment> EmploymentsWhereEmployer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EmploymentsWhereEmployer);
			}
		}

		virtual public bool ExistEmploymentsWhereEmployer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EmploymentsWhereEmployer);
			}
		}


		virtual public global::Allors.Extent<SalesRepRelationship> SalesRepRelationshipsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRelationshipsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesRepRelationshipsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRelationshipsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<ProductCategoryRevenue> ProductCategoryRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProductCategoryRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistProductCategoryRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProductCategoryRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PartyRevenue> PartyRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereTakenByInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereTakenByInternalOrganisation);
			}
		}

		virtual public bool ExistSalesOrdersWhereTakenByInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereTakenByInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesRepRevenue> SalesRepRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesRepRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereTakenViaInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereTakenViaInternalOrganisation);
			}
		}

		virtual public bool ExistEngagementsWhereTakenViaInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereTakenViaInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Part> PartsWhereOwnedByParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartsWhereOwnedByParty);
			}
		}

		virtual public bool ExistPartsWhereOwnedByParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartsWhereOwnedByParty);
			}
		}


		virtual public global::Allors.Extent<SalesRepPartyRevenue> SalesRepPartyRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesRepPartyRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PurchaseInvoice> PurchaseInvoicesWhereBilledToInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseInvoicesWhereBilledToInternalOrganisation);
			}
		}

		virtual public bool ExistPurchaseInvoicesWhereBilledToInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseInvoicesWhereBilledToInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PartyPackageRevenueHistory> PartyPackageRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyPackageRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyPackageRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyPackageRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PackageRevenue> PackageRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PackageRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPackageRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PackageRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<InternalOrganisationRevenue> InternalOrganisationRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InternalOrganisationRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistInternalOrganisationRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InternalOrganisationRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PartyPackageRevenue> PartyPackageRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyPackageRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyPackageRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyPackageRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillFromInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillFromInternalOrganisation);
			}
		}

		virtual public bool ExistShipmentsWhereBillFromInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillFromInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PackageRevenueHistory> PackageRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PackageRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPackageRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PackageRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<ProductRevenue> ProductRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProductRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistProductRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProductRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<ClientRelationship> ClientRelationshipsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ClientRelationshipsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistClientRelationshipsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ClientRelationshipsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Partnership> PartnershipsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartnershipsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartnershipsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartnershipsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesRepCommission> SalesRepCommissionsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepCommissionsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesRepCommissionsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepCommissionsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Facility> FacilitiesWhereOwner
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FacilitiesWhereOwner);
			}
		}

		virtual public bool ExistFacilitiesWhereOwner
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FacilitiesWhereOwner);
			}
		}


		virtual public global::Allors.Extent<Journal> JournalsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.JournalsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistJournalsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.JournalsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Store> StoresWhereOwner
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.StoresWhereOwner);
			}
		}

		virtual public bool ExistStoresWhereOwner
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.StoresWhereOwner);
			}
		}


		virtual public global::Allors.Extent<DistributionChannelRelationship> DistributionChannelRelationshipsWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.DistributionChannelRelationshipsWhereInternalOrganisation);
			}
		}

		virtual public bool ExistDistributionChannelRelationshipsWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.DistributionChannelRelationshipsWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<SalesRepProductCategoryRevenue> SalesRepProductCategoryRevenuesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepProductCategoryRevenuesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistSalesRepProductCategoryRevenuesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepProductCategoryRevenuesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<PartyProductRevenueHistory> PartyProductRevenueHistoriesWhereInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductRevenueHistoriesWhereInternalOrganisation);
			}
		}

		virtual public bool ExistPartyProductRevenueHistoriesWhereInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductRevenueHistoriesWhereInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<Singleton> SingletonsWhereDefaultInternalOrganisation
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SingletonsWhereDefaultInternalOrganisation);
			}
		}

		virtual public bool ExistSingletonsWhereDefaultInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SingletonsWhereDefaultInternalOrganisation);
			}
		}


		virtual public global::Allors.Extent<QuoteItem> QuoteItemsWhereAuthorizer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuoteItemsWhereAuthorizer);
			}
		}

		virtual public bool ExistQuoteItemsWhereAuthorizer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuoteItemsWhereAuthorizer);
			}
		}


		virtual public global::Allors.Extent<SalesRepPartyProductCategoryRevenue> SalesRepPartyProductCategoryRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereParty);
			}
		}

		virtual public bool ExistSalesRepPartyProductCategoryRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<PartyProductCategoryRevenueHistory> PartyProductCategoryRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductCategoryRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyProductCategoryRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductCategoryRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<LetterCorrespondence> LetterCorrespondencesWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.LetterCorrespondencesWhereOriginator);
			}
		}

		virtual public bool ExistLetterCorrespondencesWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.LetterCorrespondencesWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<LetterCorrespondence> LetterCorrespondencesWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.LetterCorrespondencesWhereReceiver);
			}
		}

		virtual public bool ExistLetterCorrespondencesWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.LetterCorrespondencesWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWherePreviousTakenViaSupplier
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWherePreviousTakenViaSupplier);
			}
		}

		virtual public bool ExistPurchaseOrdersWherePreviousTakenViaSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWherePreviousTakenViaSupplier);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereTakenViaSupplier
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaSupplier);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereTakenViaSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaSupplier);
			}
		}


		virtual public global::Allors.Extent<Quote> QuotesWhereIssuer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuotesWhereIssuer);
			}
		}

		virtual public bool ExistQuotesWhereIssuer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuotesWhereIssuer);
			}
		}


		virtual public global::Allors.Extent<Quote> QuotesWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuotesWhereReceiver);
			}
		}

		virtual public bool ExistQuotesWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuotesWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<SupplierOffering> SupplierOfferingsWhereSupplier
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SupplierOfferingsWhereSupplier);
			}
		}

		virtual public bool ExistSupplierOfferingsWhereSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SupplierOfferingsWhereSupplier);
			}
		}


		virtual public global::Allors.Extent<WorkEffortPartyAssignment> WorkEffortPartyAssignmentsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WorkEffortPartyAssignmentsWhereParty);
			}
		}

		virtual public bool ExistWorkEffortPartyAssignmentsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WorkEffortPartyAssignmentsWhereParty);
			}
		}


		virtual public global::Allors.Extent<PartyRevenueHistory> PartyRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<FaxCommunication> FaxCommunicationsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FaxCommunicationsWhereOriginator);
			}
		}

		virtual public bool ExistFaxCommunicationsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FaxCommunicationsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<FaxCommunication> FaxCommunicationsWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FaxCommunicationsWhereReceiver);
			}
		}

		virtual public bool ExistFaxCommunicationsWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FaxCommunicationsWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<PickList> PickListsWhereShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PickListsWhereShipToParty);
			}
		}

		virtual public bool ExistPickListsWhereShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PickListsWhereShipToParty);
			}
		}


		virtual public global::Allors.Extent<Request> RequestsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequestsWhereOriginator);
			}
		}

		virtual public bool ExistRequestsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequestsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<PriceComponent> PriceComponentsWhereSpecifiedFor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PriceComponentsWhereSpecifiedFor);
			}
		}

		virtual public bool ExistPriceComponentsWhereSpecifiedFor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PriceComponentsWhereSpecifiedFor);
			}
		}


		virtual public global::Allors.Extent<PartyProductRevenue> PartyProductRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyProductRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<CustomerRelationship> CustomerRelationshipsWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CustomerRelationshipsWhereCustomer);
			}
		}

		virtual public bool ExistCustomerRelationshipsWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CustomerRelationshipsWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<PartyProductCategoryRevenue> PartyProductCategoryRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductCategoryRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyProductCategoryRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductCategoryRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<PartyFixedAssetAssignment> PartyFixedAssetAssignmentsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyFixedAssetAssignmentsWhereParty);
			}
		}

		virtual public bool ExistPartyFixedAssetAssignmentsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyFixedAssetAssignmentsWhereParty);
			}
		}


		virtual public global::Allors.Extent<RespondingParty> RespondingPartiesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RespondingPartiesWhereParty);
			}
		}

		virtual public bool ExistRespondingPartiesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RespondingPartiesWhereParty);
			}
		}


		virtual public global::Allors.Extent<Product> ProductsWhereManufacturedBy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProductsWhereManufacturedBy);
			}
		}

		virtual public bool ExistProductsWhereManufacturedBy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProductsWhereManufacturedBy);
			}
		}


		virtual public global::Allors.Extent<OrganisationGlAccount> OrganisationGlAccountsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrganisationGlAccountsWhereParty);
			}
		}

		virtual public bool ExistOrganisationGlAccountsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrganisationGlAccountsWhereParty);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWherePreviousBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWherePreviousBillToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWherePreviousBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWherePreviousBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWherePreviousShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWherePreviousShipToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWherePreviousShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWherePreviousShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBillToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereShipToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWhereShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<ExternalAccountingTransaction> ExternalAccountingTransactionsWhereFromParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ExternalAccountingTransactionsWhereFromParty);
			}
		}

		virtual public bool ExistExternalAccountingTransactionsWhereFromParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ExternalAccountingTransactionsWhereFromParty);
			}
		}


		virtual public global::Allors.Extent<ExternalAccountingTransaction> ExternalAccountingTransactionsWhereToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ExternalAccountingTransactionsWhereToParty);
			}
		}

		virtual public bool ExistExternalAccountingTransactionsWhereToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ExternalAccountingTransactionsWhereToParty);
			}
		}


		virtual public global::Allors.Extent<SalesRepRelationship> SalesRepRelationshipsWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRelationshipsWhereCustomer);
			}
		}

		virtual public bool ExistSalesRepRelationshipsWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRelationshipsWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<PartyRevenue> PartyRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereShipToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWhereShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePreviousShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePreviousShipToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWherePreviousShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePreviousShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePreviousBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePreviousBillToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWherePreviousBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePreviousBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePlacingCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePlacingCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWherePlacingCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePlacingCustomer);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereBillToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereBillToParty);
			}
		}

		virtual public bool ExistEngagementsWhereBillToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereBillToParty);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWherePlacingParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWherePlacingParty);
			}
		}

		virtual public bool ExistEngagementsWherePlacingParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWherePlacingParty);
			}
		}


		virtual public global::Allors.Extent<SalesRepPartyRevenue> SalesRepPartyRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyRevenuesWhereParty);
			}
		}

		virtual public bool ExistSalesRepPartyRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<PurchaseInvoice> PurchaseInvoicesWhereBilledFromParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseInvoicesWhereBilledFromParty);
			}
		}

		virtual public bool ExistPurchaseInvoicesWhereBilledFromParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseInvoicesWhereBilledFromParty);
			}
		}


		virtual public global::Allors.Extent<PartyPackageRevenueHistory> PartyPackageRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyPackageRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyPackageRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyPackageRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderItemsWhereShipToParty);
			}
		}

		virtual public bool ExistSalesOrderItemsWhereShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderItemsWhereShipToParty);
			}
		}


		virtual public global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereAssignedShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderItemsWhereAssignedShipToParty);
			}
		}

		virtual public bool ExistSalesOrderItemsWhereAssignedShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderItemsWhereAssignedShipToParty);
			}
		}


		virtual public global::Allors.Extent<PartyPackageRevenue> PartyPackageRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyPackageRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyPackageRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyPackageRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillToParty);
			}
		}

		virtual public bool ExistShipmentsWhereBillToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillToParty);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereShipToParty);
			}
		}

		virtual public bool ExistShipmentsWhereShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereShipToParty);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereShipFromParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereShipFromParty);
			}
		}

		virtual public bool ExistShipmentsWhereShipFromParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereShipFromParty);
			}
		}


		virtual public global::Allors.Extent<Payment> PaymentsWhereSendingParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PaymentsWhereSendingParty);
			}
		}

		virtual public bool ExistPaymentsWhereSendingParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PaymentsWhereSendingParty);
			}
		}


		virtual public global::Allors.Extent<Payment> PaymentsWhereReceivingParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PaymentsWhereReceivingParty);
			}
		}

		virtual public bool ExistPaymentsWhereReceivingParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PaymentsWhereReceivingParty);
			}
		}


		virtual public global::Allors.Extent<ClientRelationship> ClientRelationshipsWhereClient
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ClientRelationshipsWhereClient);
			}
		}

		virtual public bool ExistClientRelationshipsWhereClient
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ClientRelationshipsWhereClient);
			}
		}


		virtual public global::Allors.Extent<CommunicationEvent> CommunicationEventsWhereInvolvedParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CommunicationEventsWhereInvolvedParty);
			}
		}

		virtual public bool ExistCommunicationEventsWhereInvolvedParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CommunicationEventsWhereInvolvedParty);
			}
		}


		virtual public InternalOrganisation InternalOrganisationWhereCustomer
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeAssociation(Meta.InternalOrganisationWhereCustomer);
			}
		} 

		virtual public bool ExistInternalOrganisationWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.InternalOrganisationWhereCustomer);
			}
		}


		virtual public InternalOrganisation InternalOrganisationWhereSupplier
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeAssociation(Meta.InternalOrganisationWhereSupplier);
			}
		} 

		virtual public bool ExistInternalOrganisationWhereSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.InternalOrganisationWhereSupplier);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereAuthorizer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereAuthorizer);
			}
		}

		virtual public bool ExistRequirementsWhereAuthorizer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereAuthorizer);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereNeededFor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereNeededFor);
			}
		}

		virtual public bool ExistRequirementsWhereNeededFor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereNeededFor);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereOriginator);
			}
		}

		virtual public bool ExistRequirementsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereServicedBy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereServicedBy);
			}
		}

		virtual public bool ExistRequirementsWhereServicedBy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereServicedBy);
			}
		}


		virtual public global::Allors.Extent<SubContractorRelationship> SubContractorRelationshipsWhereContractor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SubContractorRelationshipsWhereContractor);
			}
		}

		virtual public bool ExistSubContractorRelationshipsWhereContractor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SubContractorRelationshipsWhereContractor);
			}
		}


		virtual public global::Allors.Extent<SubContractorRelationship> SubContractorRelationshipsWhereSubContractor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SubContractorRelationshipsWhereSubContractor);
			}
		}

		virtual public bool ExistSubContractorRelationshipsWhereSubContractor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SubContractorRelationshipsWhereSubContractor);
			}
		}


		virtual public global::Allors.Extent<WebSiteCommunication> WebSiteCommunicationsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WebSiteCommunicationsWhereOriginator);
			}
		}

		virtual public bool ExistWebSiteCommunicationsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WebSiteCommunicationsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<WebSiteCommunication> WebSiteCommunicationsWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WebSiteCommunicationsWhereReceiver);
			}
		}

		virtual public bool ExistWebSiteCommunicationsWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WebSiteCommunicationsWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<PartyProductRevenueHistory> PartyProductRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyProductRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<UserGroup> UserGroupsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.UserGroupsWhereParty);
			}
		}

		virtual public bool ExistUserGroupsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.UserGroupsWhereParty);
			}
		}

	}

	public class InternalOrganisationMeta
	{
		public static readonly InternalOrganisationMeta Instance = new InternalOrganisationMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.InternalOrganisation;

		public global::Allors.Meta.RoleType PurchaseOrderNumberPrefix 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchaseOrderNumberPrefix;
			}
		} 
		public global::Allors.Meta.RoleType TransactionReferenceNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationTransactionReferenceNumber;
			}
		} 
		public global::Allors.Meta.RoleType NextPurchaseInvoiceNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationNextPurchaseInvoiceNumber;
			}
		} 
		public global::Allors.Meta.RoleType NextQuoteNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationNextQuoteNumber;
			}
		} 
		public global::Allors.Meta.RoleType JournalEntryNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationJournalEntryNumber;
			}
		} 
		public global::Allors.Meta.RoleType EuListingState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationEuListingState;
			}
		} 
		public global::Allors.Meta.RoleType ActualAccountingPeriod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationActualAccountingPeriod;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceSequence 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationInvoiceSequence;
			}
		} 
		public global::Allors.Meta.RoleType ActivePaymentMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationActivePaymentMethod;
			}
		} 
		public global::Allors.Meta.RoleType PurchaseShipmentTemplate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchaseShipmentTemplate;
			}
		} 
		public global::Allors.Meta.RoleType MaximumAllowedPaymentDifference 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationMaximumAllowedPaymentDifference;
			}
		} 
		public global::Allors.Meta.RoleType LogoImage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationLogoImage;
			}
		} 
		public global::Allors.Meta.RoleType CostCenterSplitMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationCostCenterSplitMethod;
			}
		} 
		public global::Allors.Meta.RoleType LegalForm 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationLegalForm;
			}
		} 
		public global::Allors.Meta.RoleType AccountingPeriod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationAccountingPeriod;
			}
		} 
		public global::Allors.Meta.RoleType SalesPaymentDifferencesAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationSalesPaymentDifferencesAccount;
			}
		} 
		public global::Allors.Meta.RoleType Name 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationName;
			}
		} 
		public global::Allors.Meta.RoleType NextPurchaseOrderNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationNextPurchaseOrderNumber;
			}
		} 
		public global::Allors.Meta.RoleType PurchaseTransactionReferenceNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchaseTransactionReferenceNumber;
			}
		} 
		public global::Allors.Meta.RoleType FiscalYearStartMonth 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationFiscalYearStartMonth;
			}
		} 
		public global::Allors.Meta.RoleType PurchaseOrderTemplate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchaseOrderTemplate;
			}
		} 
		public global::Allors.Meta.RoleType NextIncomingShipmentNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationNextIncomingShipmentNumber;
			}
		} 
		public global::Allors.Meta.RoleType CostOfGoodsSoldMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationCostOfGoodsSoldMethod;
			}
		} 
		public global::Allors.Meta.RoleType NextSubAccountNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationNextSubAccountNumber;
			}
		} 
		public global::Allors.Meta.RoleType EmployeeRole 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationEmployeeRole;
			}
		} 
		public global::Allors.Meta.RoleType VatDeactivated 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationVatDeactivated;
			}
		} 
		public global::Allors.Meta.RoleType FiscalYearStartDay 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationFiscalYearStartDay;
			}
		} 
		public global::Allors.Meta.RoleType GeneralLedgerAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationGeneralLedgerAccount;
			}
		} 
		public global::Allors.Meta.RoleType RetainedEarningsAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationRetainedEarningsAccount;
			}
		} 
		public global::Allors.Meta.RoleType PackagingSlipTemplate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPackagingSlipTemplate;
			}
		} 
		public global::Allors.Meta.RoleType Customer 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationCustomer;
			}
		} 
		public global::Allors.Meta.RoleType PurchaseInvoiceNumberPrefix 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchaseInvoiceNumberPrefix;
			}
		} 
		public global::Allors.Meta.RoleType PickListTemplate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPickListTemplate;
			}
		} 
		public global::Allors.Meta.RoleType SalesPaymentDiscountDifferencesAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationSalesPaymentDiscountDifferencesAccount;
			}
		} 
		public global::Allors.Meta.RoleType AccountingTransactionNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationAccountingTransactionNumber;
			}
		} 
		public global::Allors.Meta.RoleType QuoteTemplate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationQuoteTemplate;
			}
		} 
		public global::Allors.Meta.RoleType TransactionReferenceNumberPrefix 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationTransactionReferenceNumberPrefix;
			}
		} 
		public global::Allors.Meta.RoleType PreviousCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPreviousCurrency;
			}
		} 
		public global::Allors.Meta.RoleType PurchasePaymentDifferencesAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchasePaymentDifferencesAccount;
			}
		} 
		public global::Allors.Meta.RoleType SuspenceAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationSuspenceAccount;
			}
		} 
		public global::Allors.Meta.RoleType NetIncomeAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationNetIncomeAccount;
			}
		} 
		public global::Allors.Meta.RoleType DoAccounting 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationDoAccounting;
			}
		} 
		public global::Allors.Meta.RoleType DefaultFacility 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationDefaultFacility;
			}
		} 
		public global::Allors.Meta.RoleType PurchasePaymentDiscountDifferencesAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchasePaymentDiscountDifferencesAccount;
			}
		} 
		public global::Allors.Meta.RoleType Supplier 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationSupplier;
			}
		} 
		public global::Allors.Meta.RoleType NextAccountingTransactionNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationNextAccountingTransactionNumber;
			}
		} 
		public global::Allors.Meta.RoleType QuoteNumberPrefix 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationQuoteNumberPrefix;
			}
		} 
		public global::Allors.Meta.RoleType PurchaseTransactionReferenceNumberPrefix 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPurchaseTransactionReferenceNumberPrefix;
			}
		} 
		public global::Allors.Meta.RoleType TaxNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationTaxNumber;
			}
		} 
		public global::Allors.Meta.RoleType CalculationDifferencesAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationCalculationDifferencesAccount;
			}
		} 
		public global::Allors.Meta.RoleType PaymentMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationPaymentMethod;
			}
		} 
		public global::Allors.Meta.RoleType IncomingShipmentNumberPrefix 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InternalOrganisationIncomingShipmentNumberPrefix;
			}
		} 
		public global::Allors.Meta.RoleType YTDRevenue 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyYTDRevenue;
			}
		} 
		public global::Allors.Meta.RoleType LastYearsRevenue 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyLastYearsRevenue;
			}
		} 
		public global::Allors.Meta.RoleType BillingInquiriesFax 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingInquiriesFax;
			}
		} 
		public global::Allors.Meta.RoleType Qualification 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyQualification;
			}
		} 
		public global::Allors.Meta.RoleType HomeAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyHomeAddress;
			}
		} 
		public global::Allors.Meta.RoleType SalesOffice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartySalesOffice;
			}
		} 
		public global::Allors.Meta.RoleType OrderInquiriesFax 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOrderInquiriesFax;
			}
		} 
		public global::Allors.Meta.RoleType CurrentSalesRep 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyCurrentSalesRep;
			}
		} 
		public global::Allors.Meta.RoleType PartyContactMechanism 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartyContactMechanism;
			}
		} 
		public global::Allors.Meta.RoleType ShippingInquiriesFax 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyShippingInquiriesFax;
			}
		} 
		public global::Allors.Meta.RoleType ShippingInquiriesPhone 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyShippingInquiriesPhone;
			}
		} 
		public global::Allors.Meta.RoleType BillingAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingAccount;
			}
		} 
		public global::Allors.Meta.RoleType OrderInquiriesPhone 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOrderInquiriesPhone;
			}
		} 
		public global::Allors.Meta.RoleType PartySkill 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartySkill;
			}
		} 
		public global::Allors.Meta.RoleType PartyClassification 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartyClassification;
			}
		} 
		public global::Allors.Meta.RoleType ExcludeFromDunning 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyExcludeFromDunning;
			}
		} 
		public global::Allors.Meta.RoleType BankAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBankAccount;
			}
		} 
		public global::Allors.Meta.RoleType BillingAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingAddress;
			}
		} 
		public global::Allors.Meta.RoleType DefaultShipmentMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyDefaultShipmentMethod;
			}
		} 
		public global::Allors.Meta.RoleType Resume 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyResume;
			}
		} 
		public global::Allors.Meta.RoleType HeadQuarter 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyHeadQuarter;
			}
		} 
		public global::Allors.Meta.RoleType PersonalEmailAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPersonalEmailAddress;
			}
		} 
		public global::Allors.Meta.RoleType CellPhoneNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyCellPhoneNumber;
			}
		} 
		public global::Allors.Meta.RoleType BillingInquiriesPhone 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingInquiriesPhone;
			}
		} 
		public global::Allors.Meta.RoleType PartyName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartyName;
			}
		} 
		public global::Allors.Meta.RoleType OrderAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOrderAddress;
			}
		} 
		public global::Allors.Meta.RoleType InternetAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyInternetAddress;
			}
		} 
		public global::Allors.Meta.RoleType Content 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyContent;
			}
		} 
		public global::Allors.Meta.RoleType CreditCard 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyCreditCard;
			}
		} 
		public global::Allors.Meta.RoleType ShippingAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyShippingAddress;
			}
		} 
		public global::Allors.Meta.RoleType OpenOrderAmount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOpenOrderAmount;
			}
		} 
		public global::Allors.Meta.RoleType GeneralFaxNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyGeneralFaxNumber;
			}
		} 
		public global::Allors.Meta.RoleType DefaultPaymentMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyDefaultPaymentMethod;
			}
		} 
		public global::Allors.Meta.RoleType GeneralPhoneNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyGeneralPhoneNumber;
			}
		} 
		public global::Allors.Meta.RoleType PreferredCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPreferredCurrency;
			}
		} 
		public global::Allors.Meta.RoleType VatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyVatRegime;
			}
		} 
		public global::Allors.Meta.RoleType Locale 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.LocalisedLocale;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType OwnerSecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SecurityTokenOwnerOwnerSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.AssociationType SalesRepPartyProductCategoryRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyProductCategoryRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductCategoryRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductCategoryRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereShipToBuyer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderShipToBuyer;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereBillToPurchaser 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderBillToPurchaser;
			}
		} 
		public global::Allors.Meta.AssociationType PartyRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ShippingAndHandlingComponentsWhereSpecifiedFor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShippingAndHandlingComponentSpecifiedFor;
			}
		} 
		public global::Allors.Meta.AssociationType InternalOrganisationAccountingPreferenceWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalOrganisationAccountingPreferenceInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType StoreRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.StoreRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ProductCategoryRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProductCategoryRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SupplierRelationshipsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SupplierRelationshipInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ProductRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProductRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesChannelRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesChannelRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesChannelRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesChannelRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType CustomerRelationshipsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CustomerRelationshipInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductCategoryRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductCategoryRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ProductsWhereSoldBy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProductSoldBy;
			}
		} 
		public global::Allors.Meta.AssociationType OrganisationGlAccountsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrganisationGlAccountInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType InternalAccountingTransactionsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalAccountingTransactionInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereBilledFromInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceBilledFromInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType StoreRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.StoreRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType InternalOrganisationRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalOrganisationRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType EmploymentsWhereEmployer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EmploymentEmployer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRelationshipsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRelationshipInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ProductCategoryRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProductCategoryRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartyRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereTakenByInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderTakenByInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWhereTakenViaInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementTakenViaInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartsWhereOwnedByParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartOwnedByParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepPartyRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseInvoicesWhereBilledToInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseInvoiceBilledToInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartyPackageRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyPackageRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PackageRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PackageRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType InternalOrganisationRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalOrganisationRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartyPackageRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyPackageRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereBillFromInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentBillFromInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PackageRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PackageRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ProductRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProductRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType ClientRelationshipsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ClientRelationshipInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartnershipsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartnershipInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepCommissionsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepCommissionInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType FacilitiesWhereOwner 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FacilityOwner;
			}
		} 
		public global::Allors.Meta.AssociationType JournalsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.JournalInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType StoresWhereOwner 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.StoreOwner;
			}
		} 
		public global::Allors.Meta.AssociationType DistributionChannelRelationshipsWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.DistributionChannelRelationshipInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepProductCategoryRevenuesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepProductCategoryRevenueInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductRevenueHistoriesWhereInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductRevenueHistoryInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType SingletonsWhereDefaultInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SingletonDefaultInternalOrganisation;
			}
		} 
		public global::Allors.Meta.AssociationType QuoteItemsWhereAuthorizer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.QuoteItemAuthorizer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepPartyProductCategoryRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyProductCategoryRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductCategoryRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductCategoryRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType LetterCorrespondencesWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.LetterCorrespondenceOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType LetterCorrespondencesWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.LetterCorrespondenceReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWherePreviousTakenViaSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderPreviousTakenViaSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereTakenViaSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderTakenViaSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType QuotesWhereIssuer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.QuoteIssuer;
			}
		} 
		public global::Allors.Meta.AssociationType QuotesWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.QuoteReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType SupplierOfferingsWhereSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SupplierOfferingSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType WorkEffortPartyAssignmentsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortPartyAssignmentParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType FaxCommunicationsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FaxCommunicationOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType FaxCommunicationsWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FaxCommunicationReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType PickListsWhereShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PickListShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType RequestsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequestOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType PriceComponentsWhereSpecifiedFor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PriceComponentSpecifiedFor;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType CustomerRelationshipsWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CustomerRelationshipCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductCategoryRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductCategoryRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyFixedAssetAssignmentsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyFixedAssetAssignmentParty;
			}
		} 
		public global::Allors.Meta.AssociationType RespondingPartiesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RespondingPartyParty;
			}
		} 
		public global::Allors.Meta.AssociationType ProductsWhereManufacturedBy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProductManufacturedBy;
			}
		} 
		public global::Allors.Meta.AssociationType OrganisationGlAccountsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrganisationGlAccountParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWherePreviousBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoicePreviousBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWherePreviousShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoicePreviousShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType ExternalAccountingTransactionsWhereFromParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ExternalAccountingTransactionFromParty;
			}
		} 
		public global::Allors.Meta.AssociationType ExternalAccountingTransactionsWhereToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ExternalAccountingTransactionToParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRelationshipsWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRelationshipCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType PartyRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePreviousShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPreviousShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePreviousBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPreviousBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePlacingCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPlacingCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWhereBillToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementBillToParty;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWherePlacingParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementPlacingParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepPartyRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseInvoicesWhereBilledFromParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseInvoiceBilledFromParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyPackageRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyPackageRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemsWhereShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemsWhereAssignedShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemAssignedShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyPackageRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyPackageRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereBillToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentBillToParty;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereShipFromParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentShipFromParty;
			}
		} 
		public global::Allors.Meta.AssociationType PaymentsWhereSendingParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PaymentSendingParty;
			}
		} 
		public global::Allors.Meta.AssociationType PaymentsWhereReceivingParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PaymentReceivingParty;
			}
		} 
		public global::Allors.Meta.AssociationType ClientRelationshipsWhereClient 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ClientRelationshipClient;
			}
		} 
		public global::Allors.Meta.AssociationType CommunicationEventsWhereInvolvedParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CommunicationEventInvolvedParty;
			}
		} 
		public global::Allors.Meta.AssociationType InternalOrganisationWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalOrganisationCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType InternalOrganisationWhereSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalOrganisationSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereAuthorizer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementAuthorizer;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereNeededFor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementNeededFor;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereServicedBy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementServicedBy;
			}
		} 
		public global::Allors.Meta.AssociationType SubContractorRelationshipsWhereContractor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SubContractorRelationshipContractor;
			}
		} 
		public global::Allors.Meta.AssociationType SubContractorRelationshipsWhereSubContractor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SubContractorRelationshipSubContractor;
			}
		} 
		public global::Allors.Meta.AssociationType WebSiteCommunicationsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WebSiteCommunicationOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType WebSiteCommunicationsWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WebSiteCommunicationReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType UserGroupsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.UserGroupParty;
			}
		} 

	}
}