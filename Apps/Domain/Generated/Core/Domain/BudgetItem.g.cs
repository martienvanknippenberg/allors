// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class BudgetItem : Allors.ObjectBase , UserInterfaceable
	{
		public static readonly BudgetItemMeta Meta = BudgetItemMeta.Instance;

		public BudgetItem(Allors.IStrategy allors) : base(allors) {}

		public static BudgetItem Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (BudgetItem) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String Purpose 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Purpose);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Purpose, value);
			}
		}

		virtual public bool ExistPurpose{
			get
			{
				return Strategy.ExistUnitRole(Meta.Purpose);
			}
		}

		virtual public void RemovePurpose()
		{
			Strategy.RemoveUnitRole(Meta.Purpose);
		}



		virtual public global::System.String Justification 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Justification);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Justification, value);
			}
		}

		virtual public bool ExistJustification{
			get
			{
				return Strategy.ExistUnitRole(Meta.Justification);
			}
		}

		virtual public void RemoveJustification()
		{
			Strategy.RemoveUnitRole(Meta.Justification);
		}


		virtual public global::Allors.Extent<BudgetItem> Children
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Child);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Child, value);
			}
		}

		virtual public void AddChild (BudgetItem value)
		{
			Strategy.AddCompositeRole(Meta.Child, value);
		}

		virtual public void RemoveChild (BudgetItem value)
		{
			Strategy.RemoveCompositeRole(Meta.Child,value);
		}

		virtual public bool ExistChildren
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Child);
			}
		}

		virtual public void RemoveChildren()
		{
			Strategy.RemoveCompositeRoles(Meta.Child);
		}



		virtual public global::System.Decimal? Amount 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.Amount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Amount, value);
			}
		}

		virtual public bool ExistAmount{
			get
			{
				return Strategy.ExistUnitRole(Meta.Amount);
			}
		}

		virtual public void RemoveAmount()
		{
			Strategy.RemoveUnitRole(Meta.Amount);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::Allors.Extent<Position> PositionsWhereApprovedBudgetItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PositionsWhereApprovedBudgetItem);
			}
		}

		virtual public bool ExistPositionsWhereApprovedBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PositionsWhereApprovedBudgetItem);
			}
		}


		virtual public global::Allors.Extent<GlBudgetAllocation> GlBudgetAllocationsWhereBudgetItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.GlBudgetAllocationsWhereBudgetItem);
			}
		}

		virtual public bool ExistGlBudgetAllocationsWhereBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.GlBudgetAllocationsWhereBudgetItem);
			}
		}


		virtual public global::Allors.Extent<PaymentBudgetAllocation> PaymentBudgetAllocationsWhereBudgetItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PaymentBudgetAllocationsWhereBudgetItem);
			}
		}

		virtual public bool ExistPaymentBudgetAllocationsWhereBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PaymentBudgetAllocationsWhereBudgetItem);
			}
		}


		virtual public global::Allors.Extent<RequirementBudgetAllocation> RequirementBudgetAllocationsWhereBudgetItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementBudgetAllocationsWhereBudgetItem);
			}
		}

		virtual public bool ExistRequirementBudgetAllocationsWhereBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementBudgetAllocationsWhereBudgetItem);
			}
		}


		virtual public BudgetItem BudgetItemWhereChild
		{ 
			get
			{
				return (BudgetItem) Strategy.GetCompositeAssociation(Meta.BudgetItemWhereChild);
			}
		} 

		virtual public bool ExistBudgetItemWhereChild
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.BudgetItemWhereChild);
			}
		}


		virtual public global::Allors.Extent<BudgetRevisionImpact> BudgetRevisionImpactsWhereBudgetItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.BudgetRevisionImpactsWhereBudgetItem);
			}
		}

		virtual public bool ExistBudgetRevisionImpactsWhereBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.BudgetRevisionImpactsWhereBudgetItem);
			}
		}


		virtual public Budget BudgetWhereBudgetItem
		{ 
			get
			{
				return (Budget) Strategy.GetCompositeAssociation(Meta.BudgetWhereBudgetItem);
			}
		} 

		virtual public bool ExistBudgetWhereBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.BudgetWhereBudgetItem);
			}
		}


		virtual public global::Allors.Extent<OrderItem> OrderItemsWhereBudgetItem
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderItemsWhereBudgetItem);
			}
		}

		virtual public bool ExistOrderItemsWhereBudgetItem
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderItemsWhereBudgetItem);
			}
		}

	}

	public class BudgetItemMeta
	{
		public static readonly BudgetItemMeta Instance = new BudgetItemMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.BudgetItem;

		public global::Allors.Meta.RoleType Purpose 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetItemPurpose;
			}
		} 
		public global::Allors.Meta.RoleType Justification 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetItemJustification;
			}
		} 
		public global::Allors.Meta.RoleType Child 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetItemChild;
			}
		} 
		public global::Allors.Meta.RoleType Amount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BudgetItemAmount;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 

		public global::Allors.Meta.AssociationType PositionsWhereApprovedBudgetItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PositionApprovedBudgetItem;
			}
		} 
		public global::Allors.Meta.AssociationType GlBudgetAllocationsWhereBudgetItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.GlBudgetAllocationBudgetItem;
			}
		} 
		public global::Allors.Meta.AssociationType PaymentBudgetAllocationsWhereBudgetItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PaymentBudgetAllocationBudgetItem;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementBudgetAllocationsWhereBudgetItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementBudgetAllocationBudgetItem;
			}
		} 
		public global::Allors.Meta.AssociationType BudgetItemWhereChild 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BudgetItemChild;
			}
		} 
		public global::Allors.Meta.AssociationType BudgetRevisionImpactsWhereBudgetItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BudgetRevisionImpactBudgetItem;
			}
		} 
		public global::Allors.Meta.AssociationType BudgetWhereBudgetItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BudgetBudgetItem;
			}
		} 
		public global::Allors.Meta.AssociationType OrderItemsWhereBudgetItem 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderItemBudgetItem;
			}
		} 

	}
}