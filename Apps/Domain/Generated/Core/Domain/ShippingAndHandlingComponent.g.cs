// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class ShippingAndHandlingComponent : Allors.ObjectBase , SearchResult, UserInterfaceable, Period, Searchable
	{
		public static readonly ShippingAndHandlingComponentMeta Meta = ShippingAndHandlingComponentMeta.Instance;

		public ShippingAndHandlingComponent(Allors.IStrategy allors) : base(allors) {}

		public static ShippingAndHandlingComponent Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (ShippingAndHandlingComponent) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.Decimal Cost 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Cost);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Cost, value);
			}
		}

		virtual public bool ExistCost{
			get
			{
				return Strategy.ExistUnitRole(Meta.Cost);
			}
		}

		virtual public void RemoveCost()
		{
			Strategy.RemoveUnitRole(Meta.Cost);
		}


		virtual public ShipmentMethod ShipmentMethod
		{ 
			get
			{
				return (ShipmentMethod) Strategy.GetCompositeRole(Meta.ShipmentMethod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShipmentMethod ,value);
			}
		}

		virtual public bool ExistShipmentMethod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShipmentMethod);
			}
		}

		virtual public void RemoveShipmentMethod()
		{
			Strategy.RemoveCompositeRole(Meta.ShipmentMethod);
		}


		virtual public Carrier Carrier
		{ 
			get
			{
				return (Carrier) Strategy.GetCompositeRole(Meta.Carrier);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Carrier ,value);
			}
		}

		virtual public bool ExistCarrier
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Carrier);
			}
		}

		virtual public void RemoveCarrier()
		{
			Strategy.RemoveCompositeRole(Meta.Carrier);
		}


		virtual public ShipmentValue ShipmentValue
		{ 
			get
			{
				return (ShipmentValue) Strategy.GetCompositeRole(Meta.ShipmentValue);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShipmentValue ,value);
			}
		}

		virtual public bool ExistShipmentValue
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShipmentValue);
			}
		}

		virtual public void RemoveShipmentValue()
		{
			Strategy.RemoveCompositeRole(Meta.ShipmentValue);
		}


		virtual public Currency Currency
		{ 
			get
			{
				return (Currency) Strategy.GetCompositeRole(Meta.Currency);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Currency ,value);
			}
		}

		virtual public bool ExistCurrency
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Currency);
			}
		}

		virtual public void RemoveCurrency()
		{
			Strategy.RemoveCompositeRole(Meta.Currency);
		}


		virtual public InternalOrganisation SpecifiedFor
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeRole(Meta.SpecifiedFor);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SpecifiedFor ,value);
			}
		}

		virtual public bool ExistSpecifiedFor
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SpecifiedFor);
			}
		}

		virtual public void RemoveSpecifiedFor()
		{
			Strategy.RemoveCompositeRole(Meta.SpecifiedFor);
		}


		virtual public GeographicBoundary GeographicBoundary
		{ 
			get
			{
				return (GeographicBoundary) Strategy.GetCompositeRole(Meta.GeographicBoundary);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.GeographicBoundary ,value);
			}
		}

		virtual public bool ExistGeographicBoundary
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.GeographicBoundary);
			}
		}

		virtual public void RemoveGeographicBoundary()
		{
			Strategy.RemoveCompositeRole(Meta.GeographicBoundary);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::System.DateTime FromDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.FromDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FromDate, value);
			}
		}

		virtual public bool ExistFromDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.FromDate);
			}
		}

		virtual public void RemoveFromDate()
		{
			Strategy.RemoveUnitRole(Meta.FromDate);
		}



		virtual public global::System.DateTime ThroughDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.ThroughDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ThroughDate, value);
			}
		}

		virtual public bool ExistThroughDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.ThroughDate);
			}
		}

		virtual public void RemoveThroughDate()
		{
			Strategy.RemoveUnitRole(Meta.ThroughDate);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}

	}

	public class ShippingAndHandlingComponentMeta
	{
		public static readonly ShippingAndHandlingComponentMeta Instance = new ShippingAndHandlingComponentMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.ShippingAndHandlingComponent;

		public global::Allors.Meta.RoleType Cost 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShippingAndHandlingComponentCost;
			}
		} 
		public global::Allors.Meta.RoleType ShipmentMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShippingAndHandlingComponentShipmentMethod;
			}
		} 
		public global::Allors.Meta.RoleType Carrier 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShippingAndHandlingComponentCarrier;
			}
		} 
		public global::Allors.Meta.RoleType ShipmentValue 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShippingAndHandlingComponentShipmentValue;
			}
		} 
		public global::Allors.Meta.RoleType Currency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShippingAndHandlingComponentCurrency;
			}
		} 
		public global::Allors.Meta.RoleType SpecifiedFor 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShippingAndHandlingComponentSpecifiedFor;
			}
		} 
		public global::Allors.Meta.RoleType GeographicBoundary 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ShippingAndHandlingComponentGeographicBoundary;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType FromDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodFromDate;
			}
		} 
		public global::Allors.Meta.RoleType ThroughDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodThroughDate;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

	}
}