// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class Deployment : Allors.ObjectBase , Searchable, UserInterfaceable, Period, SearchResult
	{
		public static readonly DeploymentMeta Meta = DeploymentMeta.Instance;

		public Deployment(Allors.IStrategy allors) : base(allors) {}

		public static Deployment Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Deployment) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public Good ProductOffering
		{ 
			get
			{
				return (Good) Strategy.GetCompositeRole(Meta.ProductOffering);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ProductOffering ,value);
			}
		}

		virtual public bool ExistProductOffering
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ProductOffering);
			}
		}

		virtual public void RemoveProductOffering()
		{
			Strategy.RemoveCompositeRole(Meta.ProductOffering);
		}


		virtual public DeploymentUsage DeploymentUsage
		{ 
			get
			{
				return (DeploymentUsage) Strategy.GetCompositeRole(Meta.DeploymentUsage);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DeploymentUsage ,value);
			}
		}

		virtual public bool ExistDeploymentUsage
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DeploymentUsage);
			}
		}

		virtual public void RemoveDeploymentUsage()
		{
			Strategy.RemoveCompositeRole(Meta.DeploymentUsage);
		}


		virtual public SerializedInventoryItem SerializedInventoryItem
		{ 
			get
			{
				return (SerializedInventoryItem) Strategy.GetCompositeRole(Meta.SerializedInventoryItem);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SerializedInventoryItem ,value);
			}
		}

		virtual public bool ExistSerializedInventoryItem
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SerializedInventoryItem);
			}
		}

		virtual public void RemoveSerializedInventoryItem()
		{
			Strategy.RemoveCompositeRole(Meta.SerializedInventoryItem);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::System.DateTime? FromDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.FromDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FromDate, value);
			}
		}

		virtual public bool ExistFromDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.FromDate);
			}
		}

		virtual public void RemoveFromDate()
		{
			Strategy.RemoveUnitRole(Meta.FromDate);
		}



		virtual public global::System.DateTime? ThroughDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.ThroughDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ThroughDate, value);
			}
		}

		virtual public bool ExistThroughDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.ThroughDate);
			}
		}

		virtual public void RemoveThroughDate()
		{
			Strategy.RemoveUnitRole(Meta.ThroughDate);
		}

	}

	public class DeploymentMeta
	{
		public static readonly DeploymentMeta Instance = new DeploymentMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.Deployment;

		public global::Allors.Meta.RoleType ProductOffering 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.DeploymentProductOffering;
			}
		} 
		public global::Allors.Meta.RoleType DeploymentUsage 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.DeploymentDeploymentUsage;
			}
		} 
		public global::Allors.Meta.RoleType SerializedInventoryItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.DeploymentSerializedInventoryItem;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType FromDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodFromDate;
			}
		} 
		public global::Allors.Meta.RoleType ThroughDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PeriodThroughDate;
			}
		} 

	}
}