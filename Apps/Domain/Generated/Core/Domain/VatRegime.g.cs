// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class VatRegime : Allors.ObjectBase , Enumeration
	{
		public static readonly VatRegimeMeta Meta = VatRegimeMeta.Instance;

		public VatRegime(Allors.IStrategy allors) : base(allors) {}

		public static VatRegime Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (VatRegime) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public VatRate VatRate
		{ 
			get
			{
				return (VatRate) Strategy.GetCompositeRole(Meta.VatRate);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.VatRate ,value);
			}
		}

		virtual public bool ExistVatRate
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.VatRate);
			}
		}

		virtual public void RemoveVatRate()
		{
			Strategy.RemoveCompositeRole(Meta.VatRate);
		}


		virtual public OrganisationGlAccount GeneralLedgerAccount
		{ 
			get
			{
				return (OrganisationGlAccount) Strategy.GetCompositeRole(Meta.GeneralLedgerAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.GeneralLedgerAccount ,value);
			}
		}

		virtual public bool ExistGeneralLedgerAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.GeneralLedgerAccount);
			}
		}

		virtual public void RemoveGeneralLedgerAccount()
		{
			Strategy.RemoveCompositeRole(Meta.GeneralLedgerAccount);
		}


		virtual public global::Allors.Extent<LocalisedText> LocalisedNames
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.LocalisedName);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.LocalisedName, value);
			}
		}

		virtual public void AddLocalisedName (LocalisedText value)
		{
			Strategy.AddCompositeRole(Meta.LocalisedName, value);
		}

		virtual public void RemoveLocalisedName (LocalisedText value)
		{
			Strategy.RemoveCompositeRole(Meta.LocalisedName,value);
		}

		virtual public bool ExistLocalisedNames
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.LocalisedName);
			}
		}

		virtual public void RemoveLocalisedNames()
		{
			Strategy.RemoveCompositeRoles(Meta.LocalisedName);
		}



		virtual public global::System.Boolean IsActive 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.IsActive);
			}
			set
			{
				Strategy.SetUnitRole(Meta.IsActive, value);
			}
		}

		virtual public bool ExistIsActive{
			get
			{
				return Strategy.ExistUnitRole(Meta.IsActive);
			}
		}

		virtual public void RemoveIsActive()
		{
			Strategy.RemoveUnitRole(Meta.IsActive);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}



		virtual public global::Allors.Extent<Party> PartiesWhereVatRegime
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereVatRegime);
			}
		}

		virtual public bool ExistPartiesWhereVatRegime
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereVatRegime);
			}
		}


		virtual public global::Allors.Extent<Order> OrdersWhereVatRegime
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrdersWhereVatRegime);
			}
		}

		virtual public bool ExistOrdersWhereVatRegime
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrdersWhereVatRegime);
			}
		}


		virtual public global::Allors.Extent<Invoice> InvoicesWhereVatRegime
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InvoicesWhereVatRegime);
			}
		}

		virtual public bool ExistInvoicesWhereVatRegime
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InvoicesWhereVatRegime);
			}
		}


		virtual public global::Allors.Extent<InvoiceItem> InvoiceItemsWhereAssignedVatRegime
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InvoiceItemsWhereAssignedVatRegime);
			}
		}

		virtual public bool ExistInvoiceItemsWhereAssignedVatRegime
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InvoiceItemsWhereAssignedVatRegime);
			}
		}


		virtual public global::Allors.Extent<InvoiceItem> InvoiceItemsWhereVatRegime
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.InvoiceItemsWhereVatRegime);
			}
		}

		virtual public bool ExistInvoiceItemsWhereVatRegime
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.InvoiceItemsWhereVatRegime);
			}
		}


		virtual public global::Allors.Extent<OrderItem> OrderItemsWhereVatRegime
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderItemsWhereVatRegime);
			}
		}

		virtual public bool ExistOrderItemsWhereVatRegime
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderItemsWhereVatRegime);
			}
		}


		virtual public global::Allors.Extent<OrderItem> OrderItemsWhereAssignedVatRegime
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderItemsWhereAssignedVatRegime);
			}
		}

		virtual public bool ExistOrderItemsWhereAssignedVatRegime
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderItemsWhereAssignedVatRegime);
			}
		}

	}

	public class VatRegimeMeta
	{
		public static readonly VatRegimeMeta Instance = new VatRegimeMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.VatRegime;

		public global::Allors.Meta.RoleType VatRate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.VatRegimeVatRate;
			}
		} 
		public global::Allors.Meta.RoleType GeneralLedgerAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.VatRegimeGeneralLedgerAccount;
			}
		} 
		public global::Allors.Meta.RoleType LocalisedName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EnumerationLocalisedName;
			}
		} 
		public global::Allors.Meta.RoleType IsActive 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EnumerationIsActive;
			}
		} 
		public global::Allors.Meta.RoleType Name 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.EnumerationName;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 

		public global::Allors.Meta.AssociationType PartiesWhereVatRegime 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyVatRegime;
			}
		} 
		public global::Allors.Meta.AssociationType OrdersWhereVatRegime 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderVatRegime;
			}
		} 
		public global::Allors.Meta.AssociationType InvoicesWhereVatRegime 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InvoiceVatRegime;
			}
		} 
		public global::Allors.Meta.AssociationType InvoiceItemsWhereAssignedVatRegime 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InvoiceItemAssignedVatRegime;
			}
		} 
		public global::Allors.Meta.AssociationType InvoiceItemsWhereVatRegime 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InvoiceItemVatRegime;
			}
		} 
		public global::Allors.Meta.AssociationType OrderItemsWhereVatRegime 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderItemVatRegime;
			}
		} 
		public global::Allors.Meta.AssociationType OrderItemsWhereAssignedVatRegime 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderItemAssignedVatRegime;
			}
		} 

	}
}