// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class Person : Allors.ObjectBase , User, AccessControlledObject, UniquelyIdentifiable, SearchResult, UserInterfaceable, Searchable, Party
	{
		public static readonly PersonMeta Meta = PersonMeta.Instance;

		public Person(Allors.IStrategy allors) : base(allors) {}

		public static Person Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Person) allorsSession.Instantiate(allorsObjectId);		
		}




		virtual public global::System.String LastName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.LastName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.LastName, value);
			}
		}

		virtual public bool ExistLastName{
			get
			{
				return Strategy.ExistUnitRole(Meta.LastName);
			}
		}

		virtual public void RemoveLastName()
		{
			Strategy.RemoveUnitRole(Meta.LastName);
		}



		virtual public global::System.String MiddleName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.MiddleName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MiddleName, value);
			}
		}

		virtual public bool ExistMiddleName{
			get
			{
				return Strategy.ExistUnitRole(Meta.MiddleName);
			}
		}

		virtual public void RemoveMiddleName()
		{
			Strategy.RemoveUnitRole(Meta.MiddleName);
		}



		virtual public global::System.String FirstName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.FirstName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.FirstName, value);
			}
		}

		virtual public bool ExistFirstName{
			get
			{
				return Strategy.ExistUnitRole(Meta.FirstName);
			}
		}

		virtual public void RemoveFirstName()
		{
			Strategy.RemoveUnitRole(Meta.FirstName);
		}


		virtual public Salutation Salutation
		{ 
			get
			{
				return (Salutation) Strategy.GetCompositeRole(Meta.Salutation);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Salutation ,value);
			}
		}

		virtual public bool ExistSalutation
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Salutation);
			}
		}

		virtual public void RemoveSalutation()
		{
			Strategy.RemoveCompositeRole(Meta.Salutation);
		}



		virtual public global::System.Decimal YTDCommission 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.YTDCommission);
			}
			set
			{
				Strategy.SetUnitRole(Meta.YTDCommission, value);
			}
		}

		virtual public bool ExistYTDCommission{
			get
			{
				return Strategy.ExistUnitRole(Meta.YTDCommission);
			}
		}

		virtual public void RemoveYTDCommission()
		{
			Strategy.RemoveUnitRole(Meta.YTDCommission);
		}


		virtual public Citizenship Citizenship
		{ 
			get
			{
				return (Citizenship) Strategy.GetCompositeRole(Meta.Citizenship);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Citizenship ,value);
			}
		}

		virtual public bool ExistCitizenship
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Citizenship);
			}
		}

		virtual public void RemoveCitizenship()
		{
			Strategy.RemoveCompositeRole(Meta.Citizenship);
		}


		virtual public Employment CurrentEmployment
		{ 
			get
			{
				return (Employment) Strategy.GetCompositeRole(Meta.CurrentEmployment);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentEmployment ,value);
			}
		}

		virtual public bool ExistCurrentEmployment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentEmployment);
			}
		}

		virtual public void RemoveCurrentEmployment()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentEmployment);
		}



		virtual public global::System.Decimal LastYearsCommission 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.LastYearsCommission);
			}
			set
			{
				Strategy.SetUnitRole(Meta.LastYearsCommission, value);
			}
		}

		virtual public bool ExistLastYearsCommission{
			get
			{
				return Strategy.ExistUnitRole(Meta.LastYearsCommission);
			}
		}

		virtual public void RemoveLastYearsCommission()
		{
			Strategy.RemoveUnitRole(Meta.LastYearsCommission);
		}


		virtual public global::Allors.Extent<PersonalTitle> Titles
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Title);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Title, value);
			}
		}

		virtual public void AddTitle (PersonalTitle value)
		{
			Strategy.AddCompositeRole(Meta.Title, value);
		}

		virtual public void RemoveTitle (PersonalTitle value)
		{
			Strategy.RemoveCompositeRole(Meta.Title,value);
		}

		virtual public bool ExistTitles
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Title);
			}
		}

		virtual public void RemoveTitles()
		{
			Strategy.RemoveCompositeRoles(Meta.Title);
		}



		virtual public global::System.String MothersMaidenName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.MothersMaidenName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.MothersMaidenName, value);
			}
		}

		virtual public bool ExistMothersMaidenName{
			get
			{
				return Strategy.ExistUnitRole(Meta.MothersMaidenName);
			}
		}

		virtual public void RemoveMothersMaidenName()
		{
			Strategy.RemoveUnitRole(Meta.MothersMaidenName);
		}



		virtual public global::System.DateTime BirthDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.BirthDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.BirthDate, value);
			}
		}

		virtual public bool ExistBirthDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.BirthDate);
			}
		}

		virtual public void RemoveBirthDate()
		{
			Strategy.RemoveUnitRole(Meta.BirthDate);
		}



		virtual public global::System.Decimal Height 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.Height);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Height, value);
			}
		}

		virtual public bool ExistHeight{
			get
			{
				return Strategy.ExistUnitRole(Meta.Height);
			}
		}

		virtual public void RemoveHeight()
		{
			Strategy.RemoveUnitRole(Meta.Height);
		}


		virtual public global::Allors.Extent<PersonTraining> PersonTrainings
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PersonTraining);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PersonTraining, value);
			}
		}

		virtual public void AddPersonTraining (PersonTraining value)
		{
			Strategy.AddCompositeRole(Meta.PersonTraining, value);
		}

		virtual public void RemovePersonTraining (PersonTraining value)
		{
			Strategy.RemoveCompositeRole(Meta.PersonTraining,value);
		}

		virtual public bool ExistPersonTrainings
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PersonTraining);
			}
		}

		virtual public void RemovePersonTrainings()
		{
			Strategy.RemoveCompositeRoles(Meta.PersonTraining);
		}


		virtual public GenderType Gender
		{ 
			get
			{
				return (GenderType) Strategy.GetCompositeRole(Meta.Gender);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Gender ,value);
			}
		}

		virtual public bool ExistGender
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Gender);
			}
		}

		virtual public void RemoveGender()
		{
			Strategy.RemoveCompositeRole(Meta.Gender);
		}



		virtual public global::System.Int32 Weight 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.Weight);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Weight, value);
			}
		}

		virtual public bool ExistWeight{
			get
			{
				return Strategy.ExistUnitRole(Meta.Weight);
			}
		}

		virtual public void RemoveWeight()
		{
			Strategy.RemoveUnitRole(Meta.Weight);
		}


		virtual public global::Allors.Extent<Hobby> Hobbies
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Hobby);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Hobby, value);
			}
		}

		virtual public void AddHobby (Hobby value)
		{
			Strategy.AddCompositeRole(Meta.Hobby, value);
		}

		virtual public void RemoveHobby (Hobby value)
		{
			Strategy.RemoveCompositeRole(Meta.Hobby,value);
		}

		virtual public bool ExistHobbies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Hobby);
			}
		}

		virtual public void RemoveHobbies()
		{
			Strategy.RemoveCompositeRoles(Meta.Hobby);
		}



		virtual public global::System.Int32 TotalYearsWorkExperience 
		{
			get
			{
				return (global::System.Int32) Strategy.GetUnitRole(Meta.TotalYearsWorkExperience);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalYearsWorkExperience, value);
			}
		}

		virtual public bool ExistTotalYearsWorkExperience{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalYearsWorkExperience);
			}
		}

		virtual public void RemoveTotalYearsWorkExperience()
		{
			Strategy.RemoveUnitRole(Meta.TotalYearsWorkExperience);
		}


		virtual public global::Allors.Extent<Passport> Passports
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Passport);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Passport, value);
			}
		}

		virtual public void AddPassport (Passport value)
		{
			Strategy.AddCompositeRole(Meta.Passport, value);
		}

		virtual public void RemovePassport (Passport value)
		{
			Strategy.RemoveCompositeRole(Meta.Passport,value);
		}

		virtual public bool ExistPassports
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Passport);
			}
		}

		virtual public void RemovePassports()
		{
			Strategy.RemoveCompositeRoles(Meta.Passport);
		}


		virtual public MaritalStatus MaritalStatus
		{ 
			get
			{
				return (MaritalStatus) Strategy.GetCompositeRole(Meta.MaritalStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.MaritalStatus ,value);
			}
		}

		virtual public bool ExistMaritalStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.MaritalStatus);
			}
		}

		virtual public void RemoveMaritalStatus()
		{
			Strategy.RemoveCompositeRole(Meta.MaritalStatus);
		}


		virtual public Media Picture
		{ 
			get
			{
				return (Media) Strategy.GetCompositeRole(Meta.Picture);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Picture ,value);
			}
		}

		virtual public bool ExistPicture
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Picture);
			}
		}

		virtual public void RemovePicture()
		{
			Strategy.RemoveCompositeRole(Meta.Picture);
		}



		virtual public global::System.String SocialSecurityNumber 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.SocialSecurityNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.SocialSecurityNumber, value);
			}
		}

		virtual public bool ExistSocialSecurityNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.SocialSecurityNumber);
			}
		}

		virtual public void RemoveSocialSecurityNumber()
		{
			Strategy.RemoveUnitRole(Meta.SocialSecurityNumber);
		}



		virtual public global::System.DateTime DeceasedDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.DeceasedDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DeceasedDate, value);
			}
		}

		virtual public bool ExistDeceasedDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.DeceasedDate);
			}
		}

		virtual public void RemoveDeceasedDate()
		{
			Strategy.RemoveUnitRole(Meta.DeceasedDate);
		}



		virtual public global::System.Boolean UserEmailConfirmed 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.UserEmailConfirmed);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UserEmailConfirmed, value);
			}
		}

		virtual public bool ExistUserEmailConfirmed{
			get
			{
				return Strategy.ExistUnitRole(Meta.UserEmailConfirmed);
			}
		}

		virtual public void RemoveUserEmailConfirmed()
		{
			Strategy.RemoveUnitRole(Meta.UserEmailConfirmed);
		}



		virtual public global::System.String UserName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.UserName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UserName, value);
			}
		}

		virtual public bool ExistUserName{
			get
			{
				return Strategy.ExistUnitRole(Meta.UserName);
			}
		}

		virtual public void RemoveUserName()
		{
			Strategy.RemoveUnitRole(Meta.UserName);
		}



		virtual public global::System.String UserEmail 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.UserEmail);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UserEmail, value);
			}
		}

		virtual public bool ExistUserEmail{
			get
			{
				return Strategy.ExistUnitRole(Meta.UserEmail);
			}
		}

		virtual public void RemoveUserEmail()
		{
			Strategy.RemoveUnitRole(Meta.UserEmail);
		}



		virtual public global::System.String UserPasswordHash 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.UserPasswordHash);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UserPasswordHash, value);
			}
		}

		virtual public bool ExistUserPasswordHash{
			get
			{
				return Strategy.ExistUnitRole(Meta.UserPasswordHash);
			}
		}

		virtual public void RemoveUserPasswordHash()
		{
			Strategy.RemoveUnitRole(Meta.UserPasswordHash);
		}


		virtual public SecurityToken OwnerSecurityToken
		{ 
			get
			{
				return (SecurityToken) Strategy.GetCompositeRole(Meta.OwnerSecurityToken);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OwnerSecurityToken ,value);
			}
		}

		virtual public bool ExistOwnerSecurityToken
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OwnerSecurityToken);
			}
		}

		virtual public void RemoveOwnerSecurityToken()
		{
			Strategy.RemoveCompositeRole(Meta.OwnerSecurityToken);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public Locale Locale
		{ 
			get
			{
				return (Locale) Strategy.GetCompositeRole(Meta.Locale);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Locale ,value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			Strategy.RemoveCompositeRole(Meta.Locale);
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::System.Decimal YTDRevenue 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.YTDRevenue);
			}
			set
			{
				Strategy.SetUnitRole(Meta.YTDRevenue, value);
			}
		}

		virtual public bool ExistYTDRevenue{
			get
			{
				return Strategy.ExistUnitRole(Meta.YTDRevenue);
			}
		}

		virtual public void RemoveYTDRevenue()
		{
			Strategy.RemoveUnitRole(Meta.YTDRevenue);
		}



		virtual public global::System.Decimal LastYearsRevenue 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.LastYearsRevenue);
			}
			set
			{
				Strategy.SetUnitRole(Meta.LastYearsRevenue, value);
			}
		}

		virtual public bool ExistLastYearsRevenue{
			get
			{
				return Strategy.ExistUnitRole(Meta.LastYearsRevenue);
			}
		}

		virtual public void RemoveLastYearsRevenue()
		{
			Strategy.RemoveUnitRole(Meta.LastYearsRevenue);
		}


		virtual public TelecommunicationsNumber BillingInquiriesFax
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.BillingInquiriesFax);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillingInquiriesFax ,value);
			}
		}

		virtual public bool ExistBillingInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillingInquiriesFax);
			}
		}

		virtual public void RemoveBillingInquiriesFax()
		{
			Strategy.RemoveCompositeRole(Meta.BillingInquiriesFax);
		}


		virtual public global::Allors.Extent<Qualification> Qualifications
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Qualification);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Qualification, value);
			}
		}

		virtual public void AddQualification (Qualification value)
		{
			Strategy.AddCompositeRole(Meta.Qualification, value);
		}

		virtual public void RemoveQualification (Qualification value)
		{
			Strategy.RemoveCompositeRole(Meta.Qualification,value);
		}

		virtual public bool ExistQualifications
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Qualification);
			}
		}

		virtual public void RemoveQualifications()
		{
			Strategy.RemoveCompositeRoles(Meta.Qualification);
		}


		virtual public ContactMechanism HomeAddress
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.HomeAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.HomeAddress ,value);
			}
		}

		virtual public bool ExistHomeAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.HomeAddress);
			}
		}

		virtual public void RemoveHomeAddress()
		{
			Strategy.RemoveCompositeRole(Meta.HomeAddress);
		}


		virtual public ContactMechanism SalesOffice
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.SalesOffice);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SalesOffice ,value);
			}
		}

		virtual public bool ExistSalesOffice
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SalesOffice);
			}
		}

		virtual public void RemoveSalesOffice()
		{
			Strategy.RemoveCompositeRole(Meta.SalesOffice);
		}


		virtual public TelecommunicationsNumber OrderInquiriesFax
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.OrderInquiriesFax);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderInquiriesFax ,value);
			}
		}

		virtual public bool ExistOrderInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderInquiriesFax);
			}
		}

		virtual public void RemoveOrderInquiriesFax()
		{
			Strategy.RemoveCompositeRole(Meta.OrderInquiriesFax);
		}


		virtual public global::Allors.Extent<Person> CurrentSalesReps
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.CurrentSalesRep);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.CurrentSalesRep, value);
			}
		}

		virtual public void AddCurrentSalesRep (Person value)
		{
			Strategy.AddCompositeRole(Meta.CurrentSalesRep, value);
		}

		virtual public void RemoveCurrentSalesRep (Person value)
		{
			Strategy.RemoveCompositeRole(Meta.CurrentSalesRep,value);
		}

		virtual public bool ExistCurrentSalesReps
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.CurrentSalesRep);
			}
		}

		virtual public void RemoveCurrentSalesReps()
		{
			Strategy.RemoveCompositeRoles(Meta.CurrentSalesRep);
		}


		virtual public global::Allors.Extent<PartyContactMechanism> PartyContactMechanisms
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PartyContactMechanism);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PartyContactMechanism, value);
			}
		}

		virtual public void AddPartyContactMechanism (PartyContactMechanism value)
		{
			Strategy.AddCompositeRole(Meta.PartyContactMechanism, value);
		}

		virtual public void RemovePartyContactMechanism (PartyContactMechanism value)
		{
			Strategy.RemoveCompositeRole(Meta.PartyContactMechanism,value);
		}

		virtual public bool ExistPartyContactMechanisms
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PartyContactMechanism);
			}
		}

		virtual public void RemovePartyContactMechanisms()
		{
			Strategy.RemoveCompositeRoles(Meta.PartyContactMechanism);
		}


		virtual public TelecommunicationsNumber ShippingInquiriesFax
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.ShippingInquiriesFax);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingInquiriesFax ,value);
			}
		}

		virtual public bool ExistShippingInquiriesFax
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingInquiriesFax);
			}
		}

		virtual public void RemoveShippingInquiriesFax()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingInquiriesFax);
		}


		virtual public TelecommunicationsNumber ShippingInquiriesPhone
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.ShippingInquiriesPhone);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingInquiriesPhone ,value);
			}
		}

		virtual public bool ExistShippingInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingInquiriesPhone);
			}
		}

		virtual public void RemoveShippingInquiriesPhone()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingInquiriesPhone);
		}


		virtual public global::Allors.Extent<BillingAccount> BillingAccounts
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BillingAccount);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BillingAccount, value);
			}
		}

		virtual public void AddBillingAccount (BillingAccount value)
		{
			Strategy.AddCompositeRole(Meta.BillingAccount, value);
		}

		virtual public void RemoveBillingAccount (BillingAccount value)
		{
			Strategy.RemoveCompositeRole(Meta.BillingAccount,value);
		}

		virtual public bool ExistBillingAccounts
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BillingAccount);
			}
		}

		virtual public void RemoveBillingAccounts()
		{
			Strategy.RemoveCompositeRoles(Meta.BillingAccount);
		}


		virtual public TelecommunicationsNumber OrderInquiriesPhone
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.OrderInquiriesPhone);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderInquiriesPhone ,value);
			}
		}

		virtual public bool ExistOrderInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderInquiriesPhone);
			}
		}

		virtual public void RemoveOrderInquiriesPhone()
		{
			Strategy.RemoveCompositeRole(Meta.OrderInquiriesPhone);
		}


		virtual public global::Allors.Extent<PartySkill> PartySkills
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PartySkill);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PartySkill, value);
			}
		}

		virtual public void AddPartySkill (PartySkill value)
		{
			Strategy.AddCompositeRole(Meta.PartySkill, value);
		}

		virtual public void RemovePartySkill (PartySkill value)
		{
			Strategy.RemoveCompositeRole(Meta.PartySkill,value);
		}

		virtual public bool ExistPartySkills
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PartySkill);
			}
		}

		virtual public void RemovePartySkills()
		{
			Strategy.RemoveCompositeRoles(Meta.PartySkill);
		}


		virtual public global::Allors.Extent<PartyClassification> PartyClassifications
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PartyClassification);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PartyClassification, value);
			}
		}

		virtual public void AddPartyClassification (PartyClassification value)
		{
			Strategy.AddCompositeRole(Meta.PartyClassification, value);
		}

		virtual public void RemovePartyClassification (PartyClassification value)
		{
			Strategy.RemoveCompositeRole(Meta.PartyClassification,value);
		}

		virtual public bool ExistPartyClassifications
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PartyClassification);
			}
		}

		virtual public void RemovePartyClassifications()
		{
			Strategy.RemoveCompositeRoles(Meta.PartyClassification);
		}



		virtual public global::System.Boolean ExcludeFromDunning 
		{
			get
			{
				return (global::System.Boolean) Strategy.GetUnitRole(Meta.ExcludeFromDunning);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ExcludeFromDunning, value);
			}
		}

		virtual public bool ExistExcludeFromDunning{
			get
			{
				return Strategy.ExistUnitRole(Meta.ExcludeFromDunning);
			}
		}

		virtual public void RemoveExcludeFromDunning()
		{
			Strategy.RemoveUnitRole(Meta.ExcludeFromDunning);
		}


		virtual public global::Allors.Extent<BankAccount> BankAccounts
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.BankAccount);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.BankAccount, value);
			}
		}

		virtual public void AddBankAccount (BankAccount value)
		{
			Strategy.AddCompositeRole(Meta.BankAccount, value);
		}

		virtual public void RemoveBankAccount (BankAccount value)
		{
			Strategy.RemoveCompositeRole(Meta.BankAccount,value);
		}

		virtual public bool ExistBankAccounts
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.BankAccount);
			}
		}

		virtual public void RemoveBankAccounts()
		{
			Strategy.RemoveCompositeRoles(Meta.BankAccount);
		}


		virtual public ContactMechanism BillingAddress
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.BillingAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillingAddress ,value);
			}
		}

		virtual public bool ExistBillingAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillingAddress);
			}
		}

		virtual public void RemoveBillingAddress()
		{
			Strategy.RemoveCompositeRole(Meta.BillingAddress);
		}


		virtual public ShipmentMethod DefaultShipmentMethod
		{ 
			get
			{
				return (ShipmentMethod) Strategy.GetCompositeRole(Meta.DefaultShipmentMethod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DefaultShipmentMethod ,value);
			}
		}

		virtual public bool ExistDefaultShipmentMethod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DefaultShipmentMethod);
			}
		}

		virtual public void RemoveDefaultShipmentMethod()
		{
			Strategy.RemoveCompositeRole(Meta.DefaultShipmentMethod);
		}


		virtual public global::Allors.Extent<Resume> Resumes
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Resume);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Resume, value);
			}
		}

		virtual public void AddResume (Resume value)
		{
			Strategy.AddCompositeRole(Meta.Resume, value);
		}

		virtual public void RemoveResume (Resume value)
		{
			Strategy.RemoveCompositeRole(Meta.Resume,value);
		}

		virtual public bool ExistResumes
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Resume);
			}
		}

		virtual public void RemoveResumes()
		{
			Strategy.RemoveCompositeRoles(Meta.Resume);
		}


		virtual public ContactMechanism HeadQuarter
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.HeadQuarter);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.HeadQuarter ,value);
			}
		}

		virtual public bool ExistHeadQuarter
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.HeadQuarter);
			}
		}

		virtual public void RemoveHeadQuarter()
		{
			Strategy.RemoveCompositeRole(Meta.HeadQuarter);
		}


		virtual public ElectronicAddress PersonalEmailAddress
		{ 
			get
			{
				return (ElectronicAddress) Strategy.GetCompositeRole(Meta.PersonalEmailAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PersonalEmailAddress ,value);
			}
		}

		virtual public bool ExistPersonalEmailAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PersonalEmailAddress);
			}
		}

		virtual public void RemovePersonalEmailAddress()
		{
			Strategy.RemoveCompositeRole(Meta.PersonalEmailAddress);
		}


		virtual public TelecommunicationsNumber CellPhoneNumber
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.CellPhoneNumber);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CellPhoneNumber ,value);
			}
		}

		virtual public bool ExistCellPhoneNumber
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CellPhoneNumber);
			}
		}

		virtual public void RemoveCellPhoneNumber()
		{
			Strategy.RemoveCompositeRole(Meta.CellPhoneNumber);
		}


		virtual public TelecommunicationsNumber BillingInquiriesPhone
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.BillingInquiriesPhone);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillingInquiriesPhone ,value);
			}
		}

		virtual public bool ExistBillingInquiriesPhone
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillingInquiriesPhone);
			}
		}

		virtual public void RemoveBillingInquiriesPhone()
		{
			Strategy.RemoveCompositeRole(Meta.BillingInquiriesPhone);
		}



		virtual public global::System.String PartyName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PartyName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PartyName, value);
			}
		}

		virtual public bool ExistPartyName{
			get
			{
				return Strategy.ExistUnitRole(Meta.PartyName);
			}
		}

		virtual public void RemovePartyName()
		{
			Strategy.RemoveUnitRole(Meta.PartyName);
		}


		virtual public ContactMechanism OrderAddress
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.OrderAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderAddress ,value);
			}
		}

		virtual public bool ExistOrderAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderAddress);
			}
		}

		virtual public void RemoveOrderAddress()
		{
			Strategy.RemoveCompositeRole(Meta.OrderAddress);
		}


		virtual public ElectronicAddress InternetAddress
		{ 
			get
			{
				return (ElectronicAddress) Strategy.GetCompositeRole(Meta.InternetAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.InternetAddress ,value);
			}
		}

		virtual public bool ExistInternetAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.InternetAddress);
			}
		}

		virtual public void RemoveInternetAddress()
		{
			Strategy.RemoveCompositeRole(Meta.InternetAddress);
		}


		virtual public global::Allors.Extent<Media> Contents
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.Content);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.Content, value);
			}
		}

		virtual public void AddContent (Media value)
		{
			Strategy.AddCompositeRole(Meta.Content, value);
		}

		virtual public void RemoveContent (Media value)
		{
			Strategy.RemoveCompositeRole(Meta.Content,value);
		}

		virtual public bool ExistContents
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.Content);
			}
		}

		virtual public void RemoveContents()
		{
			Strategy.RemoveCompositeRoles(Meta.Content);
		}


		virtual public global::Allors.Extent<CreditCard> CreditCards
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.CreditCard);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.CreditCard, value);
			}
		}

		virtual public void AddCreditCard (CreditCard value)
		{
			Strategy.AddCompositeRole(Meta.CreditCard, value);
		}

		virtual public void RemoveCreditCard (CreditCard value)
		{
			Strategy.RemoveCompositeRole(Meta.CreditCard,value);
		}

		virtual public bool ExistCreditCards
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.CreditCard);
			}
		}

		virtual public void RemoveCreditCards()
		{
			Strategy.RemoveCompositeRoles(Meta.CreditCard);
		}


		virtual public PostalAddress ShippingAddress
		{ 
			get
			{
				return (PostalAddress) Strategy.GetCompositeRole(Meta.ShippingAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingAddress ,value);
			}
		}

		virtual public bool ExistShippingAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingAddress);
			}
		}

		virtual public void RemoveShippingAddress()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingAddress);
		}



		virtual public global::System.Decimal OpenOrderAmount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.OpenOrderAmount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.OpenOrderAmount, value);
			}
		}

		virtual public bool ExistOpenOrderAmount{
			get
			{
				return Strategy.ExistUnitRole(Meta.OpenOrderAmount);
			}
		}

		virtual public void RemoveOpenOrderAmount()
		{
			Strategy.RemoveUnitRole(Meta.OpenOrderAmount);
		}


		virtual public TelecommunicationsNumber GeneralFaxNumber
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.GeneralFaxNumber);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.GeneralFaxNumber ,value);
			}
		}

		virtual public bool ExistGeneralFaxNumber
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.GeneralFaxNumber);
			}
		}

		virtual public void RemoveGeneralFaxNumber()
		{
			Strategy.RemoveCompositeRole(Meta.GeneralFaxNumber);
		}


		virtual public PaymentMethod DefaultPaymentMethod
		{ 
			get
			{
				return (PaymentMethod) Strategy.GetCompositeRole(Meta.DefaultPaymentMethod);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DefaultPaymentMethod ,value);
			}
		}

		virtual public bool ExistDefaultPaymentMethod
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DefaultPaymentMethod);
			}
		}

		virtual public void RemoveDefaultPaymentMethod()
		{
			Strategy.RemoveCompositeRole(Meta.DefaultPaymentMethod);
		}


		virtual public TelecommunicationsNumber GeneralPhoneNumber
		{ 
			get
			{
				return (TelecommunicationsNumber) Strategy.GetCompositeRole(Meta.GeneralPhoneNumber);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.GeneralPhoneNumber ,value);
			}
		}

		virtual public bool ExistGeneralPhoneNumber
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.GeneralPhoneNumber);
			}
		}

		virtual public void RemoveGeneralPhoneNumber()
		{
			Strategy.RemoveCompositeRole(Meta.GeneralPhoneNumber);
		}


		virtual public Currency PreferredCurrency
		{ 
			get
			{
				return (Currency) Strategy.GetCompositeRole(Meta.PreferredCurrency);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreferredCurrency ,value);
			}
		}

		virtual public bool ExistPreferredCurrency
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreferredCurrency);
			}
		}

		virtual public void RemovePreferredCurrency()
		{
			Strategy.RemoveCompositeRole(Meta.PreferredCurrency);
		}


		virtual public VatRegime VatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.VatRegime);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.VatRegime ,value);
			}
		}

		virtual public bool ExistVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.VatRegime);
			}
		}

		virtual public void RemoveVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.VatRegime);
		}



		virtual public global::Allors.Extent<SalesRepPartyProductCategoryRevenue> SalesRepPartyProductCategoryRevenuesWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereSalesRep);
			}
		}

		virtual public bool ExistSalesRepPartyProductCategoryRevenuesWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereSalesRep);
			}
		}


		virtual public BankAccount BankAccountWhereContactPerson
		{ 
			get
			{
				return (BankAccount) Strategy.GetCompositeAssociation(Meta.BankAccountWhereContactPerson);
			}
		} 

		virtual public bool ExistBankAccountWhereContactPerson
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.BankAccountWhereContactPerson);
			}
		}


		virtual public global::Allors.Extent<ServiceEntryHeader> ServiceEntryHeadersWhereSubmittedBy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ServiceEntryHeadersWhereSubmittedBy);
			}
		}

		virtual public bool ExistServiceEntryHeadersWhereSubmittedBy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ServiceEntryHeadersWhereSubmittedBy);
			}
		}


		virtual public global::Allors.Extent<OwnCreditCard> OwnCreditCardsWhereOwner
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OwnCreditCardsWhereOwner);
			}
		}

		virtual public bool ExistOwnCreditCardsWhereOwner
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OwnCreditCardsWhereOwner);
			}
		}


		virtual public global::Allors.Extent<PickList> PickListsWherePicker
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PickListsWherePicker);
			}
		}

		virtual public bool ExistPickListsWherePicker
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PickListsWherePicker);
			}
		}


		virtual public global::Allors.Extent<SalesRepRevenueHistory> SalesRepRevenueHistoriesWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRevenueHistoriesWhereSalesRep);
			}
		}

		virtual public bool ExistSalesRepRevenueHistoriesWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRevenueHistoriesWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<EventRegistration> EventRegistrationsWherePerson
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EventRegistrationsWherePerson);
			}
		}

		virtual public bool ExistEventRegistrationsWherePerson
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EventRegistrationsWherePerson);
			}
		}


		virtual public global::Allors.Extent<WorkEffortAssignment> WorkEffortAssignmentsWhereProfessional
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WorkEffortAssignmentsWhereProfessional);
			}
		}

		virtual public bool ExistWorkEffortAssignmentsWhereProfessional
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WorkEffortAssignmentsWhereProfessional);
			}
		}


		virtual public global::Allors.Extent<Organisation> OrganisationsWhereCurrentContact
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrganisationsWhereCurrentContact);
			}
		}

		virtual public bool ExistOrganisationsWhereCurrentContact
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrganisationsWhereCurrentContact);
			}
		}


		virtual public global::Allors.Extent<Party> PartiesWhereCurrentSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartiesWhereCurrentSalesRep);
			}
		}

		virtual public bool ExistPartiesWhereCurrentSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartiesWhereCurrentSalesRep);
			}
		}


		virtual public global::Allors.Extent<PerformanceNote> PerformanceNotesWhereGivenByManager
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PerformanceNotesWhereGivenByManager);
			}
		}

		virtual public bool ExistPerformanceNotesWhereGivenByManager
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PerformanceNotesWhereGivenByManager);
			}
		}


		virtual public global::Allors.Extent<PerformanceNote> PerformanceNotesWhereEmployee
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PerformanceNotesWhereEmployee);
			}
		}

		virtual public bool ExistPerformanceNotesWhereEmployee
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PerformanceNotesWhereEmployee);
			}
		}


		virtual public global::Allors.Extent<RequirementCommunication> RequirementCommunicationsWhereAssociatedProfessional
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementCommunicationsWhereAssociatedProfessional);
			}
		}

		virtual public bool ExistRequirementCommunicationsWhereAssociatedProfessional
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementCommunicationsWhereAssociatedProfessional);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereSalesRep);
			}
		}

		virtual public bool ExistSalesInvoicesWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<EmploymentApplication> EmploymentApplicationsWherePerson
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EmploymentApplicationsWherePerson);
			}
		}

		virtual public bool ExistEmploymentApplicationsWherePerson
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EmploymentApplicationsWherePerson);
			}
		}


		virtual public global::Allors.Extent<PositionFulfillment> PositionFulfillmentsWherePerson
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PositionFulfillmentsWherePerson);
			}
		}

		virtual public bool ExistPositionFulfillmentsWherePerson
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PositionFulfillmentsWherePerson);
			}
		}


		virtual public global::Allors.Extent<Employment> EmploymentsWhereEmployee
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EmploymentsWhereEmployee);
			}
		}

		virtual public bool ExistEmploymentsWhereEmployee
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EmploymentsWhereEmployee);
			}
		}


		virtual public global::Allors.Extent<SalesRepRelationship> SalesRepRelationshipsWhereSalesRepresentative
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRelationshipsWhereSalesRepresentative);
			}
		}

		virtual public bool ExistSalesRepRelationshipsWhereSalesRepresentative
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRelationshipsWhereSalesRepresentative);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereSalesRep);
			}
		}

		virtual public bool ExistSalesOrdersWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<SalesRepRevenue> SalesRepRevenuesWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRevenuesWhereSalesRep);
			}
		}

		virtual public bool ExistSalesRepRevenuesWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRevenuesWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<SalesRepPartyRevenue> SalesRepPartyRevenuesWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyRevenuesWhereSalesRep);
			}
		}

		virtual public bool ExistSalesRepPartyRevenuesWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyRevenuesWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderItemsWhereSalesRep);
			}
		}

		virtual public bool ExistSalesOrderItemsWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderItemsWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<Cash> CashesWherePersonResponsible
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CashesWherePersonResponsible);
			}
		}

		virtual public bool ExistCashesWherePersonResponsible
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CashesWherePersonResponsible);
			}
		}


		virtual public global::Allors.Extent<PerformanceReview> PerformanceReviewsWhereManager
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PerformanceReviewsWhereManager);
			}
		}

		virtual public bool ExistPerformanceReviewsWhereManager
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PerformanceReviewsWhereManager);
			}
		}


		virtual public global::Allors.Extent<PerformanceReview> PerformanceReviewsWhereEmployee
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PerformanceReviewsWhereEmployee);
			}
		}

		virtual public bool ExistPerformanceReviewsWhereEmployee
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PerformanceReviewsWhereEmployee);
			}
		}


		virtual public global::Allors.Extent<OrganisationContactRelationship> OrganisationContactRelationshipsWhereContact
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrganisationContactRelationshipsWhereContact);
			}
		}

		virtual public bool ExistOrganisationContactRelationshipsWhereContact
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrganisationContactRelationshipsWhereContact);
			}
		}


		virtual public global::Allors.Extent<ProfessionalAssignment> ProfessionalAssignmentsWhereProfessional
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProfessionalAssignmentsWhereProfessional);
			}
		}

		virtual public bool ExistProfessionalAssignmentsWhereProfessional
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProfessionalAssignmentsWhereProfessional);
			}
		}


		virtual public global::Allors.Extent<ProfessionalServicesRelationship> ProfessionalServicesRelationshipsWhereProfessional
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProfessionalServicesRelationshipsWhereProfessional);
			}
		}

		virtual public bool ExistProfessionalServicesRelationshipsWhereProfessional
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProfessionalServicesRelationshipsWhereProfessional);
			}
		}


		virtual public global::Allors.Extent<SalesInvoiceItem> SalesInvoiceItemsWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoiceItemsWhereSalesRep);
			}
		}

		virtual public bool ExistSalesInvoiceItemsWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoiceItemsWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<EngagementItem> EngagementItemsWhereCurrentAssignedProfessional
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementItemsWhereCurrentAssignedProfessional);
			}
		}

		virtual public bool ExistEngagementItemsWhereCurrentAssignedProfessional
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementItemsWhereCurrentAssignedProfessional);
			}
		}


		virtual public global::Allors.Extent<CommunicationEvent> CommunicationEventsWhereOwner
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CommunicationEventsWhereOwner);
			}
		}

		virtual public bool ExistCommunicationEventsWhereOwner
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CommunicationEventsWhereOwner);
			}
		}


		virtual public global::Allors.Extent<SalesRepCommission> SalesRepCommissionsWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepCommissionsWhereSalesRep);
			}
		}

		virtual public bool ExistSalesRepCommissionsWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepCommissionsWhereSalesRep);
			}
		}


		virtual public global::Allors.Extent<EngineeringChange> EngineeringChangesWhereRequestor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngineeringChangesWhereRequestor);
			}
		}

		virtual public bool ExistEngineeringChangesWhereRequestor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngineeringChangesWhereRequestor);
			}
		}


		virtual public global::Allors.Extent<EngineeringChange> EngineeringChangesWhereAuthorizer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngineeringChangesWhereAuthorizer);
			}
		}

		virtual public bool ExistEngineeringChangesWhereAuthorizer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngineeringChangesWhereAuthorizer);
			}
		}


		virtual public global::Allors.Extent<EngineeringChange> EngineeringChangesWhereDesigner
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngineeringChangesWhereDesigner);
			}
		}

		virtual public bool ExistEngineeringChangesWhereDesigner
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngineeringChangesWhereDesigner);
			}
		}


		virtual public global::Allors.Extent<EngineeringChange> EngineeringChangesWhereTester
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngineeringChangesWhereTester);
			}
		}

		virtual public bool ExistEngineeringChangesWhereTester
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngineeringChangesWhereTester);
			}
		}


		virtual public global::Allors.Extent<FaceToFaceCommunication> FaceToFaceCommunicationsWhereParticipant
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FaceToFaceCommunicationsWhereParticipant);
			}
		}

		virtual public bool ExistFaceToFaceCommunicationsWhereParticipant
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FaceToFaceCommunicationsWhereParticipant);
			}
		}


		virtual public global::Allors.Extent<PhoneCommunication> PhoneCommunicationsWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PhoneCommunicationsWhereReceiver);
			}
		}

		virtual public bool ExistPhoneCommunicationsWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PhoneCommunicationsWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<PhoneCommunication> PhoneCommunicationsWhereCaller
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PhoneCommunicationsWhereCaller);
			}
		}

		virtual public bool ExistPhoneCommunicationsWhereCaller
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PhoneCommunicationsWhereCaller);
			}
		}


		virtual public global::Allors.Extent<SalesRepProductCategoryRevenue> SalesRepProductCategoryRevenuesWhereSalesRep
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepProductCategoryRevenuesWhereSalesRep);
			}
		}

		virtual public bool ExistSalesRepProductCategoryRevenuesWhereSalesRep
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepProductCategoryRevenuesWhereSalesRep);
			}
		}


		virtual public Singleton SingletonWhereGuest
		{ 
			get
			{
				return (Singleton) Strategy.GetCompositeAssociation(Meta.SingletonWhereGuest);
			}
		} 

		virtual public bool ExistSingletonWhereGuest
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SingletonWhereGuest);
			}
		}


		virtual public global::Allors.Extent<UserGroup> UserGroupsWhereMember
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.UserGroupsWhereMember);
			}
		}

		virtual public bool ExistUserGroupsWhereMember
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.UserGroupsWhereMember);
			}
		}


		virtual public global::Allors.Extent<Login> LoginsWhereUser
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.LoginsWhereUser);
			}
		}

		virtual public bool ExistLoginsWhereUser
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.LoginsWhereUser);
			}
		}


		virtual public global::Allors.Extent<AccessControl> AccessControlsWhereSubject
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.AccessControlsWhereSubject);
			}
		}

		virtual public bool ExistAccessControlsWhereSubject
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.AccessControlsWhereSubject);
			}
		}


		virtual public global::Allors.Extent<QuoteItem> QuoteItemsWhereAuthorizer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuoteItemsWhereAuthorizer);
			}
		}

		virtual public bool ExistQuoteItemsWhereAuthorizer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuoteItemsWhereAuthorizer);
			}
		}


		virtual public global::Allors.Extent<SalesRepPartyProductCategoryRevenue> SalesRepPartyProductCategoryRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereParty);
			}
		}

		virtual public bool ExistSalesRepPartyProductCategoryRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyProductCategoryRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<PartyProductCategoryRevenueHistory> PartyProductCategoryRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductCategoryRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyProductCategoryRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductCategoryRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<LetterCorrespondence> LetterCorrespondencesWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.LetterCorrespondencesWhereOriginator);
			}
		}

		virtual public bool ExistLetterCorrespondencesWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.LetterCorrespondencesWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<LetterCorrespondence> LetterCorrespondencesWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.LetterCorrespondencesWhereReceiver);
			}
		}

		virtual public bool ExistLetterCorrespondencesWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.LetterCorrespondencesWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWherePreviousTakenViaSupplier
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWherePreviousTakenViaSupplier);
			}
		}

		virtual public bool ExistPurchaseOrdersWherePreviousTakenViaSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWherePreviousTakenViaSupplier);
			}
		}


		virtual public global::Allors.Extent<PurchaseOrder> PurchaseOrdersWhereTakenViaSupplier
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaSupplier);
			}
		}

		virtual public bool ExistPurchaseOrdersWhereTakenViaSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseOrdersWhereTakenViaSupplier);
			}
		}


		virtual public global::Allors.Extent<Quote> QuotesWhereIssuer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuotesWhereIssuer);
			}
		}

		virtual public bool ExistQuotesWhereIssuer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuotesWhereIssuer);
			}
		}


		virtual public global::Allors.Extent<Quote> QuotesWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.QuotesWhereReceiver);
			}
		}

		virtual public bool ExistQuotesWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.QuotesWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<SupplierOffering> SupplierOfferingsWhereSupplier
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SupplierOfferingsWhereSupplier);
			}
		}

		virtual public bool ExistSupplierOfferingsWhereSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SupplierOfferingsWhereSupplier);
			}
		}


		virtual public global::Allors.Extent<WorkEffortPartyAssignment> WorkEffortPartyAssignmentsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WorkEffortPartyAssignmentsWhereParty);
			}
		}

		virtual public bool ExistWorkEffortPartyAssignmentsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WorkEffortPartyAssignmentsWhereParty);
			}
		}


		virtual public global::Allors.Extent<PartyRevenueHistory> PartyRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<FaxCommunication> FaxCommunicationsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FaxCommunicationsWhereOriginator);
			}
		}

		virtual public bool ExistFaxCommunicationsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FaxCommunicationsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<FaxCommunication> FaxCommunicationsWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.FaxCommunicationsWhereReceiver);
			}
		}

		virtual public bool ExistFaxCommunicationsWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.FaxCommunicationsWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<PickList> PickListsWhereShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PickListsWhereShipToParty);
			}
		}

		virtual public bool ExistPickListsWhereShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PickListsWhereShipToParty);
			}
		}


		virtual public global::Allors.Extent<Request> RequestsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequestsWhereOriginator);
			}
		}

		virtual public bool ExistRequestsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequestsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<PriceComponent> PriceComponentsWhereSpecifiedFor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PriceComponentsWhereSpecifiedFor);
			}
		}

		virtual public bool ExistPriceComponentsWhereSpecifiedFor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PriceComponentsWhereSpecifiedFor);
			}
		}


		virtual public global::Allors.Extent<PartyProductRevenue> PartyProductRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyProductRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<CustomerRelationship> CustomerRelationshipsWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CustomerRelationshipsWhereCustomer);
			}
		}

		virtual public bool ExistCustomerRelationshipsWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CustomerRelationshipsWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<PartyProductCategoryRevenue> PartyProductCategoryRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductCategoryRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyProductCategoryRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductCategoryRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<PartyFixedAssetAssignment> PartyFixedAssetAssignmentsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyFixedAssetAssignmentsWhereParty);
			}
		}

		virtual public bool ExistPartyFixedAssetAssignmentsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyFixedAssetAssignmentsWhereParty);
			}
		}


		virtual public global::Allors.Extent<RespondingParty> RespondingPartiesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RespondingPartiesWhereParty);
			}
		}

		virtual public bool ExistRespondingPartiesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RespondingPartiesWhereParty);
			}
		}


		virtual public global::Allors.Extent<Product> ProductsWhereManufacturedBy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ProductsWhereManufacturedBy);
			}
		}

		virtual public bool ExistProductsWhereManufacturedBy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ProductsWhereManufacturedBy);
			}
		}


		virtual public global::Allors.Extent<OrganisationGlAccount> OrganisationGlAccountsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrganisationGlAccountsWhereParty);
			}
		}

		virtual public bool ExistOrganisationGlAccountsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrganisationGlAccountsWhereParty);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWherePreviousBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWherePreviousBillToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWherePreviousBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWherePreviousBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWherePreviousShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWherePreviousShipToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWherePreviousShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWherePreviousShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereBillToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWhereBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereShipToCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWhereShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesInvoice> SalesInvoicesWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesInvoicesWhereCustomer);
			}
		}

		virtual public bool ExistSalesInvoicesWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesInvoicesWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<ExternalAccountingTransaction> ExternalAccountingTransactionsWhereFromParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ExternalAccountingTransactionsWhereFromParty);
			}
		}

		virtual public bool ExistExternalAccountingTransactionsWhereFromParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ExternalAccountingTransactionsWhereFromParty);
			}
		}


		virtual public global::Allors.Extent<ExternalAccountingTransaction> ExternalAccountingTransactionsWhereToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ExternalAccountingTransactionsWhereToParty);
			}
		}

		virtual public bool ExistExternalAccountingTransactionsWhereToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ExternalAccountingTransactionsWhereToParty);
			}
		}


		virtual public global::Allors.Extent<SalesRepRelationship> SalesRepRelationshipsWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepRelationshipsWhereCustomer);
			}
		}

		virtual public bool ExistSalesRepRelationshipsWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepRelationshipsWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<PartyRevenue> PartyRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereShipToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWhereShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereBillToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWhereBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePreviousShipToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePreviousShipToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWherePreviousShipToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePreviousShipToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWhereCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWhereCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWhereCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePreviousBillToCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePreviousBillToCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWherePreviousBillToCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePreviousBillToCustomer);
			}
		}


		virtual public global::Allors.Extent<SalesOrder> SalesOrdersWherePlacingCustomer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrdersWherePlacingCustomer);
			}
		}

		virtual public bool ExistSalesOrdersWherePlacingCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrdersWherePlacingCustomer);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWhereBillToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWhereBillToParty);
			}
		}

		virtual public bool ExistEngagementsWhereBillToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWhereBillToParty);
			}
		}


		virtual public global::Allors.Extent<Engagement> EngagementsWherePlacingParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.EngagementsWherePlacingParty);
			}
		}

		virtual public bool ExistEngagementsWherePlacingParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.EngagementsWherePlacingParty);
			}
		}


		virtual public global::Allors.Extent<SalesRepPartyRevenue> SalesRepPartyRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesRepPartyRevenuesWhereParty);
			}
		}

		virtual public bool ExistSalesRepPartyRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesRepPartyRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<PurchaseInvoice> PurchaseInvoicesWhereBilledFromParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseInvoicesWhereBilledFromParty);
			}
		}

		virtual public bool ExistPurchaseInvoicesWhereBilledFromParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseInvoicesWhereBilledFromParty);
			}
		}


		virtual public global::Allors.Extent<PartyPackageRevenueHistory> PartyPackageRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyPackageRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyPackageRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyPackageRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderItemsWhereShipToParty);
			}
		}

		virtual public bool ExistSalesOrderItemsWhereShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderItemsWhereShipToParty);
			}
		}


		virtual public global::Allors.Extent<SalesOrderItem> SalesOrderItemsWhereAssignedShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SalesOrderItemsWhereAssignedShipToParty);
			}
		}

		virtual public bool ExistSalesOrderItemsWhereAssignedShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SalesOrderItemsWhereAssignedShipToParty);
			}
		}


		virtual public global::Allors.Extent<PartyPackageRevenue> PartyPackageRevenuesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyPackageRevenuesWhereParty);
			}
		}

		virtual public bool ExistPartyPackageRevenuesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyPackageRevenuesWhereParty);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereBillToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereBillToParty);
			}
		}

		virtual public bool ExistShipmentsWhereBillToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereBillToParty);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereShipToParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereShipToParty);
			}
		}

		virtual public bool ExistShipmentsWhereShipToParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereShipToParty);
			}
		}


		virtual public global::Allors.Extent<Shipment> ShipmentsWhereShipFromParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ShipmentsWhereShipFromParty);
			}
		}

		virtual public bool ExistShipmentsWhereShipFromParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ShipmentsWhereShipFromParty);
			}
		}


		virtual public global::Allors.Extent<Payment> PaymentsWhereSendingParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PaymentsWhereSendingParty);
			}
		}

		virtual public bool ExistPaymentsWhereSendingParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PaymentsWhereSendingParty);
			}
		}


		virtual public global::Allors.Extent<Payment> PaymentsWhereReceivingParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PaymentsWhereReceivingParty);
			}
		}

		virtual public bool ExistPaymentsWhereReceivingParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PaymentsWhereReceivingParty);
			}
		}


		virtual public global::Allors.Extent<ClientRelationship> ClientRelationshipsWhereClient
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.ClientRelationshipsWhereClient);
			}
		}

		virtual public bool ExistClientRelationshipsWhereClient
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.ClientRelationshipsWhereClient);
			}
		}


		virtual public global::Allors.Extent<CommunicationEvent> CommunicationEventsWhereInvolvedParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.CommunicationEventsWhereInvolvedParty);
			}
		}

		virtual public bool ExistCommunicationEventsWhereInvolvedParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.CommunicationEventsWhereInvolvedParty);
			}
		}


		virtual public InternalOrganisation InternalOrganisationWhereCustomer
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeAssociation(Meta.InternalOrganisationWhereCustomer);
			}
		} 

		virtual public bool ExistInternalOrganisationWhereCustomer
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.InternalOrganisationWhereCustomer);
			}
		}


		virtual public InternalOrganisation InternalOrganisationWhereSupplier
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeAssociation(Meta.InternalOrganisationWhereSupplier);
			}
		} 

		virtual public bool ExistInternalOrganisationWhereSupplier
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.InternalOrganisationWhereSupplier);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereAuthorizer
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereAuthorizer);
			}
		}

		virtual public bool ExistRequirementsWhereAuthorizer
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereAuthorizer);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereNeededFor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereNeededFor);
			}
		}

		virtual public bool ExistRequirementsWhereNeededFor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereNeededFor);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereOriginator);
			}
		}

		virtual public bool ExistRequirementsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<Requirement> RequirementsWhereServicedBy
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.RequirementsWhereServicedBy);
			}
		}

		virtual public bool ExistRequirementsWhereServicedBy
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.RequirementsWhereServicedBy);
			}
		}


		virtual public global::Allors.Extent<SubContractorRelationship> SubContractorRelationshipsWhereContractor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SubContractorRelationshipsWhereContractor);
			}
		}

		virtual public bool ExistSubContractorRelationshipsWhereContractor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SubContractorRelationshipsWhereContractor);
			}
		}


		virtual public global::Allors.Extent<SubContractorRelationship> SubContractorRelationshipsWhereSubContractor
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.SubContractorRelationshipsWhereSubContractor);
			}
		}

		virtual public bool ExistSubContractorRelationshipsWhereSubContractor
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.SubContractorRelationshipsWhereSubContractor);
			}
		}


		virtual public global::Allors.Extent<WebSiteCommunication> WebSiteCommunicationsWhereOriginator
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WebSiteCommunicationsWhereOriginator);
			}
		}

		virtual public bool ExistWebSiteCommunicationsWhereOriginator
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WebSiteCommunicationsWhereOriginator);
			}
		}


		virtual public global::Allors.Extent<WebSiteCommunication> WebSiteCommunicationsWhereReceiver
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.WebSiteCommunicationsWhereReceiver);
			}
		}

		virtual public bool ExistWebSiteCommunicationsWhereReceiver
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.WebSiteCommunicationsWhereReceiver);
			}
		}


		virtual public global::Allors.Extent<PartyProductRevenueHistory> PartyProductRevenueHistoriesWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PartyProductRevenueHistoriesWhereParty);
			}
		}

		virtual public bool ExistPartyProductRevenueHistoriesWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PartyProductRevenueHistoriesWhereParty);
			}
		}


		virtual public global::Allors.Extent<UserGroup> UserGroupsWhereParty
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.UserGroupsWhereParty);
			}
		}

		virtual public bool ExistUserGroupsWhereParty
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.UserGroupsWhereParty);
			}
		}

	}

	public class PersonMeta
	{
		public static readonly PersonMeta Instance = new PersonMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.Person;

		public global::Allors.Meta.RoleType LastName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonLastName;
			}
		} 
		public global::Allors.Meta.RoleType MiddleName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonMiddleName;
			}
		} 
		public global::Allors.Meta.RoleType FirstName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonFirstName;
			}
		} 
		public global::Allors.Meta.RoleType Salutation 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonSalutation;
			}
		} 
		public global::Allors.Meta.RoleType YTDCommission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonYTDCommission;
			}
		} 
		public global::Allors.Meta.RoleType Citizenship 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonCitizenship;
			}
		} 
		public global::Allors.Meta.RoleType CurrentEmployment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonCurrentEmployment;
			}
		} 
		public global::Allors.Meta.RoleType LastYearsCommission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonLastYearsCommission;
			}
		} 
		public global::Allors.Meta.RoleType Title 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonTitle;
			}
		} 
		public global::Allors.Meta.RoleType MothersMaidenName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonMothersMaidenName;
			}
		} 
		public global::Allors.Meta.RoleType BirthDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonBirthDate;
			}
		} 
		public global::Allors.Meta.RoleType Height 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonHeight;
			}
		} 
		public global::Allors.Meta.RoleType PersonTraining 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonPersonTraining;
			}
		} 
		public global::Allors.Meta.RoleType Gender 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonGender;
			}
		} 
		public global::Allors.Meta.RoleType Weight 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonWeight;
			}
		} 
		public global::Allors.Meta.RoleType Hobby 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonHobby;
			}
		} 
		public global::Allors.Meta.RoleType TotalYearsWorkExperience 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonTotalYearsWorkExperience;
			}
		} 
		public global::Allors.Meta.RoleType Passport 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonPassport;
			}
		} 
		public global::Allors.Meta.RoleType MaritalStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonMaritalStatus;
			}
		} 
		public global::Allors.Meta.RoleType Picture 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonPicture;
			}
		} 
		public global::Allors.Meta.RoleType SocialSecurityNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonSocialSecurityNumber;
			}
		} 
		public global::Allors.Meta.RoleType DeceasedDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PersonDeceasedDate;
			}
		} 
		public global::Allors.Meta.RoleType UserEmailConfirmed 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserUserEmailConfirmed;
			}
		} 
		public global::Allors.Meta.RoleType UserName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserUserName;
			}
		} 
		public global::Allors.Meta.RoleType UserEmail 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserUserEmail;
			}
		} 
		public global::Allors.Meta.RoleType UserPasswordHash 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserUserPasswordHash;
			}
		} 
		public global::Allors.Meta.RoleType OwnerSecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SecurityTokenOwnerOwnerSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType Locale 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.LocalisedLocale;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType YTDRevenue 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyYTDRevenue;
			}
		} 
		public global::Allors.Meta.RoleType LastYearsRevenue 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyLastYearsRevenue;
			}
		} 
		public global::Allors.Meta.RoleType BillingInquiriesFax 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingInquiriesFax;
			}
		} 
		public global::Allors.Meta.RoleType Qualification 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyQualification;
			}
		} 
		public global::Allors.Meta.RoleType HomeAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyHomeAddress;
			}
		} 
		public global::Allors.Meta.RoleType SalesOffice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartySalesOffice;
			}
		} 
		public global::Allors.Meta.RoleType OrderInquiriesFax 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOrderInquiriesFax;
			}
		} 
		public global::Allors.Meta.RoleType CurrentSalesRep 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyCurrentSalesRep;
			}
		} 
		public global::Allors.Meta.RoleType PartyContactMechanism 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartyContactMechanism;
			}
		} 
		public global::Allors.Meta.RoleType ShippingInquiriesFax 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyShippingInquiriesFax;
			}
		} 
		public global::Allors.Meta.RoleType ShippingInquiriesPhone 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyShippingInquiriesPhone;
			}
		} 
		public global::Allors.Meta.RoleType BillingAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingAccount;
			}
		} 
		public global::Allors.Meta.RoleType OrderInquiriesPhone 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOrderInquiriesPhone;
			}
		} 
		public global::Allors.Meta.RoleType PartySkill 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartySkill;
			}
		} 
		public global::Allors.Meta.RoleType PartyClassification 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartyClassification;
			}
		} 
		public global::Allors.Meta.RoleType ExcludeFromDunning 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyExcludeFromDunning;
			}
		} 
		public global::Allors.Meta.RoleType BankAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBankAccount;
			}
		} 
		public global::Allors.Meta.RoleType BillingAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingAddress;
			}
		} 
		public global::Allors.Meta.RoleType DefaultShipmentMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyDefaultShipmentMethod;
			}
		} 
		public global::Allors.Meta.RoleType Resume 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyResume;
			}
		} 
		public global::Allors.Meta.RoleType HeadQuarter 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyHeadQuarter;
			}
		} 
		public global::Allors.Meta.RoleType PersonalEmailAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPersonalEmailAddress;
			}
		} 
		public global::Allors.Meta.RoleType CellPhoneNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyCellPhoneNumber;
			}
		} 
		public global::Allors.Meta.RoleType BillingInquiriesPhone 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyBillingInquiriesPhone;
			}
		} 
		public global::Allors.Meta.RoleType PartyName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPartyName;
			}
		} 
		public global::Allors.Meta.RoleType OrderAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOrderAddress;
			}
		} 
		public global::Allors.Meta.RoleType InternetAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyInternetAddress;
			}
		} 
		public global::Allors.Meta.RoleType Content 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyContent;
			}
		} 
		public global::Allors.Meta.RoleType CreditCard 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyCreditCard;
			}
		} 
		public global::Allors.Meta.RoleType ShippingAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyShippingAddress;
			}
		} 
		public global::Allors.Meta.RoleType OpenOrderAmount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyOpenOrderAmount;
			}
		} 
		public global::Allors.Meta.RoleType GeneralFaxNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyGeneralFaxNumber;
			}
		} 
		public global::Allors.Meta.RoleType DefaultPaymentMethod 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyDefaultPaymentMethod;
			}
		} 
		public global::Allors.Meta.RoleType GeneralPhoneNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyGeneralPhoneNumber;
			}
		} 
		public global::Allors.Meta.RoleType PreferredCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyPreferredCurrency;
			}
		} 
		public global::Allors.Meta.RoleType VatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PartyVatRegime;
			}
		} 

		public global::Allors.Meta.AssociationType SalesRepPartyProductCategoryRevenuesWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyProductCategoryRevenueSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType BankAccountWhereContactPerson 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BankAccountContactPerson;
			}
		} 
		public global::Allors.Meta.AssociationType ServiceEntryHeadersWhereSubmittedBy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ServiceEntryHeaderSubmittedBy;
			}
		} 
		public global::Allors.Meta.AssociationType OwnCreditCardsWhereOwner 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OwnCreditCardOwner;
			}
		} 
		public global::Allors.Meta.AssociationType PickListsWherePicker 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PickListPicker;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRevenueHistoriesWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRevenueHistorySalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType EventRegistrationsWherePerson 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EventRegistrationPerson;
			}
		} 
		public global::Allors.Meta.AssociationType WorkEffortAssignmentsWhereProfessional 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortAssignmentProfessional;
			}
		} 
		public global::Allors.Meta.AssociationType OrganisationsWhereCurrentContact 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrganisationCurrentContact;
			}
		} 
		public global::Allors.Meta.AssociationType PartiesWhereCurrentSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyCurrentSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType PerformanceNotesWhereGivenByManager 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PerformanceNoteGivenByManager;
			}
		} 
		public global::Allors.Meta.AssociationType PerformanceNotesWhereEmployee 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PerformanceNoteEmployee;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementCommunicationsWhereAssociatedProfessional 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementCommunicationAssociatedProfessional;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType EmploymentApplicationsWherePerson 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EmploymentApplicationPerson;
			}
		} 
		public global::Allors.Meta.AssociationType PositionFulfillmentsWherePerson 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PositionFulfillmentPerson;
			}
		} 
		public global::Allors.Meta.AssociationType EmploymentsWhereEmployee 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EmploymentEmployee;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRelationshipsWhereSalesRepresentative 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRelationshipSalesRepresentative;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRevenuesWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRevenueSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepPartyRevenuesWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyRevenueSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemsWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType CashesWherePersonResponsible 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CashPersonResponsible;
			}
		} 
		public global::Allors.Meta.AssociationType PerformanceReviewsWhereManager 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PerformanceReviewManager;
			}
		} 
		public global::Allors.Meta.AssociationType PerformanceReviewsWhereEmployee 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PerformanceReviewEmployee;
			}
		} 
		public global::Allors.Meta.AssociationType OrganisationContactRelationshipsWhereContact 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrganisationContactRelationshipContact;
			}
		} 
		public global::Allors.Meta.AssociationType ProfessionalAssignmentsWhereProfessional 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProfessionalAssignmentProfessional;
			}
		} 
		public global::Allors.Meta.AssociationType ProfessionalServicesRelationshipsWhereProfessional 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProfessionalServicesRelationshipProfessional;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoiceItemsWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceItemSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementItemsWhereCurrentAssignedProfessional 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementItemCurrentAssignedProfessional;
			}
		} 
		public global::Allors.Meta.AssociationType CommunicationEventsWhereOwner 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CommunicationEventOwner;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepCommissionsWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepCommissionSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType EngineeringChangesWhereRequestor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngineeringChangeRequestor;
			}
		} 
		public global::Allors.Meta.AssociationType EngineeringChangesWhereAuthorizer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngineeringChangeAuthorizer;
			}
		} 
		public global::Allors.Meta.AssociationType EngineeringChangesWhereDesigner 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngineeringChangeDesigner;
			}
		} 
		public global::Allors.Meta.AssociationType EngineeringChangesWhereTester 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngineeringChangeTester;
			}
		} 
		public global::Allors.Meta.AssociationType FaceToFaceCommunicationsWhereParticipant 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FaceToFaceCommunicationParticipant;
			}
		} 
		public global::Allors.Meta.AssociationType PhoneCommunicationsWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PhoneCommunicationReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType PhoneCommunicationsWhereCaller 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PhoneCommunicationCaller;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepProductCategoryRevenuesWhereSalesRep 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepProductCategoryRevenueSalesRep;
			}
		} 
		public global::Allors.Meta.AssociationType SingletonWhereGuest 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SingletonGuest;
			}
		} 
		public global::Allors.Meta.AssociationType UserGroupsWhereMember 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.UserGroupMember;
			}
		} 
		public global::Allors.Meta.AssociationType LoginsWhereUser 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.LoginUser;
			}
		} 
		public global::Allors.Meta.AssociationType AccessControlsWhereSubject 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.AccessControlSubject;
			}
		} 
		public global::Allors.Meta.AssociationType QuoteItemsWhereAuthorizer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.QuoteItemAuthorizer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepPartyProductCategoryRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyProductCategoryRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductCategoryRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductCategoryRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType LetterCorrespondencesWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.LetterCorrespondenceOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType LetterCorrespondencesWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.LetterCorrespondenceReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWherePreviousTakenViaSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderPreviousTakenViaSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseOrdersWhereTakenViaSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseOrderTakenViaSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType QuotesWhereIssuer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.QuoteIssuer;
			}
		} 
		public global::Allors.Meta.AssociationType QuotesWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.QuoteReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType SupplierOfferingsWhereSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SupplierOfferingSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType WorkEffortPartyAssignmentsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WorkEffortPartyAssignmentParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType FaxCommunicationsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FaxCommunicationOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType FaxCommunicationsWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.FaxCommunicationReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType PickListsWhereShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PickListShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType RequestsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequestOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType PriceComponentsWhereSpecifiedFor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PriceComponentSpecifiedFor;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType CustomerRelationshipsWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CustomerRelationshipCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductCategoryRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductCategoryRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyFixedAssetAssignmentsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyFixedAssetAssignmentParty;
			}
		} 
		public global::Allors.Meta.AssociationType RespondingPartiesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RespondingPartyParty;
			}
		} 
		public global::Allors.Meta.AssociationType ProductsWhereManufacturedBy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ProductManufacturedBy;
			}
		} 
		public global::Allors.Meta.AssociationType OrganisationGlAccountsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrganisationGlAccountParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWherePreviousBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoicePreviousBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWherePreviousShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoicePreviousShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesInvoicesWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesInvoiceCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType ExternalAccountingTransactionsWhereFromParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ExternalAccountingTransactionFromParty;
			}
		} 
		public global::Allors.Meta.AssociationType ExternalAccountingTransactionsWhereToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ExternalAccountingTransactionToParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepRelationshipsWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepRelationshipCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType PartyRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePreviousShipToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPreviousShipToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePreviousBillToCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPreviousBillToCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrdersWherePlacingCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderPlacingCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWhereBillToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementBillToParty;
			}
		} 
		public global::Allors.Meta.AssociationType EngagementsWherePlacingParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.EngagementPlacingParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesRepPartyRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesRepPartyRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType PurchaseInvoicesWhereBilledFromParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseInvoiceBilledFromParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyPackageRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyPackageRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemsWhereShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType SalesOrderItemsWhereAssignedShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesOrderItemAssignedShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType PartyPackageRevenuesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyPackageRevenueParty;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereBillToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentBillToParty;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereShipToParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentShipToParty;
			}
		} 
		public global::Allors.Meta.AssociationType ShipmentsWhereShipFromParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ShipmentShipFromParty;
			}
		} 
		public global::Allors.Meta.AssociationType PaymentsWhereSendingParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PaymentSendingParty;
			}
		} 
		public global::Allors.Meta.AssociationType PaymentsWhereReceivingParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PaymentReceivingParty;
			}
		} 
		public global::Allors.Meta.AssociationType ClientRelationshipsWhereClient 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ClientRelationshipClient;
			}
		} 
		public global::Allors.Meta.AssociationType CommunicationEventsWhereInvolvedParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.CommunicationEventInvolvedParty;
			}
		} 
		public global::Allors.Meta.AssociationType InternalOrganisationWhereCustomer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalOrganisationCustomer;
			}
		} 
		public global::Allors.Meta.AssociationType InternalOrganisationWhereSupplier 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.InternalOrganisationSupplier;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereAuthorizer 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementAuthorizer;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereNeededFor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementNeededFor;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType RequirementsWhereServicedBy 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.RequirementServicedBy;
			}
		} 
		public global::Allors.Meta.AssociationType SubContractorRelationshipsWhereContractor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SubContractorRelationshipContractor;
			}
		} 
		public global::Allors.Meta.AssociationType SubContractorRelationshipsWhereSubContractor 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SubContractorRelationshipSubContractor;
			}
		} 
		public global::Allors.Meta.AssociationType WebSiteCommunicationsWhereOriginator 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WebSiteCommunicationOriginator;
			}
		} 
		public global::Allors.Meta.AssociationType WebSiteCommunicationsWhereReceiver 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.WebSiteCommunicationReceiver;
			}
		} 
		public global::Allors.Meta.AssociationType PartyProductRevenueHistoriesWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PartyProductRevenueHistoryParty;
			}
		} 
		public global::Allors.Meta.AssociationType UserGroupsWhereParty 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.UserGroupParty;
			}
		} 

	}
}