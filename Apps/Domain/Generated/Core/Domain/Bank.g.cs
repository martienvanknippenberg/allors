// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class Bank : Allors.ObjectBase , UserInterfaceable, Searchable
	{
		public static readonly BankMeta Meta = BankMeta.Instance;

		public Bank(Allors.IStrategy allors) : base(allors) {}

		public static Bank Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (Bank) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public Media Logo
		{ 
			get
			{
				return (Media) Strategy.GetCompositeRole(Meta.Logo);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Logo ,value);
			}
		}

		virtual public bool ExistLogo
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Logo);
			}
		}

		virtual public void RemoveLogo()
		{
			Strategy.RemoveCompositeRole(Meta.Logo);
		}



		virtual public global::System.String Bic 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Bic);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Bic, value);
			}
		}

		virtual public bool ExistBic{
			get
			{
				return Strategy.ExistUnitRole(Meta.Bic);
			}
		}

		virtual public void RemoveBic()
		{
			Strategy.RemoveUnitRole(Meta.Bic);
		}



		virtual public global::System.String SwiftCode 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.SwiftCode);
			}
			set
			{
				Strategy.SetUnitRole(Meta.SwiftCode, value);
			}
		}

		virtual public bool ExistSwiftCode{
			get
			{
				return Strategy.ExistUnitRole(Meta.SwiftCode);
			}
		}

		virtual public void RemoveSwiftCode()
		{
			Strategy.RemoveUnitRole(Meta.SwiftCode);
		}


		virtual public Country Country
		{ 
			get
			{
				return (Country) Strategy.GetCompositeRole(Meta.Country);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Country ,value);
			}
		}

		virtual public bool ExistCountry
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Country);
			}
		}

		virtual public void RemoveCountry()
		{
			Strategy.RemoveCompositeRole(Meta.Country);
		}



		virtual public global::System.String Name 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::Allors.Extent<BankAccount> BankAccountsWhereBank
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.BankAccountsWhereBank);
			}
		}

		virtual public bool ExistBankAccountsWhereBank
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.BankAccountsWhereBank);
			}
		}

	}

	public class BankMeta
	{
		public static readonly BankMeta Instance = new BankMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.Bank;

		public global::Allors.Meta.RoleType Logo 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BankLogo;
			}
		} 
		public global::Allors.Meta.RoleType Bic 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BankBic;
			}
		} 
		public global::Allors.Meta.RoleType SwiftCode 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BankSwiftCode;
			}
		} 
		public global::Allors.Meta.RoleType Country 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BankCountry;
			}
		} 
		public global::Allors.Meta.RoleType Name 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.BankName;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.AssociationType BankAccountsWhereBank 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.BankAccountBank;
			}
		} 

	}
}