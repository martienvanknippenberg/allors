// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class PurchaseInvoice : Allors.ObjectBase , Invoice
	{
		public static readonly PurchaseInvoiceMeta Meta = PurchaseInvoiceMeta.Instance;

		public PurchaseInvoice(Allors.IStrategy allors) : base(allors) {}

		public static PurchaseInvoice Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (PurchaseInvoice) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public PurchaseInvoiceObjectState PreviousObjectState
		{ 
			get
			{
				return (PurchaseInvoiceObjectState) Strategy.GetCompositeRole(Meta.PreviousObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousObjectState ,value);
			}
		}

		virtual public bool ExistPreviousObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousObjectState);
			}
		}

		virtual public void RemovePreviousObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousObjectState);
		}


		virtual public global::Allors.Extent<PurchaseInvoiceItem> PurchaseInvoiceItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PurchaseInvoiceItem);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PurchaseInvoiceItem, value);
			}
		}

		virtual public void AddPurchaseInvoiceItem (PurchaseInvoiceItem value)
		{
			Strategy.AddCompositeRole(Meta.PurchaseInvoiceItem, value);
		}

		virtual public void RemovePurchaseInvoiceItem (PurchaseInvoiceItem value)
		{
			Strategy.RemoveCompositeRole(Meta.PurchaseInvoiceItem,value);
		}

		virtual public bool ExistPurchaseInvoiceItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PurchaseInvoiceItem);
			}
		}

		virtual public void RemovePurchaseInvoiceItems()
		{
			Strategy.RemoveCompositeRoles(Meta.PurchaseInvoiceItem);
		}


		virtual public InternalOrganisation BilledToInternalOrganisation
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeRole(Meta.BilledToInternalOrganisation);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BilledToInternalOrganisation ,value);
			}
		}

		virtual public bool ExistBilledToInternalOrganisation
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BilledToInternalOrganisation);
			}
		}

		virtual public void RemoveBilledToInternalOrganisation()
		{
			Strategy.RemoveCompositeRole(Meta.BilledToInternalOrganisation);
		}


		virtual public PurchaseInvoiceStatus CurrentInvoiceStatus
		{ 
			get
			{
				return (PurchaseInvoiceStatus) Strategy.GetCompositeRole(Meta.CurrentInvoiceStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentInvoiceStatus ,value);
			}
		}

		virtual public bool ExistCurrentInvoiceStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentInvoiceStatus);
			}
		}

		virtual public void RemoveCurrentInvoiceStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentInvoiceStatus);
		}


		virtual public PurchaseInvoiceObjectState CurrentObjectState
		{ 
			get
			{
				return (PurchaseInvoiceObjectState) Strategy.GetCompositeRole(Meta.CurrentObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentObjectState ,value);
			}
		}

		virtual public bool ExistCurrentObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentObjectState);
			}
		}

		virtual public void RemoveCurrentObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentObjectState);
		}


		virtual public Party BilledFromParty
		{ 
			get
			{
				return (Party) Strategy.GetCompositeRole(Meta.BilledFromParty);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BilledFromParty ,value);
			}
		}

		virtual public bool ExistBilledFromParty
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BilledFromParty);
			}
		}

		virtual public void RemoveBilledFromParty()
		{
			Strategy.RemoveCompositeRole(Meta.BilledFromParty);
		}


		virtual public PurchaseInvoiceType PurchaseInvoiceType
		{ 
			get
			{
				return (PurchaseInvoiceType) Strategy.GetCompositeRole(Meta.PurchaseInvoiceType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PurchaseInvoiceType ,value);
			}
		}

		virtual public bool ExistPurchaseInvoiceType
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PurchaseInvoiceType);
			}
		}

		virtual public void RemovePurchaseInvoiceType()
		{
			Strategy.RemoveCompositeRole(Meta.PurchaseInvoiceType);
		}


		virtual public global::Allors.Extent<PurchaseInvoiceStatus> InvoiceStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InvoiceStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InvoiceStatus, value);
			}
		}

		virtual public void AddInvoiceStatus (PurchaseInvoiceStatus value)
		{
			Strategy.AddCompositeRole(Meta.InvoiceStatus, value);
		}

		virtual public void RemoveInvoiceStatus (PurchaseInvoiceStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.InvoiceStatus,value);
		}

		virtual public bool ExistInvoiceStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InvoiceStatus);
			}
		}

		virtual public void RemoveInvoiceStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.InvoiceStatus);
		}



		virtual public global::System.Decimal TotalShippingAndHandlingCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalShippingAndHandlingCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency);
			}
		}

		virtual public void RemoveTotalShippingAndHandlingCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency);
		}


		virtual public Currency CustomerCurrency
		{ 
			get
			{
				return (Currency) Strategy.GetCompositeRole(Meta.CustomerCurrency);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CustomerCurrency ,value);
			}
		}

		virtual public bool ExistCustomerCurrency
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CustomerCurrency);
			}
		}

		virtual public void RemoveCustomerCurrency()
		{
			Strategy.RemoveCompositeRole(Meta.CustomerCurrency);
		}



		virtual public global::System.String Description 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Description);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Description, value);
			}
		}

		virtual public bool ExistDescription{
			get
			{
				return Strategy.ExistUnitRole(Meta.Description);
			}
		}

		virtual public void RemoveDescription()
		{
			Strategy.RemoveUnitRole(Meta.Description);
		}


		virtual public ShippingAndHandlingCharge ShippingAndHandlingCharge
		{ 
			get
			{
				return (ShippingAndHandlingCharge) Strategy.GetCompositeRole(Meta.ShippingAndHandlingCharge);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingAndHandlingCharge ,value);
			}
		}

		virtual public bool ExistShippingAndHandlingCharge
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingAndHandlingCharge);
			}
		}

		virtual public void RemoveShippingAndHandlingCharge()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingAndHandlingCharge);
		}



		virtual public global::System.Decimal TotalFeeCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalFeeCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalFeeCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalFeeCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalFeeCustomerCurrency);
			}
		}

		virtual public void RemoveTotalFeeCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalFeeCustomerCurrency);
		}


		virtual public Fee Fee
		{ 
			get
			{
				return (Fee) Strategy.GetCompositeRole(Meta.Fee);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Fee ,value);
			}
		}

		virtual public bool ExistFee
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Fee);
			}
		}

		virtual public void RemoveFee()
		{
			Strategy.RemoveCompositeRole(Meta.Fee);
		}



		virtual public global::System.Decimal TotalExVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalExVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalExVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalExVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVatCustomerCurrency);
		}



		virtual public global::System.String CustomerReference 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.CustomerReference);
			}
			set
			{
				Strategy.SetUnitRole(Meta.CustomerReference, value);
			}
		}

		virtual public bool ExistCustomerReference{
			get
			{
				return Strategy.ExistUnitRole(Meta.CustomerReference);
			}
		}

		virtual public void RemoveCustomerReference()
		{
			Strategy.RemoveUnitRole(Meta.CustomerReference);
		}


		virtual public DiscountAdjustment DiscountAdjustment
		{ 
			get
			{
				return (DiscountAdjustment) Strategy.GetCompositeRole(Meta.DiscountAdjustment);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DiscountAdjustment ,value);
			}
		}

		virtual public bool ExistDiscountAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DiscountAdjustment);
			}
		}

		virtual public void RemoveDiscountAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.DiscountAdjustment);
		}



		virtual public global::System.Decimal AmountPaid 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.AmountPaid);
			}
			set
			{
				Strategy.SetUnitRole(Meta.AmountPaid, value);
			}
		}

		virtual public bool ExistAmountPaid{
			get
			{
				return Strategy.ExistUnitRole(Meta.AmountPaid);
			}
		}

		virtual public void RemoveAmountPaid()
		{
			Strategy.RemoveUnitRole(Meta.AmountPaid);
		}



		virtual public global::System.Decimal TotalDiscount 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalDiscount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscount, value);
			}
		}

		virtual public bool ExistTotalDiscount{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscount);
			}
		}

		virtual public void RemoveTotalDiscount()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscount);
		}


		virtual public BillingAccount BillingAccount
		{ 
			get
			{
				return (BillingAccount) Strategy.GetCompositeRole(Meta.BillingAccount);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillingAccount ,value);
			}
		}

		virtual public bool ExistBillingAccount
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillingAccount);
			}
		}

		virtual public void RemoveBillingAccount()
		{
			Strategy.RemoveCompositeRole(Meta.BillingAccount);
		}



		virtual public global::System.Decimal TotalIncVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalIncVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVat, value);
			}
		}

		virtual public bool ExistTotalIncVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVat);
			}
		}

		virtual public void RemoveTotalIncVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVat);
		}



		virtual public global::System.Decimal TotalSurcharge 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalSurcharge);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurcharge, value);
			}
		}

		virtual public bool ExistTotalSurcharge{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurcharge);
			}
		}

		virtual public void RemoveTotalSurcharge()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurcharge);
		}



		virtual public global::System.Decimal TotalBasePrice 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalBasePrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePrice, value);
			}
		}

		virtual public bool ExistTotalBasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePrice);
			}
		}

		virtual public void RemoveTotalBasePrice()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePrice);
		}



		virtual public global::System.Decimal TotalVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalVatCustomerCurrency);
		}



		virtual public global::System.DateTime InvoiceDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.InvoiceDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InvoiceDate, value);
			}
		}

		virtual public bool ExistInvoiceDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.InvoiceDate);
			}
		}

		virtual public void RemoveInvoiceDate()
		{
			Strategy.RemoveUnitRole(Meta.InvoiceDate);
		}



		virtual public global::System.DateTime EntryDate 
		{
			get
			{
				return (global::System.DateTime) Strategy.GetUnitRole(Meta.EntryDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.EntryDate, value);
			}
		}

		virtual public bool ExistEntryDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.EntryDate);
			}
		}

		virtual public void RemoveEntryDate()
		{
			Strategy.RemoveUnitRole(Meta.EntryDate);
		}



		virtual public global::System.Decimal TotalIncVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalIncVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalIncVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalIncVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVatCustomerCurrency);
		}



		virtual public global::System.Decimal TotalShippingAndHandling 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalShippingAndHandling);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalShippingAndHandling, value);
			}
		}

		virtual public bool ExistTotalShippingAndHandling{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalShippingAndHandling);
			}
		}

		virtual public void RemoveTotalShippingAndHandling()
		{
			Strategy.RemoveUnitRole(Meta.TotalShippingAndHandling);
		}



		virtual public global::System.Decimal TotalBasePriceCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalBasePriceCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePriceCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalBasePriceCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePriceCustomerCurrency);
			}
		}

		virtual public void RemoveTotalBasePriceCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePriceCustomerCurrency);
		}


		virtual public SurchargeAdjustment SurchargeAdjustment
		{ 
			get
			{
				return (SurchargeAdjustment) Strategy.GetCompositeRole(Meta.SurchargeAdjustment);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SurchargeAdjustment ,value);
			}
		}

		virtual public bool ExistSurchargeAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SurchargeAdjustment);
			}
		}

		virtual public void RemoveSurchargeAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.SurchargeAdjustment);
		}



		virtual public global::System.Decimal TotalExVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalExVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVat, value);
			}
		}

		virtual public bool ExistTotalExVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVat);
			}
		}

		virtual public void RemoveTotalExVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVat);
		}


		virtual public global::Allors.Extent<InvoiceTerm> InvoiceTerms
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.InvoiceTerm);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.InvoiceTerm, value);
			}
		}

		virtual public void AddInvoiceTerm (InvoiceTerm value)
		{
			Strategy.AddCompositeRole(Meta.InvoiceTerm, value);
		}

		virtual public void RemoveInvoiceTerm (InvoiceTerm value)
		{
			Strategy.RemoveCompositeRole(Meta.InvoiceTerm,value);
		}

		virtual public bool ExistInvoiceTerms
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.InvoiceTerm);
			}
		}

		virtual public void RemoveInvoiceTerms()
		{
			Strategy.RemoveCompositeRoles(Meta.InvoiceTerm);
		}



		virtual public global::System.Decimal TotalSurchargeCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalSurchargeCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurchargeCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalSurchargeCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurchargeCustomerCurrency);
			}
		}

		virtual public void RemoveTotalSurchargeCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurchargeCustomerCurrency);
		}



		virtual public global::System.String InvoiceNumber 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.InvoiceNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.InvoiceNumber, value);
			}
		}

		virtual public bool ExistInvoiceNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.InvoiceNumber);
			}
		}

		virtual public void RemoveInvoiceNumber()
		{
			Strategy.RemoveUnitRole(Meta.InvoiceNumber);
		}



		virtual public global::System.String Message 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Message);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Message, value);
			}
		}

		virtual public bool ExistMessage{
			get
			{
				return Strategy.ExistUnitRole(Meta.Message);
			}
		}

		virtual public void RemoveMessage()
		{
			Strategy.RemoveUnitRole(Meta.Message);
		}


		virtual public VatRegime VatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.VatRegime);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.VatRegime ,value);
			}
		}

		virtual public bool ExistVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.VatRegime);
			}
		}

		virtual public void RemoveVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.VatRegime);
		}



		virtual public global::System.Decimal TotalDiscountCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalDiscountCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscountCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalDiscountCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscountCustomerCurrency);
			}
		}

		virtual public void RemoveTotalDiscountCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscountCustomerCurrency);
		}



		virtual public global::System.Decimal TotalVat 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVat, value);
			}
		}

		virtual public bool ExistTotalVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVat);
			}
		}

		virtual public void RemoveTotalVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalVat);
		}



		virtual public global::System.Decimal TotalFee 
		{
			get
			{
				return (global::System.Decimal) Strategy.GetUnitRole(Meta.TotalFee);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalFee, value);
			}
		}

		virtual public bool ExistTotalFee{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalFee);
			}
		}

		virtual public void RemoveTotalFee()
		{
			Strategy.RemoveUnitRole(Meta.TotalFee);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}


		virtual public Locale Locale
		{ 
			get
			{
				return (Locale) Strategy.GetCompositeRole(Meta.Locale);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Locale ,value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			Strategy.RemoveCompositeRole(Meta.Locale);
		}



		virtual public global::System.String Comment 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Comment);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Comment, value);
			}
		}

		virtual public bool ExistComment{
			get
			{
				return Strategy.ExistUnitRole(Meta.Comment);
			}
		}

		virtual public void RemoveComment()
		{
			Strategy.RemoveUnitRole(Meta.Comment);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::System.String PrintContent 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PrintContent);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PrintContent, value);
			}
		}

		virtual public bool ExistPrintContent{
			get
			{
				return Strategy.ExistUnitRole(Meta.PrintContent);
			}
		}

		virtual public void RemovePrintContent()
		{
			Strategy.RemoveUnitRole(Meta.PrintContent);
		}



		virtual public global::System.Guid UniqueId 
		{
			get
			{
				return (global::System.Guid) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}



		virtual public SalesAccountingTransaction SalesAccountingTransactionWhereInvoice
		{ 
			get
			{
				return (SalesAccountingTransaction) Strategy.GetCompositeAssociation(Meta.SalesAccountingTransactionWhereInvoice);
			}
		} 

		virtual public bool ExistSalesAccountingTransactionWhereInvoice
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.SalesAccountingTransactionWhereInvoice);
			}
		}


		virtual public global::Allors.Extent<PaymentApplication> PaymentApplicationsWhereInvoice
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PaymentApplicationsWhereInvoice);
			}
		}

		virtual public bool ExistPaymentApplicationsWhereInvoice
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PaymentApplicationsWhereInvoice);
			}
		}


		virtual public global::Allors.Extent<PrintQueue> PrintQueuesWherePrintable
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PrintQueuesWherePrintable);
			}
		}

		virtual public bool ExistPrintQueuesWherePrintable
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PrintQueuesWherePrintable);
			}
		}

	}

	public class PurchaseInvoiceMeta
	{
		public static readonly PurchaseInvoiceMeta Instance = new PurchaseInvoiceMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.PurchaseInvoice;

		public global::Allors.Meta.RoleType PreviousObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoicePreviousObjectState;
			}
		} 
		public global::Allors.Meta.RoleType PurchaseInvoiceItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoicePurchaseInvoiceItem;
			}
		} 
		public global::Allors.Meta.RoleType BilledToInternalOrganisation 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoiceBilledToInternalOrganisation;
			}
		} 
		public global::Allors.Meta.RoleType CurrentInvoiceStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoiceCurrentInvoiceStatus;
			}
		} 
		public global::Allors.Meta.RoleType CurrentObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoiceCurrentObjectState;
			}
		} 
		public global::Allors.Meta.RoleType BilledFromParty 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoiceBilledFromParty;
			}
		} 
		public global::Allors.Meta.RoleType PurchaseInvoiceType 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoicePurchaseInvoiceType;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseInvoiceInvoiceStatus;
			}
		} 
		public global::Allors.Meta.RoleType TotalShippingAndHandlingCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalShippingAndHandlingCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType CustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceDescription;
			}
		} 
		public global::Allors.Meta.RoleType ShippingAndHandlingCharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceShippingAndHandlingCharge;
			}
		} 
		public global::Allors.Meta.RoleType TotalFeeCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalFeeCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType Fee 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceFee;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalExVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType CustomerReference 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceCustomerReference;
			}
		} 
		public global::Allors.Meta.RoleType DiscountAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceDiscountAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType AmountPaid 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceAmountPaid;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalDiscount;
			}
		} 
		public global::Allors.Meta.RoleType BillingAccount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceBillingAccount;
			}
		} 
		public global::Allors.Meta.RoleType TotalIncVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalIncVat;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurcharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalSurcharge;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalBasePrice;
			}
		} 
		public global::Allors.Meta.RoleType TotalVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceInvoiceDate;
			}
		} 
		public global::Allors.Meta.RoleType EntryDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceEntryDate;
			}
		} 
		public global::Allors.Meta.RoleType TotalIncVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalIncVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalShippingAndHandling 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalShippingAndHandling;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePriceCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalBasePriceCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType SurchargeAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceSurchargeAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalExVat;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceTerm 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceInvoiceTerm;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurchargeCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalSurchargeCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType InvoiceNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceInvoiceNumber;
			}
		} 
		public global::Allors.Meta.RoleType Message 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceMessage;
			}
		} 
		public global::Allors.Meta.RoleType VatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceVatRegime;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscountCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalDiscountCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalVat;
			}
		} 
		public global::Allors.Meta.RoleType TotalFee 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.InvoiceTotalFee;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType Locale 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.LocalisedLocale;
			}
		} 
		public global::Allors.Meta.RoleType Comment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CommentableComment;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType PrintContent 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PrintablePrintContent;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 

		public global::Allors.Meta.AssociationType SalesAccountingTransactionWhereInvoice 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.SalesAccountingTransactionInvoice;
			}
		} 
		public global::Allors.Meta.AssociationType PaymentApplicationsWhereInvoice 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PaymentApplicationInvoice;
			}
		} 
		public global::Allors.Meta.AssociationType PrintQueuesWherePrintable 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PrintQueuePrintable;
			}
		} 

		public global::Allors.Meta.MethodType Cancel 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.PurchaseInvoiceCancel;
			}
		} 
		public global::Allors.Meta.MethodType Approve 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.PurchaseInvoiceApprove;
			}
		} 
		public global::Allors.Meta.MethodType Ready 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.PurchaseInvoiceReady;
			}
		} 
		public global::Allors.Meta.MethodType CancelInvoice 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.PurchaseInvoiceCancelInvoice;
			}
		} 
		public global::Allors.Meta.MethodType Send 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.PurchaseInvoiceSend;
			}
		} 
		public global::Allors.Meta.MethodType WriteOff 
		{
			get
			{
				return global::Allors.Meta.MethodTypes.PurchaseInvoiceWriteOff;
			}
		} 

	}
}