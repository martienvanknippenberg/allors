// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial interface ServiceEntry :  Commentable,UserInterfaceable,Searchable,SearchResult, Allors.IObjectBase
	{


		global::System.DateTime ThroughDateTime 
		{
			get;
			set;
		}

		bool ExistThroughDateTime{get;}

		void RemoveThroughDateTime();


		EngagementItem EngagementItem
		{ 
			get;
			set;
		}

		bool ExistEngagementItem
		{
			get;
		}

		void RemoveEngagementItem();


		global::System.Boolean IsBillable 
		{
			get;
			set;
		}

		bool ExistIsBillable{get;}

		void RemoveIsBillable();


		global::System.DateTime FromDateTime 
		{
			get;
			set;
		}

		bool ExistFromDateTime{get;}

		void RemoveFromDateTime();


		global::System.String Description 
		{
			get;
			set;
		}

		bool ExistDescription{get;}

		void RemoveDescription();


		WorkEffort WorkEffort
		{ 
			get;
			set;
		}

		bool ExistWorkEffort
		{
			get;
		}

		void RemoveWorkEffort();



		ServiceEntryHeader ServiceEntryHeaderWhereServiceEntry
		{
			get;
		}

		bool ExistServiceEntryHeaderWhereServiceEntry
		{
			get;
		}


		global::Allors.Extent<ServiceEntryBilling> ServiceEntryBillingsWhereServiceEntry
		{ 
			get;
		}

		bool ExistServiceEntryBillingsWhereServiceEntry
		{
			get;
		}

	}

	public class ServiceEntryMeta
	{
		public static readonly ServiceEntryMeta Instance = new ServiceEntryMeta();

		public global::Allors.Meta.Interface ObjectType = global::Allors.Meta.Interfaces.ServiceEntry;

		public global::Allors.Meta.RoleType ThroughDateTime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ServiceEntryThroughDateTime;
			}
		} 
		public global::Allors.Meta.RoleType EngagementItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ServiceEntryEngagementItem;
			}
		} 
		public global::Allors.Meta.RoleType IsBillable 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ServiceEntryIsBillable;
			}
		} 
		public global::Allors.Meta.RoleType FromDateTime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ServiceEntryFromDateTime;
			}
		} 
		public global::Allors.Meta.RoleType Description 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ServiceEntryDescription;
			}
		} 
		public global::Allors.Meta.RoleType WorkEffort 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.ServiceEntryWorkEffort;
			}
		} 
		public global::Allors.Meta.RoleType Comment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CommentableComment;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 

		public global::Allors.Meta.AssociationType ServiceEntryHeaderWhereServiceEntry 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ServiceEntryHeaderServiceEntry;
			}
		} 
		public global::Allors.Meta.AssociationType ServiceEntryBillingsWhereServiceEntry 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.ServiceEntryBillingServiceEntry;
			}
		} 

	}
}