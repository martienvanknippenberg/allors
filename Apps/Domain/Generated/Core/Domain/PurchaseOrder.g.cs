// Allors generated file. 
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	[System.Diagnostics.DebuggerNonUserCode]
	public partial class PurchaseOrder : Allors.ObjectBase , Order
	{
		public static readonly PurchaseOrderMeta Meta = PurchaseOrderMeta.Instance;

		public PurchaseOrder(Allors.IStrategy allors) : base(allors) {}

		public static PurchaseOrder Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (PurchaseOrder) allorsSession.Instantiate(allorsObjectId);		
		}



		virtual public global::Allors.Extent<PurchaseOrderItem> PurchaseOrderItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PurchaseOrderItem);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PurchaseOrderItem, value);
			}
		}

		virtual public void AddPurchaseOrderItem (PurchaseOrderItem value)
		{
			Strategy.AddCompositeRole(Meta.PurchaseOrderItem, value);
		}

		virtual public void RemovePurchaseOrderItem (PurchaseOrderItem value)
		{
			Strategy.RemoveCompositeRole(Meta.PurchaseOrderItem,value);
		}

		virtual public bool ExistPurchaseOrderItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PurchaseOrderItem);
			}
		}

		virtual public void RemovePurchaseOrderItems()
		{
			Strategy.RemoveCompositeRoles(Meta.PurchaseOrderItem);
		}


		virtual public Party PreviousTakenViaSupplier
		{ 
			get
			{
				return (Party) Strategy.GetCompositeRole(Meta.PreviousTakenViaSupplier);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousTakenViaSupplier ,value);
			}
		}

		virtual public bool ExistPreviousTakenViaSupplier
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousTakenViaSupplier);
			}
		}

		virtual public void RemovePreviousTakenViaSupplier()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousTakenViaSupplier);
		}


		virtual public global::Allors.Extent<PurchaseOrderStatus> PaymentStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.PaymentStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.PaymentStatus, value);
			}
		}

		virtual public void AddPaymentStatus (PurchaseOrderStatus value)
		{
			Strategy.AddCompositeRole(Meta.PaymentStatus, value);
		}

		virtual public void RemovePaymentStatus (PurchaseOrderStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.PaymentStatus,value);
		}

		virtual public bool ExistPaymentStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.PaymentStatus);
			}
		}

		virtual public void RemovePaymentStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.PaymentStatus);
		}


		virtual public PurchaseOrderStatus CurrentPaymentStatus
		{ 
			get
			{
				return (PurchaseOrderStatus) Strategy.GetCompositeRole(Meta.CurrentPaymentStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentPaymentStatus ,value);
			}
		}

		virtual public bool ExistCurrentPaymentStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentPaymentStatus);
			}
		}

		virtual public void RemoveCurrentPaymentStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentPaymentStatus);
		}


		virtual public Party TakenViaSupplier
		{ 
			get
			{
				return (Party) Strategy.GetCompositeRole(Meta.TakenViaSupplier);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.TakenViaSupplier ,value);
			}
		}

		virtual public bool ExistTakenViaSupplier
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.TakenViaSupplier);
			}
		}

		virtual public void RemoveTakenViaSupplier()
		{
			Strategy.RemoveCompositeRole(Meta.TakenViaSupplier);
		}


		virtual public PurchaseOrderObjectState CurrentObjectState
		{ 
			get
			{
				return (PurchaseOrderObjectState) Strategy.GetCompositeRole(Meta.CurrentObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentObjectState ,value);
			}
		}

		virtual public bool ExistCurrentObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentObjectState);
			}
		}

		virtual public void RemoveCurrentObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentObjectState);
		}


		virtual public PurchaseOrderStatus CurrentShipmentStatus
		{ 
			get
			{
				return (PurchaseOrderStatus) Strategy.GetCompositeRole(Meta.CurrentShipmentStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentShipmentStatus ,value);
			}
		}

		virtual public bool ExistCurrentShipmentStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentShipmentStatus);
			}
		}

		virtual public void RemoveCurrentShipmentStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentShipmentStatus);
		}


		virtual public ContactMechanism TakenViaContactMechanism
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.TakenViaContactMechanism);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.TakenViaContactMechanism ,value);
			}
		}

		virtual public bool ExistTakenViaContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.TakenViaContactMechanism);
			}
		}

		virtual public void RemoveTakenViaContactMechanism()
		{
			Strategy.RemoveCompositeRole(Meta.TakenViaContactMechanism);
		}


		virtual public global::Allors.Extent<PurchaseOrderStatus> OrderStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.OrderStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.OrderStatus, value);
			}
		}

		virtual public void AddOrderStatus (PurchaseOrderStatus value)
		{
			Strategy.AddCompositeRole(Meta.OrderStatus, value);
		}

		virtual public void RemoveOrderStatus (PurchaseOrderStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.OrderStatus,value);
		}

		virtual public bool ExistOrderStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.OrderStatus);
			}
		}

		virtual public void RemoveOrderStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.OrderStatus);
		}


		virtual public ContactMechanism BillToContactMechanism
		{ 
			get
			{
				return (ContactMechanism) Strategy.GetCompositeRole(Meta.BillToContactMechanism);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillToContactMechanism ,value);
			}
		}

		virtual public bool ExistBillToContactMechanism
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillToContactMechanism);
			}
		}

		virtual public void RemoveBillToContactMechanism()
		{
			Strategy.RemoveCompositeRole(Meta.BillToContactMechanism);
		}


		virtual public global::Allors.Extent<PurchaseOrderStatus> ShipmentStatuses
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.ShipmentStatus);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.ShipmentStatus, value);
			}
		}

		virtual public void AddShipmentStatus (PurchaseOrderStatus value)
		{
			Strategy.AddCompositeRole(Meta.ShipmentStatus, value);
		}

		virtual public void RemoveShipmentStatus (PurchaseOrderStatus value)
		{
			Strategy.RemoveCompositeRole(Meta.ShipmentStatus,value);
		}

		virtual public bool ExistShipmentStatuses
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.ShipmentStatus);
			}
		}

		virtual public void RemoveShipmentStatuses()
		{
			Strategy.RemoveCompositeRoles(Meta.ShipmentStatus);
		}


		virtual public InternalOrganisation ShipToBuyer
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeRole(Meta.ShipToBuyer);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShipToBuyer ,value);
			}
		}

		virtual public bool ExistShipToBuyer
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShipToBuyer);
			}
		}

		virtual public void RemoveShipToBuyer()
		{
			Strategy.RemoveCompositeRole(Meta.ShipToBuyer);
		}


		virtual public PurchaseOrderStatus CurrentOrderStatus
		{ 
			get
			{
				return (PurchaseOrderStatus) Strategy.GetCompositeRole(Meta.CurrentOrderStatus);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CurrentOrderStatus ,value);
			}
		}

		virtual public bool ExistCurrentOrderStatus
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CurrentOrderStatus);
			}
		}

		virtual public void RemoveCurrentOrderStatus()
		{
			Strategy.RemoveCompositeRole(Meta.CurrentOrderStatus);
		}


		virtual public Facility Facility
		{ 
			get
			{
				return (Facility) Strategy.GetCompositeRole(Meta.Facility);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Facility ,value);
			}
		}

		virtual public bool ExistFacility
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Facility);
			}
		}

		virtual public void RemoveFacility()
		{
			Strategy.RemoveCompositeRole(Meta.Facility);
		}


		virtual public PostalAddress ShipToAddress
		{ 
			get
			{
				return (PostalAddress) Strategy.GetCompositeRole(Meta.ShipToAddress);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShipToAddress ,value);
			}
		}

		virtual public bool ExistShipToAddress
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShipToAddress);
			}
		}

		virtual public void RemoveShipToAddress()
		{
			Strategy.RemoveCompositeRole(Meta.ShipToAddress);
		}


		virtual public PurchaseOrderObjectState PreviousObjectState
		{ 
			get
			{
				return (PurchaseOrderObjectState) Strategy.GetCompositeRole(Meta.PreviousObjectState);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.PreviousObjectState ,value);
			}
		}

		virtual public bool ExistPreviousObjectState
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.PreviousObjectState);
			}
		}

		virtual public void RemovePreviousObjectState()
		{
			Strategy.RemoveCompositeRole(Meta.PreviousObjectState);
		}


		virtual public InternalOrganisation BillToPurchaser
		{ 
			get
			{
				return (InternalOrganisation) Strategy.GetCompositeRole(Meta.BillToPurchaser);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.BillToPurchaser ,value);
			}
		}

		virtual public bool ExistBillToPurchaser
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.BillToPurchaser);
			}
		}

		virtual public void RemoveBillToPurchaser()
		{
			Strategy.RemoveCompositeRole(Meta.BillToPurchaser);
		}


		virtual public Currency CustomerCurrency
		{ 
			get
			{
				return (Currency) Strategy.GetCompositeRole(Meta.CustomerCurrency);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.CustomerCurrency ,value);
			}
		}

		virtual public bool ExistCustomerCurrency
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.CustomerCurrency);
			}
		}

		virtual public void RemoveCustomerCurrency()
		{
			Strategy.RemoveCompositeRole(Meta.CustomerCurrency);
		}



		virtual public global::System.Decimal? TotalBasePriceCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalBasePriceCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePriceCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalBasePriceCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePriceCustomerCurrency);
			}
		}

		virtual public void RemoveTotalBasePriceCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePriceCustomerCurrency);
		}



		virtual public global::System.Decimal? TotalIncVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalIncVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalIncVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalIncVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVatCustomerCurrency);
		}



		virtual public global::System.Decimal? TotalDiscountCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalDiscountCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscountCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalDiscountCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscountCustomerCurrency);
			}
		}

		virtual public void RemoveTotalDiscountCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscountCustomerCurrency);
		}



		virtual public global::System.String CustomerReference 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.CustomerReference);
			}
			set
			{
				Strategy.SetUnitRole(Meta.CustomerReference, value);
			}
		}

		virtual public bool ExistCustomerReference{
			get
			{
				return Strategy.ExistUnitRole(Meta.CustomerReference);
			}
		}

		virtual public void RemoveCustomerReference()
		{
			Strategy.RemoveUnitRole(Meta.CustomerReference);
		}


		virtual public Fee Fee
		{ 
			get
			{
				return (Fee) Strategy.GetCompositeRole(Meta.Fee);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Fee ,value);
			}
		}

		virtual public bool ExistFee
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Fee);
			}
		}

		virtual public void RemoveFee()
		{
			Strategy.RemoveCompositeRole(Meta.Fee);
		}



		virtual public global::System.Decimal? TotalExVat 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalExVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVat, value);
			}
		}

		virtual public bool ExistTotalExVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVat);
			}
		}

		virtual public void RemoveTotalExVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVat);
		}


		virtual public global::Allors.Extent<OrderTerm> OrderTerms
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.OrderTerm);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.OrderTerm, value);
			}
		}

		virtual public void AddOrderTerm (OrderTerm value)
		{
			Strategy.AddCompositeRole(Meta.OrderTerm, value);
		}

		virtual public void RemoveOrderTerm (OrderTerm value)
		{
			Strategy.RemoveCompositeRole(Meta.OrderTerm,value);
		}

		virtual public bool ExistOrderTerms
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.OrderTerm);
			}
		}

		virtual public void RemoveOrderTerms()
		{
			Strategy.RemoveCompositeRoles(Meta.OrderTerm);
		}



		virtual public global::System.Decimal? TotalVat 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVat, value);
			}
		}

		virtual public bool ExistTotalVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVat);
			}
		}

		virtual public void RemoveTotalVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalVat);
		}



		virtual public global::System.Decimal? TotalSurcharge 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalSurcharge);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurcharge, value);
			}
		}

		virtual public bool ExistTotalSurcharge{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurcharge);
			}
		}

		virtual public void RemoveTotalSurcharge()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurcharge);
		}


		virtual public global::Allors.Extent<OrderItem> ValidOrderItems
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.ValidOrderItem);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.ValidOrderItem, value);
			}
		}

		virtual public void AddValidOrderItem (OrderItem value)
		{
			Strategy.AddCompositeRole(Meta.ValidOrderItem, value);
		}

		virtual public void RemoveValidOrderItem (OrderItem value)
		{
			Strategy.RemoveCompositeRole(Meta.ValidOrderItem,value);
		}

		virtual public bool ExistValidOrderItems
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.ValidOrderItem);
			}
		}

		virtual public void RemoveValidOrderItems()
		{
			Strategy.RemoveCompositeRoles(Meta.ValidOrderItem);
		}



		virtual public global::System.String OrderNumber 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.OrderNumber);
			}
			set
			{
				Strategy.SetUnitRole(Meta.OrderNumber, value);
			}
		}

		virtual public bool ExistOrderNumber{
			get
			{
				return Strategy.ExistUnitRole(Meta.OrderNumber);
			}
		}

		virtual public void RemoveOrderNumber()
		{
			Strategy.RemoveUnitRole(Meta.OrderNumber);
		}



		virtual public global::System.Decimal? TotalVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalVatCustomerCurrency);
		}



		virtual public global::System.Decimal? TotalDiscount 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalDiscount);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalDiscount, value);
			}
		}

		virtual public bool ExistTotalDiscount{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalDiscount);
			}
		}

		virtual public void RemoveTotalDiscount()
		{
			Strategy.RemoveUnitRole(Meta.TotalDiscount);
		}



		virtual public global::System.String Message 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Message);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Message, value);
			}
		}

		virtual public bool ExistMessage{
			get
			{
				return Strategy.ExistUnitRole(Meta.Message);
			}
		}

		virtual public void RemoveMessage()
		{
			Strategy.RemoveUnitRole(Meta.Message);
		}



		virtual public global::System.Decimal? TotalShippingAndHandlingCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalShippingAndHandlingCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency);
			}
		}

		virtual public void RemoveTotalShippingAndHandlingCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalShippingAndHandlingCustomerCurrency);
		}



		virtual public global::System.DateTime? EntryDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.EntryDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.EntryDate, value);
			}
		}

		virtual public bool ExistEntryDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.EntryDate);
			}
		}

		virtual public void RemoveEntryDate()
		{
			Strategy.RemoveUnitRole(Meta.EntryDate);
		}


		virtual public DiscountAdjustment DiscountAdjustment
		{ 
			get
			{
				return (DiscountAdjustment) Strategy.GetCompositeRole(Meta.DiscountAdjustment);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.DiscountAdjustment ,value);
			}
		}

		virtual public bool ExistDiscountAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.DiscountAdjustment);
			}
		}

		virtual public void RemoveDiscountAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.DiscountAdjustment);
		}


		virtual public OrderKind OrderKind
		{ 
			get
			{
				return (OrderKind) Strategy.GetCompositeRole(Meta.OrderKind);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.OrderKind ,value);
			}
		}

		virtual public bool ExistOrderKind
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.OrderKind);
			}
		}

		virtual public void RemoveOrderKind()
		{
			Strategy.RemoveCompositeRole(Meta.OrderKind);
		}



		virtual public global::System.Decimal? TotalIncVat 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalIncVat);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalIncVat, value);
			}
		}

		virtual public bool ExistTotalIncVat{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalIncVat);
			}
		}

		virtual public void RemoveTotalIncVat()
		{
			Strategy.RemoveUnitRole(Meta.TotalIncVat);
		}



		virtual public global::System.Decimal? TotalSurchargeCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalSurchargeCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalSurchargeCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalSurchargeCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalSurchargeCustomerCurrency);
			}
		}

		virtual public void RemoveTotalSurchargeCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalSurchargeCustomerCurrency);
		}


		virtual public VatRegime VatRegime
		{ 
			get
			{
				return (VatRegime) Strategy.GetCompositeRole(Meta.VatRegime);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.VatRegime ,value);
			}
		}

		virtual public bool ExistVatRegime
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.VatRegime);
			}
		}

		virtual public void RemoveVatRegime()
		{
			Strategy.RemoveCompositeRole(Meta.VatRegime);
		}



		virtual public global::System.Decimal? TotalFeeCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalFeeCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalFeeCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalFeeCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalFeeCustomerCurrency);
			}
		}

		virtual public void RemoveTotalFeeCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalFeeCustomerCurrency);
		}



		virtual public global::System.Decimal? TotalShippingAndHandling 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalShippingAndHandling);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalShippingAndHandling, value);
			}
		}

		virtual public bool ExistTotalShippingAndHandling{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalShippingAndHandling);
			}
		}

		virtual public void RemoveTotalShippingAndHandling()
		{
			Strategy.RemoveUnitRole(Meta.TotalShippingAndHandling);
		}


		virtual public ShippingAndHandlingCharge ShippingAndHandlingCharge
		{ 
			get
			{
				return (ShippingAndHandlingCharge) Strategy.GetCompositeRole(Meta.ShippingAndHandlingCharge);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.ShippingAndHandlingCharge ,value);
			}
		}

		virtual public bool ExistShippingAndHandlingCharge
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.ShippingAndHandlingCharge);
			}
		}

		virtual public void RemoveShippingAndHandlingCharge()
		{
			Strategy.RemoveCompositeRole(Meta.ShippingAndHandlingCharge);
		}



		virtual public global::System.DateTime? OrderDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.OrderDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.OrderDate, value);
			}
		}

		virtual public bool ExistOrderDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.OrderDate);
			}
		}

		virtual public void RemoveOrderDate()
		{
			Strategy.RemoveUnitRole(Meta.OrderDate);
		}



		virtual public global::System.Decimal? TotalExVatCustomerCurrency 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalExVatCustomerCurrency);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalExVatCustomerCurrency, value);
			}
		}

		virtual public bool ExistTotalExVatCustomerCurrency{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalExVatCustomerCurrency);
			}
		}

		virtual public void RemoveTotalExVatCustomerCurrency()
		{
			Strategy.RemoveUnitRole(Meta.TotalExVatCustomerCurrency);
		}



		virtual public global::System.DateTime? DeliveryDate 
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.DeliveryDate);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DeliveryDate, value);
			}
		}

		virtual public bool ExistDeliveryDate{
			get
			{
				return Strategy.ExistUnitRole(Meta.DeliveryDate);
			}
		}

		virtual public void RemoveDeliveryDate()
		{
			Strategy.RemoveUnitRole(Meta.DeliveryDate);
		}



		virtual public global::System.Decimal? TotalBasePrice 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalBasePrice);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalBasePrice, value);
			}
		}

		virtual public bool ExistTotalBasePrice{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalBasePrice);
			}
		}

		virtual public void RemoveTotalBasePrice()
		{
			Strategy.RemoveUnitRole(Meta.TotalBasePrice);
		}



		virtual public global::System.Decimal? TotalFee 
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.TotalFee);
			}
			set
			{
				Strategy.SetUnitRole(Meta.TotalFee, value);
			}
		}

		virtual public bool ExistTotalFee{
			get
			{
				return Strategy.ExistUnitRole(Meta.TotalFee);
			}
		}

		virtual public void RemoveTotalFee()
		{
			Strategy.RemoveUnitRole(Meta.TotalFee);
		}


		virtual public SurchargeAdjustment SurchargeAdjustment
		{ 
			get
			{
				return (SurchargeAdjustment) Strategy.GetCompositeRole(Meta.SurchargeAdjustment);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SurchargeAdjustment ,value);
			}
		}

		virtual public bool ExistSurchargeAdjustment
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SurchargeAdjustment);
			}
		}

		virtual public void RemoveSurchargeAdjustment()
		{
			Strategy.RemoveCompositeRole(Meta.SurchargeAdjustment);
		}



		virtual public global::System.String DisplayName 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.DisplayName);
			}
			set
			{
				Strategy.SetUnitRole(Meta.DisplayName, value);
			}
		}

		virtual public bool ExistDisplayName{
			get
			{
				return Strategy.ExistUnitRole(Meta.DisplayName);
			}
		}

		virtual public void RemoveDisplayName()
		{
			Strategy.RemoveUnitRole(Meta.DisplayName);
		}


		virtual public global::Allors.Extent<Permission> DeniedPermissions
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.DeniedPermission);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.DeniedPermission, value);
			}
		}

		virtual public void AddDeniedPermission (Permission value)
		{
			Strategy.AddCompositeRole(Meta.DeniedPermission, value);
		}

		virtual public void RemoveDeniedPermission (Permission value)
		{
			Strategy.RemoveCompositeRole(Meta.DeniedPermission,value);
		}

		virtual public bool ExistDeniedPermissions
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.DeniedPermission);
			}
		}

		virtual public void RemoveDeniedPermissions()
		{
			Strategy.RemoveCompositeRoles(Meta.DeniedPermission);
		}


		virtual public global::Allors.Extent<SecurityToken> SecurityTokens
		{ 
			get
			{
				return Strategy.GetCompositeRoles(Meta.SecurityToken);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.SecurityToken, value);
			}
		}

		virtual public void AddSecurityToken (SecurityToken value)
		{
			Strategy.AddCompositeRole(Meta.SecurityToken, value);
		}

		virtual public void RemoveSecurityToken (SecurityToken value)
		{
			Strategy.RemoveCompositeRole(Meta.SecurityToken,value);
		}

		virtual public bool ExistSecurityTokens
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.SecurityToken);
			}
		}

		virtual public void RemoveSecurityTokens()
		{
			Strategy.RemoveCompositeRoles(Meta.SecurityToken);
		}



		virtual public global::System.String PrintContent 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PrintContent);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PrintContent, value);
			}
		}

		virtual public bool ExistPrintContent{
			get
			{
				return Strategy.ExistUnitRole(Meta.PrintContent);
			}
		}

		virtual public void RemovePrintContent()
		{
			Strategy.RemoveUnitRole(Meta.PrintContent);
		}



		virtual public global::System.Guid? UniqueId 
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.UniqueId);
			}
			set
			{
				Strategy.SetUnitRole(Meta.UniqueId, value);
			}
		}

		virtual public bool ExistUniqueId{
			get
			{
				return Strategy.ExistUnitRole(Meta.UniqueId);
			}
		}

		virtual public void RemoveUniqueId()
		{
			Strategy.RemoveUnitRole(Meta.UniqueId);
		}


		virtual public SearchData SearchData
		{ 
			get
			{
				return (SearchData) Strategy.GetCompositeRole(Meta.SearchData);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.SearchData ,value);
			}
		}

		virtual public bool ExistSearchData
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.SearchData);
			}
		}

		virtual public void RemoveSearchData()
		{
			Strategy.RemoveCompositeRole(Meta.SearchData);
		}



		virtual public global::System.String Comment 
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Comment);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Comment, value);
			}
		}

		virtual public bool ExistComment{
			get
			{
				return Strategy.ExistUnitRole(Meta.Comment);
			}
		}

		virtual public void RemoveComment()
		{
			Strategy.RemoveUnitRole(Meta.Comment);
		}


		virtual public Locale Locale
		{ 
			get
			{
				return (Locale) Strategy.GetCompositeRole(Meta.Locale);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Locale ,value);
			}
		}

		virtual public bool ExistLocale
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Locale);
			}
		}

		virtual public void RemoveLocale()
		{
			Strategy.RemoveCompositeRole(Meta.Locale);
		}



		virtual public global::Allors.Extent<PurchaseShipment> PurchaseShipmentsWherePurchaseOrder
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PurchaseShipmentsWherePurchaseOrder);
			}
		}

		virtual public bool ExistPurchaseShipmentsWherePurchaseOrder
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PurchaseShipmentsWherePurchaseOrder);
			}
		}


		virtual public global::Allors.Extent<OrderItem> OrderItemsWhereCorrespondingPurchaseOrder
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.OrderItemsWhereCorrespondingPurchaseOrder);
			}
		}

		virtual public bool ExistOrderItemsWhereCorrespondingPurchaseOrder
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.OrderItemsWhereCorrespondingPurchaseOrder);
			}
		}


		virtual public global::Allors.Extent<PrintQueue> PrintQueuesWherePrintable
		{ 
			get
			{
				return Strategy.GetCompositeAssociations(Meta.PrintQueuesWherePrintable);
			}
		}

		virtual public bool ExistPrintQueuesWherePrintable
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.PrintQueuesWherePrintable);
			}
		}

	}

	public class PurchaseOrderMeta
	{
		public static readonly PurchaseOrderMeta Instance = new PurchaseOrderMeta();

		public global::Allors.Meta.Class ObjectType = global::Allors.Meta.Classes.PurchaseOrder;

		public global::Allors.Meta.RoleType PurchaseOrderItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderPurchaseOrderItem;
			}
		} 
		public global::Allors.Meta.RoleType PreviousTakenViaSupplier 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderPreviousTakenViaSupplier;
			}
		} 
		public global::Allors.Meta.RoleType PaymentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderPaymentStatus;
			}
		} 
		public global::Allors.Meta.RoleType CurrentPaymentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderCurrentPaymentStatus;
			}
		} 
		public global::Allors.Meta.RoleType TakenViaSupplier 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderTakenViaSupplier;
			}
		} 
		public global::Allors.Meta.RoleType CurrentObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderCurrentObjectState;
			}
		} 
		public global::Allors.Meta.RoleType CurrentShipmentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderCurrentShipmentStatus;
			}
		} 
		public global::Allors.Meta.RoleType TakenViaContactMechanism 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderTakenViaContactMechanism;
			}
		} 
		public global::Allors.Meta.RoleType OrderStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderOrderStatus;
			}
		} 
		public global::Allors.Meta.RoleType BillToContactMechanism 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderBillToContactMechanism;
			}
		} 
		public global::Allors.Meta.RoleType ShipmentStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderShipmentStatus;
			}
		} 
		public global::Allors.Meta.RoleType ShipToBuyer 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderShipToBuyer;
			}
		} 
		public global::Allors.Meta.RoleType CurrentOrderStatus 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderCurrentOrderStatus;
			}
		} 
		public global::Allors.Meta.RoleType Facility 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderFacility;
			}
		} 
		public global::Allors.Meta.RoleType ShipToAddress 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderShipToAddress;
			}
		} 
		public global::Allors.Meta.RoleType PreviousObjectState 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderPreviousObjectState;
			}
		} 
		public global::Allors.Meta.RoleType BillToPurchaser 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PurchaseOrderBillToPurchaser;
			}
		} 
		public global::Allors.Meta.RoleType CustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePriceCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalBasePriceCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalIncVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalIncVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscountCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalDiscountCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType CustomerReference 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderCustomerReference;
			}
		} 
		public global::Allors.Meta.RoleType Fee 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderFee;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalExVat;
			}
		} 
		public global::Allors.Meta.RoleType OrderTerm 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderOrderTerm;
			}
		} 
		public global::Allors.Meta.RoleType TotalVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalVat;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurcharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalSurcharge;
			}
		} 
		public global::Allors.Meta.RoleType ValidOrderItem 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderValidOrderItem;
			}
		} 
		public global::Allors.Meta.RoleType OrderNumber 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderOrderNumber;
			}
		} 
		public global::Allors.Meta.RoleType TotalVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalDiscount 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalDiscount;
			}
		} 
		public global::Allors.Meta.RoleType Message 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderMessage;
			}
		} 
		public global::Allors.Meta.RoleType TotalShippingAndHandlingCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalShippingAndHandlingCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType EntryDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderEntryDate;
			}
		} 
		public global::Allors.Meta.RoleType DiscountAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderDiscountAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType OrderKind 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderOrderKind;
			}
		} 
		public global::Allors.Meta.RoleType TotalIncVat 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalIncVat;
			}
		} 
		public global::Allors.Meta.RoleType TotalSurchargeCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalSurchargeCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType VatRegime 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderVatRegime;
			}
		} 
		public global::Allors.Meta.RoleType TotalFeeCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalFeeCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType TotalShippingAndHandling 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalShippingAndHandling;
			}
		} 
		public global::Allors.Meta.RoleType ShippingAndHandlingCharge 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderShippingAndHandlingCharge;
			}
		} 
		public global::Allors.Meta.RoleType OrderDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderOrderDate;
			}
		} 
		public global::Allors.Meta.RoleType TotalExVatCustomerCurrency 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalExVatCustomerCurrency;
			}
		} 
		public global::Allors.Meta.RoleType DeliveryDate 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderDeliveryDate;
			}
		} 
		public global::Allors.Meta.RoleType TotalBasePrice 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalBasePrice;
			}
		} 
		public global::Allors.Meta.RoleType TotalFee 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderTotalFee;
			}
		} 
		public global::Allors.Meta.RoleType SurchargeAdjustment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.OrderSurchargeAdjustment;
			}
		} 
		public global::Allors.Meta.RoleType DisplayName 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UserInterfaceableDisplayName;
			}
		} 
		public global::Allors.Meta.RoleType DeniedPermission 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectDeniedPermission;
			}
		} 
		public global::Allors.Meta.RoleType SecurityToken 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.AccessControlledObjectSecurityToken;
			}
		} 
		public global::Allors.Meta.RoleType PrintContent 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.PrintablePrintContent;
			}
		} 
		public global::Allors.Meta.RoleType UniqueId 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.UniquelyIdentifiableUniqueId;
			}
		} 
		public global::Allors.Meta.RoleType SearchData 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.SearchableSearchData;
			}
		} 
		public global::Allors.Meta.RoleType Comment 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.CommentableComment;
			}
		} 
		public global::Allors.Meta.RoleType Locale 
		{
			get
			{
				return global::Allors.Meta.RoleTypes.LocalisedLocale;
			}
		} 

		public global::Allors.Meta.AssociationType PurchaseShipmentsWherePurchaseOrder 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PurchaseShipmentPurchaseOrder;
			}
		} 
		public global::Allors.Meta.AssociationType OrderItemsWhereCorrespondingPurchaseOrder 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.OrderItemCorrespondingPurchaseOrder;
			}
		} 
		public global::Allors.Meta.AssociationType PrintQueuesWherePrintable 
		{
			get
			{
				return global::Allors.Meta.AssociationTypes.PrintQueuePrintable;
			}
		} 

	}
}